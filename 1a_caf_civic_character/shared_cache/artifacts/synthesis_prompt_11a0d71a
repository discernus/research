You are conducting a comprehensive computational social science analysis. Your task is to produce an academic-quality research report that extracts maximum insights from the provided data.

# RESEARCH CONTEXT

**Experiment Metadata:**
**Experiment Metadata**: Available in experiment configuration

**Framework Specification:**
# Civic Analysis Framework (CAF) v10.0

---

## Part 1: The Scholarly Document

### Section 1: Abstract & *Raison d'Ãªtre*

**What is this framework?**
The Civic Analysis Framework (CAF) provides a systematic approach to evaluating the civic character of political discourse. It analyzes the moral character displayed by speakers, based on Aristotelian virtue ethics and contemporary civic republican theory. The framework evaluates what civic virtues and vices speakers demonstrate through their rhetorical choices, focusing on the fundamental tensions between competing values.

**What problem does it solve?**
Democratic governance depends on civic discourse that embodies fundamental virtues. However, political communication often involves strategic tensions where speakers simultaneously appeal to competing virtues and their pathological counterparts. This framework provides a rigorous methodology for evaluating these tensions and assessing the overall civic character of political discourse....

**Experiment Configuration:**
Research objectives not specified.

**Corpus Information:**
**Corpus Manifest**:
- **Name**: CAF Civic Character Political Speeches Corpus
- **Documents**: 8
- **Date Range**: 1963-2025

**Document Details**:
- **john_lewis_1963_march_on_washington_ab348df3.txt**: Unknown Speaker (Unknown Party, Unknown Year) - Unknown Style
- **john_mccain_2008_concession_ff9b26f2.txt**: Unknown Speaker (Unknown Party, Unknown Year) - Unknown Style
- **steve_king_2017_house_floor_738780d9.txt**: Unknown Speaker (Unknown Party, Unknown Year) - Unknown Style
- **cory_booker_2018_first_step_act_0c32812a.txt**: Unknown Speaker (Unknown Party, Unknown Year) - Unknown Style
- **mitt_romney_2020_impeachment_9ebec73f.txt**: Unknown Speaker (Unknown Party, Unknown Year) - Unknown Style
- **jd_vance_2022_natcon_conference_516a3c9c.txt**: Unknown Speaker (Unknown Party, Unknown Year) - Unknown Style
- **bernie_sanders_2025_fighting_oligarchy_261b893a.txt**: Unknown Speaker (Unknown Party, Unknown Year) - Unknown Style
- **alexandria_ocasio_cortez_2025_fighting_oligarchy_1121e4ae.txt**: Unknown Speaker (Unknown Party, Unknown Year) - Unknown Style

**Complete Research Data:**
Complete Statistical Results (format into Markdown tables as instructed):
{
  "status": "completed",
  "stats_hash": "7c526a711a00a2fcfd3876c739e422f092c02babd4be9a100e69d040ee0d792a",
  "functions_generated": 7,
  "statistical_results": {
    "generation_metadata": {
      "status": "success",
      "functions_generated": 7,
      "output_file": "automatedstatisticalanalysisagent_functions.py",
      "module_size": 22842,
      "function_code_content": "\"\"\"\nAutomated Statistical Analysis Functions\n========================================\n\nGenerated by AutomatedStatisticalAnalysisAgent for experiment: caf_civic_character_pattern_analysis\nDescription: Statistical analysis experiment\nGenerated: 2025-08-25T12:53:24.327279+00:00\n\nThis module contains automatically generated statistical analysis functions\nfor comprehensive data analysis including ANOVA, correlations, reliability,\nand hypothesis testing as appropriate for the research questions.\n\"\"\"\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as stats\nfrom typing import Dict, Any, Optional, List, Tuple\nimport warnings\n\n# Suppress common statistical warnings for cleaner output\nwarnings.filterwarnings('ignore', category=RuntimeWarning)\n\n\ndef _get_speaker_metadata(data):\n    \"\"\"\n    Internal helper to identify speakers and add metadata to the DataFrame.\n\n    This function first attempts to load a `corpus_manifest.json` file from the\n    current directory. The manifest is expected to be a dictionary mapping\n    'document_name' to a dictionary of metadata (e.g., {'speaker': 'John Doe', 'style': 'populist'}).\n\n    If the manifest is not found or is invalid, it gracefully falls back to parsing\n    the speaker's name from the 'document_name' column. The parsing logic assumes\n    the name consists of the parts of the filename before a four-digit year.\n    This handles names like 'steve_king' and 'alexandria_ocasio_cortez'.\n\n    Args:\n        data (pd.DataFrame): The input DataFrame with a 'document_name' column.\n\n    Returns:\n        pd.DataFrame: The DataFrame with an added 'speaker' column and any other\n                      metadata found in the manifest. Returns the original DataFrame\n                      if the 'speaker' column cannot be created.\n    \"\"\"\n    import pandas as pd\n    import json\n    import re\n\n    if 'document_name' not in data.columns:\n        return data\n\n    data_with_meta = data.copy()\n\n    try:\n        with open('corpus_manifest.json', 'r') as f:\n            manifest = json.load(f)\n        \n        # Assuming manifest is a dict like: {\"doc_name.txt\": {\"speaker\": \"...\", \"style\": \"...\"}}\n        meta_df = pd.DataFrame.from_dict(manifest, orient='index')\n        meta_df.index.name = 'document_name'\n        data_with_meta = data_with_meta.merge(meta_df, on='document_name', how='left')\n\n    except (FileNotFoundError, json.JSONDecodeError, KeyError):\n        # Graceful fallback to filename parsing\n        def extract_speaker_from_filename(filename):\n            if not isinstance(filename, str):\n                return \"unknown_speaker\"\n            # Find all parts before a 4-digit year-like number\n            match = re.match(r'([a-zA-Z_]+?)_(\\d{4})', filename)\n            if match:\n                return match.group(1)\n            # Fallback for filenames without a year\n            return '_'.join(filename.split('_')[:2])\n\n        data_with_meta['speaker'] = data_with_meta['document_name'].apply(extract_speaker_from_filename)\n\n    return data_with_meta\n\ndef calculate_derived_metrics(data, **kwargs):\n    \"\"\"\n    Calculates all derived metrics as specified in the CAF v10.0 framework.\n\n    This function computes the five Character Tension Indices and the final\n    Salience-Weighted Civic Character Index. It uses the exact formulas\n    from the framework specification, operating directly on the provided\n    DataFrame columns.\n\n    Statistical Methodology:\n    - Tension Indices: For each axis, `Tension = min(Virtue_Score, Vice_Score) * abs(Virtue_Salience - Vice_Salience)`.\n      This captures the degree of strategic contradiction, penalizing cases where two opposing, high-intensity\n      themes are used with very different levels of emphasis.\n    - Civic Character Index: `(Sum(Virtue * Salience) - Sum(Vice * Salience)) / Total_Salience`. This provides a\n      normalized, weighted summary of the speaker's overall civic character, ranging from -1.0 (vice-dominant)\n      to +1.0 (virtue-dominant). A small epsilon (0.001) is added to the denominator to prevent division by zero.\n\n    Args:\n        data (pd.DataFrame): DataFrame containing the raw and salience scores for all 10 dimensions.\n        **kwargs: Additional parameters (unused).\n\n    Returns:\n        pd.DataFrame: The original DataFrame with added columns for each derived metric, or None on error.\n    \"\"\"\n    import pandas as pd\n    import numpy as np\n    \n    try:\n        df = data.copy()\n\n        # Define virtue and vice dimensions\n        virtues = ['dignity', 'truth', 'justice', 'hope', 'pragmatism']\n        vices = ['tribalism', 'manipulation', 'resentment', 'fear', 'fantasy']\n        axes = list(zip(virtues, vices))\n\n        # Calculate Tension Indices\n        df['identity_tension'] = np.minimum(df['dignity_raw'], df['tribalism_raw']) * np.abs(df['dignity_salience'] - df['tribalism_salience'])\n        df['truth_tension'] = np.minimum(df['truth_raw'], df['manipulation_raw']) * np.abs(df['truth_salience'] - df['manipulation_salience'])\n        df['justice_tension'] = np.minimum(df['justice_raw'], df['resentment_raw']) * np.abs(df['justice_salience'] - df['resentment_salience'])\n        df['emotional_tension'] = np.minimum(df['hope_raw'], df['fear_raw']) * np.abs(df['hope_salience'] - df['fear_salience'])\n        df['reality_tension'] = np.minimum(df['pragmatism_raw'], df['fantasy_raw']) * np.abs(df['pragmatism_salience'] - df['fantasy_salience'])\n\n        # Calculate Salience-Weighted Civic Character Index\n        weighted_virtue_score = sum(df[f'{dim}_raw'] * df[f'{dim}_salience'] for dim in virtues)\n        weighted_vice_score = sum(df[f'{dim}_raw'] * df[f'{dim}_salience'] for dim in vices)\n        \n        virtue_salience_total = sum(df[f'{dim}_salience'] for dim in virtues)\n        vice_salience_total = sum(df[f'{dim}_salience'] for dim in vices)\n        combined_salience_total = virtue_salience_total + vice_salience_total\n\n        # Add intermediate calculations for clarity\n        df['weighted_virtue_score'] = weighted_virtue_score\n        df['weighted_vice_score'] = weighted_vice_score\n        df['combined_salience_total'] = combined_salience_total\n\n        # Add a small epsilon to the denominator to avoid division by zero\n        df['civic_character_index'] = (weighted_virtue_score - weighted_vice_score) / (combined_salience_total + 0.001)\n\n        return df\n\n    except Exception:\n        return None\n\ndef get_speaker_character_profiles(data, **kwargs):\n    \"\"\"\n    Generates character profiles for each speaker by aggregating their scores.\n\n    This function addresses Research Questions 1 and 2 by creating a \"character signature\"\n    for each speaker. It first identifies speakers using the helper function `_get_speaker_metadata`.\n    Then, it groups the data by speaker and calculates the mean for all raw scores, salience scores,\n    and derived metrics (tension and civic character index).\n\n    Statistical Methodology:\n    The function uses grouping and aggregation (mean) to summarize the central tendency of each\n    speaker's rhetorical patterns across multiple documents. The resulting table provides a\n    comparative overview of how different speakers score on each dimension of the CAF framework.\n\n    Args:\n        data (pd.DataFrame): DataFrame with analysis results.\n        **kwargs: Additional parameters (unused).\n\n    Returns:\n        pd.DataFrame: A DataFrame where each row is a speaker and columns are the mean\n                      scores for each dimension and derived metric. Returns None on error.\n    \"\"\"\n    import pandas as pd\n    import numpy as np\n    \n    try:\n        # First, calculate derived metrics as they are needed for the profile\n        data_with_derived = calculate_derived_metrics(data)\n        if data_with_derived is None:\n            return None\n\n        # Then, get speaker metadata\n        df = _get_speaker_metadata(data_with_derived)\n        if 'speaker' not in df.columns:\n            return None # Cannot proceed without speaker identification\n\n        # Define all numeric columns to aggregate\n        score_cols = [col for col in df.columns if '_raw' in col or '_salience' in col]\n        derived_cols = [\n            'identity_tension', 'truth_tension', 'justice_tension', \n            'emotional_tension', 'reality_tension', 'civic_character_index'\n        ]\n        all_metrics_cols = score_cols + derived_cols\n        \n        # Ensure all columns exist before grouping\n        cols_to_aggregate = [col for col in all_metrics_cols if col in df.columns]\n        if not cols_to_aggregate:\n            return None\n\n        speaker_profiles = df.groupby('speaker')[cols_to_aggregate].mean().reset_index()\n        \n        return speaker_profiles.sort_values(by='civic_character_index', ascending=False)\n\n    except Exception:\n        return None\n\ndef analyze_character_coherence(data, **kwargs):\n    \"\"\"\n    Analyzes the civic character coherence of speakers using derived metrics and pattern classification.\n\n    This function addresses Research Question 3. It calculates the mean Civic Character Index and\n    Tension Indices for each speaker. It then applies a rule-based classification based on the\n    \"Interpretive Guidance\" from the framework to categorize each speaker's dominant rhetorical pattern\n    (e.g., 'Authentic Virtue', 'Strategic Pathology').\n\n    Statistical Methodology:\n    - Aggregation: Mean scores for the Civic Character Index and Tension Indices are calculated per speaker.\n    - Classification: A rule-based model classifies speaker profiles. For example:\n        - 'Authentic Virtue': High virtue scores/salience, low vice scores/salience.\n        - 'Strategic Pathology': High vice scores/salience, low virtue scores/salience.\n        - 'Incoherent Messaging': High tension scores, Civic Character Index near zero.\n        - 'Strategic Virtue Signaling': High virtue scores but low virtue salience.\n    The output provides a summary of each speaker's coherence and strategic orientation.\n\n    Args:\n        data (pd.DataFrame): DataFrame with analysis results.\n        **kwargs: Additional parameters (unused).\n\n    Returns:\n        pd.DataFrame: A DataFrame summarizing the coherence metrics and pattern classification\n                      for each speaker. Returns None on error.\n    \"\"\"\n    import pandas as pd\n    import numpy as np\n\n    try:\n        # Calculate derived metrics and get speaker profiles\n        profiles = get_speaker_character_profiles(data)\n        if profiles is None:\n            return None\n\n        # Calculate mean virtue/vice scores and salience from the profiles\n        virtues = ['dignity', 'truth', 'justice', 'hope', 'pragmatism']\n        vices = ['tribalism', 'manipulation', 'resentment', 'fear', 'fantasy']\n        \n        profiles['mean_virtue_raw'] = profiles[[f'{v}_raw' for v in virtues]].mean(axis=1)\n        profiles['mean_virtue_salience'] = profiles[[f'{v}_salience' for v in virtues]].mean(axis=1)\n        profiles['mean_vice_raw'] = profiles[[f'{v}_raw' for v in vices]].mean(axis=1)\n        profiles['mean_vice_salience'] = profiles[[f'{v}_salience' for v in vices]].mean(axis=1)\n        profiles['mean_tension'] = profiles[['identity_tension', 'truth_tension', 'justice_tension', 'emotional_tension', 'reality_tension']].mean(axis=1)\n\n        def classify_pattern(row):\n            cci = row['civic_character_index']\n            tension = row['mean_tension']\n            virtue_raw = row['mean_virtue_raw']\n            virtue_salience = row['mean_virtue_salience']\n            vice_raw = row['mean_vice_raw']\n            vice_salience = row['mean_vice_salience']\n\n            if cci > 0.3 and virtue_raw > 0.5 and virtue_salience > 0.5 and tension < 0.2:\n                return \"Authentic Virtue\"\n            elif cci < -0.3 and vice_raw > 0.5 and vice_salience > 0.5 and tension < 0.2:\n                return \"Strategic Pathology\"\n            elif tension > 0.25 and abs(cci) < 0.2:\n                return \"Incoherent Messaging\"\n            elif cci > 0.1 and virtue_raw > 0.5 and virtue_salience < 0.4:\n                return \"Strategic Virtue Signaling\"\n            elif cci > 0:\n                return \"Virtue-Leaning\"\n            elif cci < 0:\n                return \"Vice-Leaning\"\n            else:\n                return \"Ambiguous\"\n\n        profiles['pattern_classification'] = profiles.apply(classify_pattern, axis=1)\n        \n        # Select key columns for the final report\n        coherence_report = profiles[[\n            'speaker', 'civic_character_index', 'mean_tension', 'pattern_classification',\n            'mean_virtue_raw', 'mean_virtue_salience', 'mean_vice_raw', 'mean_vice_salience'\n        ]].sort_values(by='civic_character_index', ascending=False)\n\n        return coherence_report\n\n    except Exception:\n        return None\n\ndef get_dimension_correlations(data, **kwargs):\n    \"\"\"\n    Calculates the correlation matrix for the 10 raw CAF dimension scores.\n\n    This function provides an exploratory analysis of the relationships between\n    the different rhetorical dimensions. It helps to identify which virtues and\n    vices tend to co-occur in the analyzed discourse.\n\n    Statistical Methodology:\n    The function computes a Pearson correlation matrix for the 10 '_raw' score\n    columns. The resulting matrix shows the correlation coefficient (ranging\n    from -1 to +1) for each pair of dimensions, indicating the strength and\n    direction of their linear relationship across the entire dataset.\n\n    Args:\n        data (pd.DataFrame): DataFrame with analysis results.\n        **kwargs: Additional parameters (unused).\n\n    Returns:\n        pd.DataFrame: A correlation matrix of the raw dimension scores, or None on error.\n    \"\"\"\n    import pandas as pd\n    import numpy as np\n\n    try:\n        raw_score_cols = [col for col in data.columns if '_raw' in col]\n        if len(raw_score_cols) < 2:\n            return None # Not enough data to correlate\n\n        correlation_matrix = data[raw_score_cols].corr(method='pearson')\n        \n        # Clean up column names for readability\n        correlation_matrix.columns = [c.replace('_raw', '') for c in correlation_matrix.columns]\n        correlation_matrix.index = [i.replace('_raw', '') for i in correlation_matrix.index]\n        \n        return correlation_matrix\n\n    except Exception:\n        return None\n\ndef validate_framework_by_style(data, **kwargs):\n    \"\"\"\n    Validates the framework by comparing scores across different rhetorical styles.\n\n    This function addresses Research Question 4. It attempts to load speaker metadata,\n    specifically a 'style' attribute (e.g., 'populist', 'institutional'), from a\n    corpus manifest. If this metadata is available, it groups the data by style and\n    calculates the mean scores for all dimensions and derived metrics.\n\n    Statistical Methodology:\n    This function uses grouping and aggregation (mean) to test the hypothesis that the\n    CAF framework can successfully distinguish between predefined rhetorical styles.\n    Significant differences in the mean scores for key dimensions (e.g., higher\n    'tribalism' in populist style) would provide evidence for the framework's\n    construct validity. If the required 'style' metadata is not available, the\n    function returns a message indicating this limitation.\n\n    Args:\n        data (pd.DataFrame): DataFrame with analysis results.\n        **kwargs: Additional parameters (unused).\n\n    Returns:\n        pd.DataFrame or dict: A DataFrame comparing metrics across styles, or a\n                              dictionary with an error message if style metadata is\n                              unavailable. Returns None on other errors.\n    \"\"\"\n    import pandas as pd\n    import numpy as np\n\n    try:\n        # Calculate derived metrics and get speaker metadata\n        data_with_derived = calculate_derived_metrics(data)\n        if data_with_derived is None:\n            return None\n            \n        df = _get_speaker_metadata(data_with_derived)\n\n        if 'style' not in df.columns or df['style'].isnull().all():\n            return {\n                \"status\": \"error\",\n                \"message\": \"Cannot perform style validation. 'style' column not found in corpus manifest or is empty. Fallback to speaker parsing does not provide style information.\"\n            }\n\n        # Define all numeric columns to aggregate\n        all_metrics_cols = [col for col in df.columns if '_raw' in col or '_salience' in col or '_tension' in col or 'civic_character_index' in col]\n        \n        # Ensure all columns exist before grouping\n        cols_to_aggregate = [col for col in all_metrics_cols if col in df.columns]\n        if not cols_to_aggregate:\n            return None\n\n        style_comparison = df.groupby('style')[cols_to_aggregate].mean().reset_index()\n        \n        return style_comparison.sort_values(by='civic_character_index', ascending=False)\n\n    except Exception:\n        return None\n\ndef get_descriptive_statistics(data, **kwargs):\n    \"\"\"\n    Computes descriptive statistics for all raw score and salience columns.\n\n    This function provides a high-level overview of the dataset's distribution,\n    addressing the initial part of Research Question 1. It calculates common\n    statistical measures (mean, std, min, 25%, 50%, 75%, max) for each of the\n    20 primary score columns (10 raw scores, 10 salience scores).\n\n    Statistical Methodology:\n    The function uses the `.describe()` method from the pandas library to generate\n    summary statistics for all numeric columns related to the CAF dimensions. This\n    is a standard first step in any quantitative analysis to understand the data's\n    central tendency, dispersion, and range.\n\n    Args:\n        data (pd.DataFrame): DataFrame with analysis results.\n        **kwargs: Additional parameters (unused).\n\n    Returns:\n        pd.DataFrame: A DataFrame containing descriptive statistics for each\n                      score and salience column, or None on error.\n    \"\"\"\n    import pandas as pd\n    import numpy as np\n\n    try:\n        score_cols = [col for col in data.columns if '_raw' in col or '_salience' in col]\n        if not score_cols:\n            return None # No score columns found\n\n        descriptive_stats = data[score_cols].describe()\n        return descriptive_stats\n\n    except Exception:\n        return None\n\ndef run_complete_statistical_analysis(data: pd.DataFrame, alpha: float = 0.05) -> Dict[str, Any]:\n    \"\"\"\n    Run complete statistical analysis suite on the dataset.\n    \n    Args:\n        data: pandas DataFrame with dimension scores\n        alpha: Significance level for hypothesis tests (default: 0.05)\n        \n    Returns:\n        Dictionary with all statistical analysis results\n    \"\"\"\n    results = {\n        'analysis_metadata': {\n            'timestamp': pd.Timestamp.now().isoformat(),\n            'sample_size': len(data),\n            'alpha_level': alpha,\n            'variables_analyzed': list(data.select_dtypes(include=[np.number]).columns)\n        }\n    }\n    \n    # Get all analysis functions from this module\n    import inspect\n    current_module = inspect.getmodule(inspect.currentframe())\n    \n    for name, obj in inspect.getmembers(current_module):\n        if (inspect.isfunction(obj) and \n            name.startswith(('calculate_', 'perform_', 'test_')) and \n            name != 'run_complete_statistical_analysis'):\n            try:\n                # Pass alpha parameter to functions that might need it\n                if 'alpha' in inspect.signature(obj).parameters:\n                    results[name] = obj(data, alpha=alpha)\n                else:\n                    results[name] = obj(data)\n            except Exception as e:\n                results[name] = {'error': f'Analysis failed: {str(e)}'}\n                \n    return results\n\n\ndef perform_statistical_analysis(data: pd.DataFrame) -> Dict[str, Any]:\n    \"\"\"\n    Template-compatible wrapper function for statistical analysis.\n    \n    This function is called by the universal notebook template and performs\n    comprehensive statistical analysis on the provided dataset.\n    \n    Args:\n        data: pandas DataFrame with dimension scores and derived metrics\n        \n    Returns:\n        Dictionary containing all statistical analysis results\n    \"\"\"\n    return run_complete_statistical_analysis(data)\n\n\ndef generate_statistical_summary_report(analysis_results: Dict[str, Any]) -> str:\n    \"\"\"\n    Generate a human-readable summary report from statistical analysis results.\n    \n    Args:\n        analysis_results: Results from run_complete_statistical_analysis()\n        \n    Returns:\n        String containing formatted statistical report\n    \"\"\"\n    report_lines = []\n    report_lines.append(\"STATISTICAL ANALYSIS SUMMARY REPORT\")\n    report_lines.append(\"=\" * 50)\n    \n    metadata = analysis_results.get('analysis_metadata', {})\n    report_lines.append(f\"Analysis Timestamp: {metadata.get('timestamp', 'Unknown')}\")\n    report_lines.append(f\"Sample Size: {metadata.get('sample_size', 'Unknown')}\")\n    report_lines.append(f\"Alpha Level: {metadata.get('alpha_level', 'Unknown')}\")\n    report_lines.append(f\"Variables: {len(metadata.get('variables_analyzed', []))}\")\n    report_lines.append(\"\")\n    \n    # Summarize key findings\n    for analysis_name, result in analysis_results.items():\n        if analysis_name != 'analysis_metadata' and isinstance(result, dict):\n            if 'error' not in result:\n                report_lines.append(f\"{analysis_name.replace('_', ' ').title()}:\")\n                \n                # Extract key statistics based on analysis type\n                if 'p_value' in result:\n                    p_val = result['p_value']\n                    significance = \"significant\" if p_val < metadata.get('alpha_level', 0.05) else \"not significant\"\n                    report_lines.append(f\"  - p-value: {p_val:.4f} ({significance})\")\n                \n                if 'effect_size' in result:\n                    report_lines.append(f\"  - Effect size: {result['effect_size']:.4f}\")\n                \n                if 'correlation_matrix' in result:\n                    report_lines.append(f\"  - Correlation matrix generated with {len(result['correlation_matrix'])} variables\")\n                \n                if 'cronbach_alpha' in result:\n                    alpha_val = result['cronbach_alpha']\n                    reliability = \"excellent\" if alpha_val > 0.9 else \"good\" if alpha_val > 0.8 else \"acceptable\" if alpha_val > 0.7 else \"questionable\"\n                    report_lines.append(f\"  - Cronbach's \u03b1: {alpha_val:.3f} ({reliability})\")\n                \n                report_lines.append(\"\")\n            else:\n                report_lines.append(f\"{analysis_name}: ERROR - {result['error']}\")\n                report_lines.append(\"\")\n    \n    return \"\\n\".join(report_lines)\n",
      "cached_with_code": true
    },
    "statistical_data": {
      "analyze_character_coherence": {
        "type": "dataframe",
        "data": [
          {
            "speaker": "john_mccain",
            "civic_character_index": 0.734017363851618,
            "mean_tension": 0.036000000000000004,
            "pattern_classification": "Authentic Virtue",
            "mean_virtue_raw": 0.78,
            "mean_virtue_salience": 0.72,
            "mean_vice_raw": 0.06,
            "mean_vice_salience": 0.04
          },
          {
            "speaker": "cory_booker",
            "civic_character_index": 0.7263823709447051,
            "mean_tension": 0.06000000000000001,
            "pattern_classification": "Authentic Virtue",
            "mean_virtue_raw": 0.8800000000000001,
            "mean_virtue_salience": 0.8400000000000001,
            "mean_vice_raw": 0.1,
            "mean_vice_salience": 0.14
          },
          {
            "speaker": "mitt_romney",
            "civic_character_index": 0.6443012663852477,
            "mean_tension": 0.048,
            "pattern_classification": "Authentic Virtue",
            "mean_virtue_raw": 0.7799999999999999,
            "mean_virtue_salience": 0.76,
            "mean_vice_raw": 0.1,
            "mean_vice_salience": 0.13999999999999999
          },
          {
            "speaker": "john_lewis",
            "civic_character_index": 0.2886247877758914,
            "mean_tension": 0.064,
            "pattern_classification": "Virtue-Leaning",
            "mean_virtue_raw": 0.78,
            "mean_virtue_salience": 0.7,
            "mean_vice_raw": 0.4,
            "mean_vice_salience": 0.36
          },
          {
            "speaker": "alexandria_ocasio_cortez",
            "civic_character_index": 0.020335536349771165,
            "mean_tension": 0.10600000000000002,
            "pattern_classification": "Virtue-Leaning",
            "mean_virtue_raw": 0.7200000000000001,
            "mean_virtue_salience": 0.62,
            "mean_vice_raw": 0.54,
            "mean_vice_salience": 0.56
          },
          {
            "speaker": "steve_king",
            "civic_character_index": -0.3337948007998769,
            "mean_tension": 0.09400000000000001,
            "pattern_classification": "Strategic Pathology",
            "mean_virtue_raw": 0.45999999999999996,
            "mean_virtue_salience": 0.45999999999999996,
            "mean_vice_raw": 0.8400000000000001,
            "mean_vice_salience": 0.8400000000000001
          },
          {
            "speaker": "bernie_sanders",
            "civic_character_index": -0.46144972120746014,
            "mean_tension": 0.138,
            "pattern_classification": "Strategic Pathology",
            "mean_virtue_raw": 0.32,
            "mean_virtue_salience": 0.28,
            "mean_vice_raw": 0.76,
            "mean_vice_salience": 0.76
          },
          {
            "speaker": "jd_vance",
            "civic_character_index": -0.5963302752293579,
            "mean_tension": 0.09100000000000001,
            "pattern_classification": "Strategic Pathology",
            "mean_virtue_raw": 0.22000000000000003,
            "mean_virtue_salience": 0.17,
            "mean_vice_raw": 0.78,
            "mean_vice_salience": 0.68
          }
        ],
        "columns": [
          "speaker",
          "civic_character_index",
          "mean_tension",
          "pattern_classification",
          "mean_virtue_raw",
          "mean_virtue_salience",
          "mean_vice_raw",
          "mean_vice_salience"
        ],
        "index": [
          5,
          2,
          6,
          4,
          0,
          7,
          1,
          3
        ],
        "shape": [
          8,
          8
        ]
      },
      "calculate_derived_metrics": {
        "type": "dataframe",
        "data": [
          {
            "document_name": "john_lewis_1963_march_on_washington_ab348df3.txt",
            "tribalism_raw": 0.6,
            "tribalism_salience": 0.6,
            "tribalism_confidence": 0.8,
            "dignity_raw": 0.9,
            "dignity_salience": 0.8,
            "dignity_confidence": 0.9,
            "manipulation_raw": 0.0,
            "manipulation_salience": 0.0,
            "manipulation_confidence": 0.9,
            "truth_raw": 0.8,
            "truth_salience": 0.7,
            "truth_confidence": 0.9,
            "resentment_raw": 0.9,
            "resentment_salience": 0.9,
            "resentment_confidence": 0.9,
            "justice_raw": 0.9,
            "justice_salience": 0.9,
            "justice_confidence": 0.9,
            "fear_raw": 0.5,
            "fear_salience": 0.3,
            "fear_confidence": 0.7,
            "hope_raw": 0.8,
            "hope_salience": 0.7,
            "hope_confidence": 0.8,
            "fantasy_raw": 0.0,
            "fantasy_salience": 0.0,
            "fantasy_confidence": 0.9,
            "pragmatism_raw": 0.5,
            "pragmatism_salience": 0.4,
            "pragmatism_confidence": 0.7,
            "identity_tension": 0.12000000000000004,
            "truth_tension": 0.0,
            "justice_tension": 0.0,
            "emotional_tension": 0.19999999999999998,
            "reality_tension": 0.0,
            "weighted_virtue_score": 2.85,
            "weighted_vice_score": 1.3199999999999998,
            "combined_salience_total": 5.3,
            "civic_character_index": 0.2886247877758914
          },
          {
            "document_name": "john_mccain_2008_concession_ff9b26f2.txt",
            "tribalism_raw": 0.0,
            "tribalism_salience": 0.0,
            "tribalism_confidence": 1.0,
            "dignity_raw": 0.9,
            "dignity_salience": 0.9,
            "dignity_confidence": 0.95,
            "manipulation_raw": 0.0,
            "manipulation_salience": 0.0,
            "manipulation_confidence": 1.0,
            "truth_raw": 0.8,
            "truth_salience": 0.7,
            "truth_confidence": 0.9,
            "resentment_raw": 0.0,
            "resentment_salience": 0.0,
            "resentment_confidence": 1.0,
            "justice_raw": 0.7,
            "justice_salience": 0.6,
            "justice_confidence": 0.85,
            "fear_raw": 0.3,
            "fear_salience": 0.2,
            "fear_confidence": 0.8,
            "hope_raw": 0.8,
            "hope_salience": 0.8,
            "hope_confidence": 0.95,
            "fantasy_raw": 0.0,
            "fantasy_salience": 0.0,
            "fantasy_confidence": 1.0,
            "pragmatism_raw": 0.7,
            "pragmatism_salience": 0.6,
            "pragmatism_confidence": 0.9,
            "identity_tension": 0.0,
            "truth_tension": 0.0,
            "justice_tension": 0.0,
            "emotional_tension": 0.18000000000000002,
            "reality_tension": 0.0,
            "weighted_virtue_score": 2.85,
            "weighted_vice_score": 0.06,
            "combined_salience_total": 3.8000000000000003,
            "civic_character_index": 0.734017363851618
          },
          {
            "document_name": "steve_king_2017_house_floor_738780d9.txt",
            "tribalism_raw": 0.9,
            "tribalism_salience": 0.9,
            "tribalism_confidence": 0.95,
            "dignity_raw": 0.1,
            "dignity_salience": 0.1,
            "dignity_confidence": 0.8,
            "manipulation_raw": 0.8,
            "manipulation_salience": 0.8,
            "manipulation_confidence": 0.9,
            "truth_raw": 0.7,
            "truth_salience": 0.7,
            "truth_confidence": 0.85,
            "resentment_raw": 0.9,
            "resentment_salience": 0.9,
            "resentment_confidence": 0.95,
            "justice_raw": 0.6,
            "justice_salience": 0.6,
            "justice_confidence": 0.8,
            "fear_raw": 0.9,
            "fear_salience": 0.9,
            "fear_confidence": 0.95,
            "hope_raw": 0.2,
            "hope_salience": 0.2,
            "hope_confidence": 0.75,
            "fantasy_raw": 0.7,
            "fantasy_salience": 0.7,
            "fantasy_confidence": 0.85,
            "pragmatism_raw": 0.7,
            "pragmatism_salience": 0.7,
            "pragmatism_confidence": 0.85,
            "identity_tension": 0.08000000000000002,
            "truth_tension": 0.07000000000000006,
            "justice_tension": 0.18000000000000002,
            "emotional_tension": 0.13999999999999999,
            "reality_tension": 0.0,
            "weighted_virtue_score": 1.39,
            "weighted_vice_score": 3.56,
            "combined_salience_total": 6.5,
            "civic_character_index": -0.3337948007998769
          },
          {
            "document_name": "cory_booker_2018_first_step_act_0c32812a.txt",
            "tribalism_raw": 0.1,
            "tribalism_salience": 0.2,
            "tribalism_confidence": 0.9,
            "dignity_raw": 0.9,
            "dignity_salience": 0.9,
            "dignity_confidence": 0.9,
            "manipulation_raw": 0.0,
            "manipulation_salience": 0.0,
            "manipulation_confidence": 0.9,
            "truth_raw": 0.9,
            "truth_salience": 0.8,
            "truth_confidence": 0.9,
            "resentment_raw": 0.1,
            "resentment_salience": 0.1,
            "resentment_confidence": 0.9,
            "justice_raw": 0.9,
            "justice_salience": 0.9,
            "justice_confidence": 0.9,
            "fear_raw": 0.3,
            "fear_salience": 0.4,
            "fear_confidence": 0.8,
            "hope_raw": 0.9,
            "hope_salience": 0.9,
            "hope_confidence": 0.9,
            "fantasy_raw": 0.0,
            "fantasy_salience": 0.0,
            "fantasy_confidence": 0.9,
            "pragmatism_raw": 0.8,
            "pragmatism_salience": 0.7,
            "pragmatism_confidence": 0.9,
            "identity_tension": 0.06999999999999999,
            "truth_tension": 0.0,
            "justice_tension": 0.08000000000000002,
            "emotional_tension": 0.15,
            "reality_tension": 0.0,
            "weighted_virtue_score": 3.7100000000000004,
            "weighted_vice_score": 0.15,
            "combined_salience_total": 4.9,
            "civic_character_index": 0.7263823709447051
          },
          {
            "document_name": "mitt_romney_2020_impeachment_9ebec73f.txt",
            "tribalism_raw": 0.0,
            "tribalism_salience": 0.1,
            "tribalism_confidence": 0.9,
            "dignity_raw": 0.6,
            "dignity_salience": 0.7,
            "dignity_confidence": 0.8,
            "manipulation_raw": 0.0,
            "manipulation_salience": 0.1,
            "manipulation_confidence": 0.9,
            "truth_raw": 0.9,
            "truth_salience": 0.9,
            "truth_confidence": 0.9,
            "resentment_raw": 0.2,
            "resentment_salience": 0.3,
            "resentment_confidence": 0.8,
            "justice_raw": 0.9,
            "justice_salience": 0.9,
            "justice_confidence": 0.9,
            "fear_raw": 0.3,
            "fear_salience": 0.2,
            "fear_confidence": 0.7,
            "hope_raw": 0.7,
            "hope_salience": 0.6,
            "hope_confidence": 0.8,
            "fantasy_raw": 0.0,
            "fantasy_salience": 0.0,
            "fantasy_confidence": 0.9,
            "pragmatism_raw": 0.8,
            "pragmatism_salience": 0.7,
            "pragmatism_confidence": 0.8,
            "identity_tension": 0.0,
            "truth_tension": 0.0,
            "justice_tension": 0.12000000000000002,
            "emotional_tension": 0.11999999999999998,
            "reality_tension": 0.0,
            "weighted_virtue_score": 3.02,
            "weighted_vice_score": 0.12,
            "combined_salience_total": 4.5,
            "civic_character_index": 0.6443012663852477
          },
          {
            "document_name": "jd_vance_2022_natcon_conference_516a3c9c.txt",
            "tribalism_raw": 0.9,
            "tribalism_salience": 0.9,
            "tribalism_confidence": 0.9,
            "dignity_raw": 0.1,
            "dignity_salience": 0.05,
            "dignity_confidence": 0.8,
            "manipulation_raw": 0.8,
            "manipulation_salience": 0.7,
            "manipulation_confidence": 0.9,
            "truth_raw": 0.2,
            "truth_salience": 0.2,
            "truth_confidence": 0.8,
            "resentment_raw": 0.9,
            "resentment_salience": 0.8,
            "resentment_confidence": 0.9,
            "justice_raw": 0.1,
            "justice_salience": 0.05,
            "justice_confidence": 0.8,
            "fear_raw": 0.9,
            "fear_salience": 0.8,
            "fear_confidence": 0.9,
            "hope_raw": 0.6,
            "hope_salience": 0.5,
            "hope_confidence": 0.8,
            "fantasy_raw": 0.4,
            "fantasy_salience": 0.2,
            "fantasy_confidence": 0.7,
            "pragmatism_raw": 0.1,
            "pragmatism_salience": 0.05,
            "pragmatism_confidence": 0.7,
            "identity_tension": 0.085,
            "truth_tension": 0.09999999999999999,
            "justice_tension": 0.07500000000000001,
            "emotional_tension": 0.18000000000000002,
            "reality_tension": 0.015000000000000003,
            "weighted_virtue_score": 0.355,
            "weighted_vice_score": 2.8900000000000006,
            "combined_salience_total": 4.25,
            "civic_character_index": -0.5963302752293579
          },
          {
            "document_name": "bernie_sanders_2025_fighting_oligarchy_261b893a.txt",
            "tribalism_raw": 0.8,
            "tribalism_salience": 0.9,
            "tribalism_confidence": 0.9,
            "dignity_raw": 0.1,
            "dignity_salience": 0.1,
            "dignity_confidence": 0.7,
            "manipulation_raw": 0.8,
            "manipulation_salience": 0.8,
            "manipulation_confidence": 0.9,
            "truth_raw": 0.3,
            "truth_salience": 0.3,
            "truth_confidence": 0.8,
            "resentment_raw": 0.9,
            "resentment_salience": 0.9,
            "resentment_confidence": 0.9,
            "justice_raw": 0.5,
            "justice_salience": 0.4,
            "justice_confidence": 0.8,
            "fear_raw": 0.8,
            "fear_salience": 0.8,
            "fear_confidence": 0.9,
            "hope_raw": 0.6,
            "hope_salience": 0.5,
            "hope_confidence": 0.8,
            "fantasy_raw": 0.5,
            "fantasy_salience": 0.4,
            "fantasy_confidence": 0.7,
            "pragmatism_raw": 0.1,
            "pragmatism_salience": 0.1,
            "pragmatism_confidence": 0.7,
            "identity_tension": 0.08000000000000002,
            "truth_tension": 0.15,
            "justice_tension": 0.25,
            "emotional_tension": 0.18000000000000002,
            "reality_tension": 0.030000000000000006,
            "weighted_virtue_score": 0.6100000000000001,
            "weighted_vice_score": 3.0100000000000007,
            "combined_salience_total": 5.2,
            "civic_character_index": -0.46144972120746014
          },
          {
            "document_name": "alexandria_ocasio_cortez_2025_fighting_oligarchy_1121e4ae.txt",
            "tribalism_raw": 0.8,
            "tribalism_salience": 0.8,
            "tribalism_confidence": 0.9,
            "dignity_raw": 0.7,
            "dignity_salience": 0.6,
            "dignity_confidence": 0.8,
            "manipulation_raw": 0.1,
            "manipulation_salience": 0.2,
            "manipulation_confidence": 0.9,
            "truth_raw": 0.7,
            "truth_salience": 0.6,
            "truth_confidence": 0.85,
            "resentment_raw": 0.9,
            "resentment_salience": 0.9,
            "resentment_confidence": 0.9,
            "justice_raw": 0.8,
            "justice_salience": 0.7,
            "justice_confidence": 0.85,
            "fear_raw": 0.8,
            "fear_salience": 0.8,
            "fear_confidence": 0.9,
            "hope_raw": 0.7,
            "hope_salience": 0.6,
            "hope_confidence": 0.8,
            "fantasy_raw": 0.1,
            "fantasy_salience": 0.1,
            "fantasy_confidence": 0.95,
            "pragmatism_raw": 0.7,
            "pragmatism_salience": 0.6,
            "pragmatism_confidence": 0.8,
            "identity_tension": 0.14000000000000004,
            "truth_tension": 0.04,
            "justice_tension": 0.16000000000000006,
            "emotional_tension": 0.14000000000000004,
            "reality_tension": 0.05,
            "weighted_virtue_score": 2.2399999999999998,
            "weighted_vice_score": 2.12,
            "combined_salience_total": 5.9,
            "civic_character_index": 0.020335536349771165
          }
        ],
        "columns": [
          "document_name",
          "tribalism_raw",
          "tribalism_salience",
          "tribalism_confidence",
          "dignity_raw",
          "dignity_salience",
          "dignity_confidence",
          "manipulation_raw",
          "manipulation_salience",
          "manipulation_confidence",
          "truth_raw",
          "truth_salience",
          "truth_confidence",
          "resentment_raw",
          "resentment_salience",
          "resentment_confidence",
          "justice_raw",
          "justice_salience",
          "justice_confidence",
          "fear_raw",
          "fear_salience",
          "fear_confidence",
          "hope_raw",
          "hope_salience",
          "hope_confidence",
          "fantasy_raw",
          "fantasy_salience",
          "fantasy_confidence",
          "pragmatism_raw",
          "pragmatism_salience",
          "pragmatism_confidence",
          "identity_tension",
          "truth_tension",
          "justice_tension",
          "emotional_tension",
          "reality_tension",
          "weighted_virtue_score",
          "weighted_vice_score",
          "combined_salience_total",
          "civic_character_index"
        ],
        "index": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "shape": [
          8,
          40
        ]
      },
      "generate_statistical_summary_report": "STATISTICAL ANALYSIS SUMMARY REPORT\n==================================================\nAnalysis Timestamp: Unknown\nSample Size: Unknown\nAlpha Level: Unknown\nVariables: 0\n",
      "get_descriptive_statistics": {
        "type": "dataframe",
        "data": [
          {
            "tribalism_raw": 8.0,
            "tribalism_salience": 8.0,
            "dignity_raw": 8.0,
            "dignity_salience": 8.0,
            "manipulation_raw": 8.0,
            "manipulation_salience": 8.0,
            "truth_raw": 8.0,
            "truth_salience": 8.0,
            "resentment_raw": 8.0,
            "resentment_salience": 8.0,
            "justice_raw": 8.0,
            "justice_salience": 8.0,
            "fear_raw": 8.0,
            "fear_salience": 8.0,
            "hope_raw": 8.0,
            "hope_salience": 8.0,
            "fantasy_raw": 8.0,
            "fantasy_salience": 8.0,
            "pragmatism_raw": 8.0,
            "pragmatism_salience": 8.0
          },
          {
            "tribalism_raw": 0.5125,
            "tribalism_salience": 0.55,
            "dignity_raw": 0.5375,
            "dignity_salience": 0.51875,
            "manipulation_raw": 0.3125,
            "manipulation_salience": 0.32499999999999996,
            "truth_raw": 0.6625000000000001,
            "truth_salience": 0.6125,
            "resentment_raw": 0.6000000000000001,
            "resentment_salience": 0.6000000000000001,
            "justice_raw": 0.675,
            "justice_salience": 0.6312500000000001,
            "fear_raw": 0.6,
            "fear_salience": 0.55,
            "hope_raw": 0.6625,
            "hope_salience": 0.6000000000000001,
            "fantasy_raw": 0.2125,
            "fantasy_salience": 0.175,
            "pragmatism_raw": 0.55,
            "pragmatism_salience": 0.48124999999999996
          },
          {
            "tribalism_raw": 0.4086126352846737,
            "tribalism_salience": 0.38913824205360675,
            "dignity_raw": 0.377728171346236,
            "dignity_salience": 0.3741060773936413,
            "manipulation_raw": 0.4051013982414068,
            "manipulation_salience": 0.37321001364608947,
            "truth_raw": 0.26692695630078284,
            "truth_salience": 0.24164614034338958,
            "resentment_raw": 0.41747540560578456,
            "resentment_salience": 0.39641248358604597,
            "justice_raw": 0.276457178290909,
            "justice_salience": 0.29633173977824245,
            "fear_raw": 0.27774602993176545,
            "fear_salience": 0.3023715784073818,
            "hope_raw": 0.21339098923270935,
            "hope_salience": 0.21380899352993948,
            "fantasy_raw": 0.27998724460742336,
            "fantasy_salience": 0.2549509756796392,
            "pragmatism_raw": 0.29277002188455997,
            "pragmatism_salience": 0.26983791431153625
          },
          {
            "tribalism_raw": 0.0,
            "tribalism_salience": 0.0,
            "dignity_raw": 0.1,
            "dignity_salience": 0.05,
            "manipulation_raw": 0.0,
            "manipulation_salience": 0.0,
            "truth_raw": 0.2,
            "truth_salience": 0.2,
            "resentment_raw": 0.0,
            "resentment_salience": 0.0,
            "justice_raw": 0.1,
            "justice_salience": 0.05,
            "fear_raw": 0.3,
            "fear_salience": 0.2,
            "hope_raw": 0.2,
            "hope_salience": 0.2,
            "fantasy_raw": 0.0,
            "fantasy_salience": 0.0,
            "pragmatism_raw": 0.1,
            "pragmatism_salience": 0.05
          },
          {
            "tribalism_raw": 0.07500000000000001,
            "tribalism_salience": 0.17500000000000002,
            "dignity_raw": 0.1,
            "dignity_salience": 0.1,
            "manipulation_raw": 0.0,
            "manipulation_salience": 0.0,
            "truth_raw": 0.6,
            "truth_salience": 0.525,
            "resentment_raw": 0.17500000000000002,
            "resentment_salience": 0.25,
            "justice_raw": 0.575,
            "justice_salience": 0.55,
            "fear_raw": 0.3,
            "fear_salience": 0.275,
            "hope_raw": 0.6,
            "hope_salience": 0.5,
            "fantasy_raw": 0.0,
            "fantasy_salience": 0.0,
            "pragmatism_raw": 0.4,
            "pragmatism_salience": 0.325
          },
          {
            "tribalism_raw": 0.7,
            "tribalism_salience": 0.7,
            "dignity_raw": 0.6499999999999999,
            "dignity_salience": 0.6499999999999999,
            "manipulation_raw": 0.05,
            "manipulation_salience": 0.15000000000000002,
            "truth_raw": 0.75,
            "truth_salience": 0.7,
            "resentment_raw": 0.9,
            "resentment_salience": 0.8500000000000001,
            "justice_raw": 0.75,
            "justice_salience": 0.6499999999999999,
            "fear_raw": 0.65,
            "fear_salience": 0.6000000000000001,
            "hope_raw": 0.7,
            "hope_salience": 0.6,
            "fantasy_raw": 0.05,
            "fantasy_salience": 0.05,
            "pragmatism_raw": 0.7,
            "pragmatism_salience": 0.6
          },
          {
            "tribalism_raw": 0.8250000000000001,
            "tribalism_salience": 0.9,
            "dignity_raw": 0.9,
            "dignity_salience": 0.8250000000000001,
            "manipulation_raw": 0.8,
            "manipulation_salience": 0.725,
            "truth_raw": 0.8250000000000001,
            "truth_salience": 0.725,
            "resentment_raw": 0.9,
            "resentment_salience": 0.9,
            "justice_raw": 0.9,
            "justice_salience": 0.9,
            "fear_raw": 0.8250000000000001,
            "fear_salience": 0.8,
            "hope_raw": 0.8,
            "hope_salience": 0.725,
            "fantasy_raw": 0.42500000000000004,
            "fantasy_salience": 0.25,
            "pragmatism_raw": 0.725,
            "pragmatism_salience": 0.7
          },
          {
            "tribalism_raw": 0.9,
            "tribalism_salience": 0.9,
            "dignity_raw": 0.9,
            "dignity_salience": 0.9,
            "manipulation_raw": 0.8,
            "manipulation_salience": 0.8,
            "truth_raw": 0.9,
            "truth_salience": 0.9,
            "resentment_raw": 0.9,
            "resentment_salience": 0.9,
            "justice_raw": 0.9,
            "justice_salience": 0.9,
            "fear_raw": 0.9,
            "fear_salience": 0.9,
            "hope_raw": 0.9,
            "hope_salience": 0.9,
            "fantasy_raw": 0.7,
            "fantasy_salience": 0.7,
            "pragmatism_raw": 0.8,
            "pragmatism_salience": 0.7
          }
        ],
        "columns": [
          "tribalism_raw",
          "tribalism_salience",
          "dignity_raw",
          "dignity_salience",
          "manipulation_raw",
          "manipulation_salience",
          "truth_raw",
          "truth_salience",
          "resentment_raw",
          "resentment_salience",
          "justice_raw",
          "justice_salience",
          "fear_raw",
          "fear_salience",
          "hope_raw",
          "hope_salience",
          "fantasy_raw",
          "fantasy_salience",
          "pragmatism_raw",
          "pragmatism_salience"
        ],
        "index": [
          "count",
          "mean",
          "std",
          "min",
          "25%",
          "50%",
          "75%",
          "max"
        ],
        "shape": [
          8,
          20
        ]
      },
      "get_dimension_correlations": {
        "type": "dataframe",
        "data": [
          {
            "tribalism": 1.0,
            "dignity": -0.697650832885503,
            "manipulation": 0.758388543718732,
            "truth": -0.702368520893393,
            "resentment": 0.9630683555651771,
            "justice": -0.5912129145074335,
            "fear": 0.9692438037966802,
            "hope": -0.632823478709537,
            "fantasy": 0.7476484682022462,
            "pragmatism": -0.6149938770473281
          },
          {
            "tribalism": -0.697650832885503,
            "dignity": 1.0,
            "manipulation": -0.9651045524180857,
            "truth": 0.781049847557719,
            "resentment": -0.5979097343168595,
            "justice": 0.776355401025392,
            "fear": -0.8033905807022392,
            "hope": 0.7997674451554416,
            "fantasy": -0.9235952199233912,
            "pragmatism": 0.6394420283610887
          },
          {
            "tribalism": 0.758388543718732,
            "dignity": -0.9651045524180857,
            "manipulation": 1.0,
            "truth": -0.8273580985603842,
            "resentment": 0.6335320432737537,
            "justice": -0.8259430812702623,
            "fear": 0.8379812347976835,
            "hope": -0.7705148015309422,
            "fantasy": 0.9556495843836997,
            "pragmatism": -0.7046403013581823
          },
          {
            "tribalism": -0.702368520893393,
            "dignity": 0.781049847557719,
            "manipulation": -0.8273580985603842,
            "truth": 1.0,
            "resentment": -0.615346688379841,
            "justice": 0.9147100852666593,
            "fear": -0.7514953069209042,
            "hope": 0.3479897409357788,
            "fantasy": -0.6427374005879877,
            "pragmatism": 0.9414345867004906
          },
          {
            "tribalism": 0.9630683555651771,
            "dignity": -0.5979097343168595,
            "manipulation": 0.6335320432737537,
            "truth": -0.615346688379841,
            "resentment": 1.0,
            "justice": -0.4456005255888803,
            "fear": 0.8870655251454873,
            "hope": -0.5452226697073789,
            "fantasy": 0.6233084207322759,
            "pragmatism": -0.5960938423205353
          },
          {
            "tribalism": -0.5912129145074335,
            "dignity": 0.776355401025392,
            "manipulation": -0.8259430812702623,
            "truth": 0.9147100852666593,
            "resentment": -0.4456005255888803,
            "justice": 1.0,
            "fear": -0.6883795390293352,
            "hope": 0.4419375269387001,
            "fantasy": -0.6597993578031329,
            "pragmatism": 0.7942550733204838
          },
          {
            "tribalism": 0.9692438037966802,
            "dignity": -0.8033905807022392,
            "manipulation": 0.8379812347976835,
            "truth": -0.7514953069209042,
            "resentment": 0.8870655251454873,
            "justice": -0.6883795390293352,
            "fear": 1.0,
            "hope": -0.7231015260621872,
            "fantasy": 0.8266627476821892,
            "pragmatism": -0.5973191135873606
          },
          {
            "tribalism": -0.632823478709537,
            "dignity": 0.7997674451554416,
            "manipulation": -0.7705148015309422,
            "truth": 0.3479897409357788,
            "resentment": -0.5452226697073789,
            "justice": 0.4419375269387001,
            "fear": -0.7231015260621872,
            "hope": 1.0,
            "fantasy": -0.8996304470535667,
            "pragmatism": 0.17149858514250899
          },
          {
            "tribalism": 0.7476484682022462,
            "dignity": -0.9235952199233912,
            "manipulation": 0.9556495843836997,
            "truth": -0.6427374005879877,
            "resentment": 0.6233084207322759,
            "justice": -0.6597993578031329,
            "fear": 0.8266627476821892,
            "hope": -0.8996304470535667,
            "fantasy": 1.0,
            "pragmatism": -0.49668605650287145
          },
          {
            "tribalism": -0.6149938770473281,
            "dignity": 0.6394420283610887,
            "manipulation": -0.7046403013581823,
            "truth": 0.9414345867004906,
            "resentment": -0.5960938423205353,
            "justice": 0.7942550733204838,
            "fear": -0.5973191135873606,
            "hope": 0.17149858514250899,
            "fantasy": -0.49668605650287145,
            "pragmatism": 1.0
          }
        ],
        "columns": [
          "tribalism",
          "dignity",
          "manipulation",
          "truth",
          "resentment",
          "justice",
          "fear",
          "hope",
          "fantasy",
          "pragmatism"
        ],
        "index": [
          "tribalism",
          "dignity",
          "manipulation",
          "truth",
          "resentment",
          "justice",
          "fear",
          "hope",
          "fantasy",
          "pragmatism"
        ],
        "shape": [
          10,
          10
        ]
      },
      "get_speaker_character_profiles": {
        "type": "dataframe",
        "data": [
          {
            "speaker": "john_mccain",
            "tribalism_raw": 0.0,
            "tribalism_salience": 0.0,
            "dignity_raw": 0.9,
            "dignity_salience": 0.9,
            "manipulation_raw": 0.0,
            "manipulation_salience": 0.0,
            "truth_raw": 0.8,
            "truth_salience": 0.7,
            "resentment_raw": 0.0,
            "resentment_salience": 0.0,
            "justice_raw": 0.7,
            "justice_salience": 0.6,
            "fear_raw": 0.3,
            "fear_salience": 0.2,
            "hope_raw": 0.8,
            "hope_salience": 0.8,
            "fantasy_raw": 0.0,
            "fantasy_salience": 0.0,
            "pragmatism_raw": 0.7,
            "pragmatism_salience": 0.6,
            "combined_salience_total": 3.8000000000000003,
            "identity_tension": 0.0,
            "truth_tension": 0.0,
            "justice_tension": 0.0,
            "emotional_tension": 0.18000000000000002,
            "reality_tension": 0.0,
            "civic_character_index": 0.734017363851618
          },
          {
            "speaker": "cory_booker",
            "tribalism_raw": 0.1,
            "tribalism_salience": 0.2,
            "dignity_raw": 0.9,
            "dignity_salience": 0.9,
            "manipulation_raw": 0.0,
            "manipulation_salience": 0.0,
            "truth_raw": 0.9,
            "truth_salience": 0.8,
            "resentment_raw": 0.1,
            "resentment_salience": 0.1,
            "justice_raw": 0.9,
            "justice_salience": 0.9,
            "fear_raw": 0.3,
            "fear_salience": 0.4,
            "hope_raw": 0.9,
            "hope_salience": 0.9,
            "fantasy_raw": 0.0,
            "fantasy_salience": 0.0,
            "pragmatism_raw": 0.8,
            "pragmatism_salience": 0.7,
            "combined_salience_total": 4.9,
            "identity_tension": 0.06999999999999999,
            "truth_tension": 0.0,
            "justice_tension": 0.08000000000000002,
            "emotional_tension": 0.15,
            "reality_tension": 0.0,
            "civic_character_index": 0.7263823709447051
          },
          {
            "speaker": "mitt_romney",
            "tribalism_raw": 0.0,
            "tribalism_salience": 0.1,
            "dignity_raw": 0.6,
            "dignity_salience": 0.7,
            "manipulation_raw": 0.0,
            "manipulation_salience": 0.1,
            "truth_raw": 0.9,
            "truth_salience": 0.9,
            "resentment_raw": 0.2,
            "resentment_salience": 0.3,
            "justice_raw": 0.9,
            "justice_salience": 0.9,
            "fear_raw": 0.3,
            "fear_salience": 0.2,
            "hope_raw": 0.7,
            "hope_salience": 0.6,
            "fantasy_raw": 0.0,
            "fantasy_salience": 0.0,
            "pragmatism_raw": 0.8,
            "pragmatism_salience": 0.7,
            "combined_salience_total": 4.5,
            "identity_tension": 0.0,
            "truth_tension": 0.0,
            "justice_tension": 0.12000000000000002,
            "emotional_tension": 0.11999999999999998,
            "reality_tension": 0.0,
            "civic_character_index": 0.6443012663852477
          },
          {
            "speaker": "john_lewis",
            "tribalism_raw": 0.6,
            "tribalism_salience": 0.6,
            "dignity_raw": 0.9,
            "dignity_salience": 0.8,
            "manipulation_raw": 0.0,
            "manipulation_salience": 0.0,
            "truth_raw": 0.8,
            "truth_salience": 0.7,
            "resentment_raw": 0.9,
            "resentment_salience": 0.9,
            "justice_raw": 0.9,
            "justice_salience": 0.9,
            "fear_raw": 0.5,
            "fear_salience": 0.3,
            "hope_raw": 0.8,
            "hope_salience": 0.7,
            "fantasy_raw": 0.0,
            "fantasy_salience": 0.0,
            "pragmatism_raw": 0.5,
            "pragmatism_salience": 0.4,
            "combined_salience_total": 5.3,
            "identity_tension": 0.12000000000000004,
            "truth_tension": 0.0,
            "justice_tension": 0.0,
            "emotional_tension": 0.19999999999999998,
            "reality_tension": 0.0,
            "civic_character_index": 0.2886247877758914
          },
          {
            "speaker": "alexandria_ocasio_cortez",
            "tribalism_raw": 0.8,
            "tribalism_salience": 0.8,
            "dignity_raw": 0.7,
            "dignity_salience": 0.6,
            "manipulation_raw": 0.1,
            "manipulation_salience": 0.2,
            "truth_raw": 0.7,
            "truth_salience": 0.6,
            "resentment_raw": 0.9,
            "resentment_salience": 0.9,
            "justice_raw": 0.8,
            "justice_salience": 0.7,
            "fear_raw": 0.8,
            "fear_salience": 0.8,
            "hope_raw": 0.7,
            "hope_salience": 0.6,
            "fantasy_raw": 0.1,
            "fantasy_salience": 0.1,
            "pragmatism_raw": 0.7,
            "pragmatism_salience": 0.6,
            "combined_salience_total": 5.9,
            "identity_tension": 0.14000000000000004,
            "truth_tension": 0.04,
            "justice_tension": 0.16000000000000006,
            "emotional_tension": 0.14000000000000004,
            "reality_tension": 0.05,
            "civic_character_index": 0.020335536349771165
          },
          {
            "speaker": "steve_king",
            "tribalism_raw": 0.9,
            "tribalism_salience": 0.9,
            "dignity_raw": 0.1,
            "dignity_salience": 0.1,
            "manipulation_raw": 0.8,
            "manipulation_salience": 0.8,
            "truth_raw": 0.7,
            "truth_salience": 0.7,
            "resentment_raw": 0.9,
            "resentment_salience": 0.9,
            "justice_raw": 0.6,
            "justice_salience": 0.6,
            "fear_raw": 0.9,
            "fear_salience": 0.9,
            "hope_raw": 0.2,
            "hope_salience": 0.2,
            "fantasy_raw": 0.7,
            "fantasy_salience": 0.7,
            "pragmatism_raw": 0.7,
            "pragmatism_salience": 0.7,
            "combined_salience_total": 6.5,
            "identity_tension": 0.08000000000000002,
            "truth_tension": 0.07000000000000006,
            "justice_tension": 0.18000000000000002,
            "emotional_tension": 0.13999999999999999,
            "reality_tension": 0.0,
            "civic_character_index": -0.3337948007998769
          },
          {
            "speaker": "bernie_sanders",
            "tribalism_raw": 0.8,
            "tribalism_salience": 0.9,
            "dignity_raw": 0.1,
            "dignity_salience": 0.1,
            "manipulation_raw": 0.8,
            "manipulation_salience": 0.8,
            "truth_raw": 0.3,
            "truth_salience": 0.3,
            "resentment_raw": 0.9,
            "resentment_salience": 0.9,
            "justice_raw": 0.5,
            "justice_salience": 0.4,
            "fear_raw": 0.8,
            "fear_salience": 0.8,
            "hope_raw": 0.6,
            "hope_salience": 0.5,
            "fantasy_raw": 0.5,
            "fantasy_salience": 0.4,
            "pragmatism_raw": 0.1,
            "pragmatism_salience": 0.1,
            "combined_salience_total": 5.2,
            "identity_tension": 0.08000000000000002,
            "truth_tension": 0.15,
            "justice_tension": 0.25,
            "emotional_tension": 0.18000000000000002,
            "reality_tension": 0.030000000000000006,
            "civic_character_index": -0.46144972120746014
          },
          {
            "speaker": "jd_vance",
            "tribalism_raw": 0.9,
            "tribalism_salience": 0.9,
            "dignity_raw": 0.1,
            "dignity_salience": 0.05,
            "manipulation_raw": 0.8,
            "manipulation_salience": 0.7,
            "truth_raw": 0.2,
            "truth_salience": 0.2,
            "resentment_raw": 0.9,
            "resentment_salience": 0.8,
            "justice_raw": 0.1,
            "justice_salience": 0.05,
            "fear_raw": 0.9,
            "fear_salience": 0.8,
            "hope_raw": 0.6,
            "hope_salience": 0.5,
            "fantasy_raw": 0.4,
            "fantasy_salience": 0.2,
            "pragmatism_raw": 0.1,
            "pragmatism_salience": 0.05,
            "combined_salience_total": 4.25,
            "identity_tension": 0.085,
            "truth_tension": 0.09999999999999999,
            "justice_tension": 0.07500000000000001,
            "emotional_tension": 0.18000000000000002,
            "reality_tension": 0.015000000000000003,
            "civic_character_index": -0.5963302752293579
          }
        ],
        "columns": [
          "speaker",
          "tribalism_raw",
          "tribalism_salience",
          "dignity_raw",
          "dignity_salience",
          "manipulation_raw",
          "manipulation_salience",
          "truth_raw",
          "truth_salience",
          "resentment_raw",
          "resentment_salience",
          "justice_raw",
          "justice_salience",
          "fear_raw",
          "fear_salience",
          "hope_raw",
          "hope_salience",
          "fantasy_raw",
          "fantasy_salience",
          "pragmatism_raw",
          "pragmatism_salience",
          "combined_salience_total",
          "identity_tension",
          "truth_tension",
          "justice_tension",
          "emotional_tension",
          "reality_tension",
          "civic_character_index"
        ],
        "index": [
          5,
          2,
          6,
          4,
          0,
          7,
          1,
          3
        ],
        "shape": [
          8,
          28
        ]
      },
      "perform_statistical_analysis": {
        "analysis_metadata": {
          "timestamp": "2025-08-25T19:42:08.794706",
          "sample_size": 8,
          "alpha_level": 0.05,
          "variables_analyzed": [
            "tribalism_raw",
            "tribalism_salience",
            "tribalism_confidence",
            "dignity_raw",
            "dignity_salience",
            "dignity_confidence",
            "manipulation_raw",
            "manipulation_salience",
            "manipulation_confidence",
            "truth_raw",
            "truth_salience",
            "truth_confidence",
            "resentment_raw",
            "resentment_salience",
            "resentment_confidence",
            "justice_raw",
            "justice_salience",
            "justice_confidence",
            "fear_raw",
            "fear_salience",
            "fear_confidence",
            "hope_raw",
            "hope_salience",
            "hope_confidence",
            "fantasy_raw",
            "fantasy_salience",
            "fantasy_confidence",
            "pragmatism_raw",
            "pragmatism_salience",
            "pragmatism_confidence"
          ]
        }
      },
      "run_complete_statistical_analysis": {
        "analysis_metadata": {
          "timestamp": "2025-08-25T19:42:08.798042",
          "sample_size": 8,
          "alpha_level": 0.05,
          "variables_analyzed": [
            "tribalism_raw",
            "tribalism_salience",
            "tribalism_confidence",
            "dignity_raw",
            "dignity_salience",
            "dignity_confidence",
            "manipulation_raw",
            "manipulation_salience",
            "manipulation_confidence",
            "truth_raw",
            "truth_salience",
            "truth_confidence",
            "resentment_raw",
            "resentment_salience",
            "resentment_confidence",
            "justice_raw",
            "justice_salience",
            "justice_confidence",
            "fear_raw",
            "fear_salience",
            "fear_confidence",
            "hope_raw",
            "hope_salience",
            "hope_confidence",
            "fantasy_raw",
            "fantasy_salience",
            "fantasy_confidence",
            "pragmatism_raw",
            "pragmatism_salience",
            "pragmatism_confidence"
          ]
        }
      },
      "validate_framework_by_style": {
        "status": "error",
        "message": "Cannot perform style validation. 'style' column not found in corpus manifest or is empty. Fallback to speaker parsing does not provide style information."
      }
    },
    "status": "success_with_data",
    "validation_passed": true
  }
}

**Available Evidence for Citation:**
You have access to 2586 pieces of textual evidence extracted during analysis. Use semantic queries to find relevant evidence for each statistical finding.

# ANALYTICAL REQUIREMENTS

## Level 1: Basic Statistical Interpretation
- Interpret descriptive statistics for all measured dimensions
- Identify patterns in means, standard deviations, and distributions
- Note significant correlations and their strength
- Assess measurement quality using framework-appropriate validation:
  * For oppositional frameworks: Interpret negative correlations as validation (opposing constructs should be negatively correlated)
  * For unidimensional frameworks: Interpret traditional reliability metrics (Cronbach's Alpha)

## Level 2: Advanced Pattern Recognition  
- Analyze cross-dimensional relationships and interaction effects
- Identify statistical outliers and anomalous patterns
- Examine confidence patterns and analytical uncertainty
- Detect framework-specific insights from derived metrics

## Level 3: Cross-Dimensional Network Analysis
- Map dimensional clustering and meta-strategies
- Identify universal patterns across all cases
- Analyze tension patterns and strategic contradictions
- Assess variance decomposition and discriminatory power

## Level 4: Temporal and Archetypal Analysis
- Examine temporal progression patterns (when applicable)
- Identify rhetorical archetypes and speaker clustering
- Analyze normative layer gradients and trajectories
- Assess framework effectiveness and limitations

## Level 5: Meta-Analysis and Theoretical Integration
- Connect findings to relevant theoretical frameworks
- Identify methodological implications and innovations
- Generate testable hypotheses for future research
- Assess broader implications for the field

# REPORT STRUCTURE REQUIREMENTS

## 0. Experiment Provenance Header (REQUIRED FIRST)
Start every report with available experiment metadata:

```
# [Framework Name] Analysis Report

**Experiment**: [experiment_name]  
**Run ID**: [run_id]  
**Date**: [completion_date]  
**Framework**: [framework_filename]  
**Corpus**: [corpus_filename] ([document_count] documents)  

---
```

Use only metadata that is actually available in the experiment_metadata. This header enables traceability of results.

## 1. Executive Summary (2-3 paragraphs)
- Key findings with statistical support
- Primary insights and their significance
- Framework effectiveness assessment

## 2. Opening Framework: Key Insights (Bullet points)
- 4-6 primary insights from the analysis
- Each supported by specific statistical evidence
- Clear, accessible language for broad audience

## 3. Literature Review and Theoretical Framework (Optional)
- Connect framework to relevant academic literature
- Position analysis within scholarly discourse
- Identify theoretical foundations

## 4. Methodology
- Framework description and analytical approach
- Data structure and corpus description
- Statistical methods and analytical constraints
- Acknowledge limitations and methodological choices

## 5. Comprehensive Results
### 5.1 Descriptive Statistics
- Present all statistical results in properly formatted Markdown tables
- Include significance indicators: * p<0.05, ** p<0.01, *** p<0.001
- Add effect size interpretations (Small/Medium/Large based on Cohen's conventions)
- Use consistent decimal precision (2-3 places)
- Dimensional means, distributions, and patterns with statistical interpretation

### 5.2 Advanced Metric Analysis
- Derived metrics interpretation
- Tension patterns and strategic contradictions
- Confidence-weighted analysis

### 5.3 Correlation and Interaction Analysis
- Cross-dimensional relationships with theoretical interpretation
- Network effects and clustering patterns
- Meta-strategy identification

### 5.4 Pattern Recognition and Theoretical Insights
- Identify the strongest correlations and explain their practical significance
- Connect statistical patterns to theoretical frameworks and literature
- Explain what correlation patterns reveal about the framework's construct validity
- Highlight unexpected findings and their implications
- Assess framework-corpus fit based on statistical patterns

### 5.5 Framework Effectiveness Assessment
- Discriminatory power analysis
- Framework-corpus fit evaluation
- Methodological insights

## 6. Discussion
- Theoretical implications of findings
- Comparative analysis and archetypal patterns
- Broader significance for the field
- Limitations and future directions

## 7. Conclusion
- Summary of key contributions
- Methodological validation
- Research implications

## 8. Evidence Citations
- Complete attribution for all quoted evidence
- Organized by source document
- Substantial quotes with context

# CRITICAL REQUIREMENTS

## Evidence Integration Standards
- **Mandatory Citation**: For every major statistical finding or interpretation presented, you MUST cite at least one supporting textual quote retrieved from the RAG evidence database. Do not make claims without direct textual support.
- **Qualify, Don't Omit**: If the retrieved evidence is weak or indirect, you must still cite it and then explicitly state the weakness in your analysis (e.g., "While the textual evidence is not a direct confirmation, it suggests..."). Do not simply omit evidence and write meta-commentary about its absence.
- **Attribution format**: 'As [Speaker] stated: "[exact quote]" (Source: [document_name])'
- **Substantial quotes**: Full sentences, not fragments
- **Quality check**: Every Results paragraph contains at least one direct quote

## Statistical Interpretation Standards
- **No calculations**: Interpret provided statistics as definitive facts
- **Numerical Precision**: When citing statistical values, use appropriate precision (typically 2-3 decimal places for correlations, means, and standard deviations) following APA style guidelines
- **Data Interpretation Process**: Use the exact numerical values from the statistical data to inform your qualitative descriptions and determine effect sizes
- **Transparency**: State analytical approach clearly (descriptive vs. inferential)  
- **Appropriate conclusions**: Draw strongest evidence-based conclusions possible while avoiding grandiose or unsubstantiated claims
- **Uncertainty acknowledgment**: Note limitations while maximizing insights
- **Academic Tone**: Use measured, evidence-based language rather than superlatives or overstated claims

## Citation and Reference Standards
- **NO EXTERNAL CITATIONS**: Do not include academic references, citations, or bibliographic entries (e.g., "Author et al., 2023")
- **NO AUTHORITY CLAIMS**: Avoid phrases like "research shows," "studies indicate," or "according to literature"
- **DATA-FOCUSED LANGUAGE**: Use "This analysis suggests," "These findings indicate," or "The data reveals"
- **RESEARCHER GUIDANCE**: Include phrases like "researchers may wish to explore," "future studies could investigate," or "this warrants further investigation"
- **COMPUTATIONAL FOCUS**: Position findings as computational analysis results, not authoritative academic claims

## Framework Agnosticism Standards
- **Dynamic adaptation**: Work with any framework's dimensional structure
- **No assumptions**: Don't assume specific dimension names or relationships
- **Flexible analysis**: Adapt analytical depth to available data richness
- **Universal patterns**: Look for insights applicable across frameworks
- **Accurate terminology**: Use the exact framework terminology from the specification (e.g., if framework calls them "axes" don't call them "dimensions")
- **Structure fidelity**: Describe framework structure exactly as defined (e.g., "Identity Axis: Tribalism/Dignity" not "Identity dimension")
- **Avoid hallucination**: Never invent framework elements not present in the specification

## Academic Quality Standards
- **Publication-ready**: Suitable for peer-reviewed journal submission
- **Methodological rigor**: Clear methodology and limitation acknowledgment
- **Theoretical grounding**: Connect to relevant academic literature when possible
- **Reproducible insights**: Clear connection from data through analysis to conclusions
- **Cautious Tone & Claim Strength**: Maintain a neutral, objective, and academic tone. Avoid promotional language, superlatives, and grandiose claims (e.g., "powerful," "profound," "demonstrates conclusively," "validates the framework"). All claims must be proportional to the evidence. Given the small sample size of this pilot study (N=4), all findings should be presented as "preliminary," "suggestive," or "indicative" rather than "validated" or "proven." State findings factually and let the data speak for itself.

# OUTPUT INSTRUCTIONS

Generate a comprehensive academic report following the structure above. Use the complete research data and evidence to extract maximum insights while maintaining scientific rigor. The report should demonstrate the analytical sophistication possible through computational social science methods.

**Target Length**: 3000-5000 words for comprehensive analysis
**Writing Style**: Academic but accessible, suitable for computational social science journals
**Evidence Integration**: Seamless weaving of statistical and textual evidence throughout
