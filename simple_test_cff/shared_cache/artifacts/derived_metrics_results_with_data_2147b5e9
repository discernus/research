{
  "generation_metadata": {
    "status": "success",
    "functions_generated": 6,
    "output_file": "automatedderivedmetricsagent_functions.py",
    "module_size": 12821,
    "function_code_content": "\"\"\"\nAutomated Derived Metrics Functions\n===================================\n\nGenerated by AutomatedDerivedMetricsAgent for experiment: Test Experiment\nDescription: Test experiment for derived metrics\nGenerated: 2025-08-24T03:45:39.806253+00:00\n\nThis module contains automatically generated calculation functions for derived metrics\nas specified in the framework's natural language descriptions.\n\"\"\"\n\nimport pandas as pd\nimport numpy as np\nfrom typing import Optional, Dict, Any\n\n\ndef calculate_identity_tension(data, **kwargs):\n    \"\"\"\n    Calculate identity_tension: Conflict between tribal dominance and individual dignity dimensions\n\n    This function measures the tension between two competing identity dimensions. The tension is\n    maximized when both dimensions have high and equal scores, indicating a strong internal\n    conflict in the discourse. It assumes scores are normalized between 0 and 1.\n\n    Formula:\n    tension = ((tribal_dominance + individual_dignity) / 2) * (1 - abs(tribal_dominance - individual_dignity))\n\n    Args:\n        data (pd.Series): A single row of data containing the necessary dimension scores.\n        **kwargs: Additional parameters (unused).\n\n    Returns:\n        float: The calculated identity tension score, or None if necessary data is missing or invalid.\n    \"\"\"\n    import pandas as pd\n    import numpy as np\n\n    try:\n        # The calculation is described as a conflict between \"tribal dominance\" and \"individual dignity\".\n        # We infer these are the required column names based on the description.\n        tribal_dominance = data['tribal_dominance']\n        individual_dignity = data['individual_dignity']\n\n        # Ensure necessary data is present\n        if pd.isna(tribal_dominance) or pd.isna(individual_dignity):\n            return None\n\n        # The tension formula is highest when both scores are high and close together.\n        # It calculates the average of the scores and penalizes it by their difference.\n        average_score = (tribal_dominance + individual_dignity) / 2.0\n        absolute_difference = abs(tribal_dominance - individual_dignity)\n\n        # The (1 - absolute_difference) term is maximized when the scores are equal.\n        tension = average_score * (1 - absolute_difference)\n\n        return float(tension)\n\n    except (KeyError, TypeError):\n        # Handle cases where columns are missing or data types are incorrect\n        return None\n\ndef calculate_emotional_balance(data, **kwargs):\n    \"\"\"\n    Calculate emotional_balance: Difference between hope and fear scores\n\n    Formula: hope_score - fear_score\n    \n    Args:\n        data (pd.Series): A single row of data with dimension scores.\n        **kwargs: Additional keyword arguments (not used).\n        \n    Returns:\n        float: Calculated result or None if insufficient data.\n    \"\"\"\n    import pandas as pd\n    import numpy as np\n    \n    try:\n        hope_col = 'hope_score'\n        fear_col = 'fear_score'\n\n        # Ensure necessary columns are present in the data (works for Series/DataFrame row)\n        if hope_col not in data.index or fear_col not in data.index:\n            return None\n\n        hope_score = data[hope_col]\n        fear_score = data[fear_col]\n\n        # Check for missing or non-numeric data\n        if pd.isna(hope_score) or pd.isna(fear_score):\n            return None\n        \n        # Convert to numeric types for calculation, handling potential errors\n        hope_score = float(hope_score)\n        fear_score = float(fear_score)\n\n        # Calculate the difference\n        emotional_balance = hope_score - fear_score\n        \n        return emotional_balance\n\n    except (KeyError, TypeError, ValueError):\n        # Handle missing keys, incorrect data types, or non-convertible values\n        return None\n    except Exception:\n        # A general catch-all for any other unexpected errors\n        return None\n\ndef calculate_success_climate(data, **kwargs):\n    \"\"\"\n    Calculate success_climate: Difference between compersion and envy scores.\n\n    Formula: success_climate = compersion - envy\n    \n    Args:\n        data (pd.Series): A row of data containing compersion and envy scores.\n        **kwargs: Additional keyword arguments (not used in this calculation).\n        \n    Returns:\n        float: The calculated success climate score, or None if input data is\n               missing or invalid.\n    \"\"\"\n    import pandas as pd\n\n    try:\n        # Per the description, the calculation requires 'compersion' and 'envy' scores.\n        # As no column names were provided, we infer them directly from the dimension names.\n        compersion_score = data['compersion']\n        envy_score = data['envy']\n\n        # Handle missing data gracefully by checking for NaN or None\n        if pd.isna(compersion_score) or pd.isna(envy_score):\n            return None\n\n        # Ensure scores are numeric and perform the calculation\n        result = float(compersion_score) - float(envy_score)\n        \n        return result\n\n    except (KeyError, TypeError, ValueError):\n        # KeyError: if 'compersion' or 'envy' columns do not exist.\n        # TypeError: if 'data' is not a subscriptable object (e.g., NoneType).\n        # ValueError: if scores are not convertible to float.\n        return None\n\ndef calculate_relational_climate(data, **kwargs):\n    \"\"\"\n    Calculate relational_climate: Difference between amity and enmity scores\n\n    Formula: relational_climate = amity - enmity\n\n    Args:\n        data (pd.Series): A row of data containing 'amity' and 'enmity' scores.\n        **kwargs: Additional keyword arguments (not used).\n\n    Returns:\n        float: The calculated score, or None if input data is missing or invalid.\n    \"\"\"\n    import pandas as pd\n\n    try:\n        # Retrieve scores using .get() to handle missing columns gracefully.\n        # pd.to_numeric with errors='coerce' will convert non-numeric values\n        # and None (from missing columns) into NaN (Not a Number).\n        amity_score = pd.to_numeric(data.get('amity'), errors='coerce')\n        enmity_score = pd.to_numeric(data.get('enmity'), errors='coerce')\n\n        # If either score is NaN (due to missing column, None value, or\n        # non-numeric data), the calculation is not possible.\n        if pd.isna(amity_score) or pd.isna(enmity_score):\n            return None\n\n        # Perform the calculation\n        result = float(amity_score - enmity_score)\n\n        return result\n\n    except (AttributeError, TypeError):\n        # This will catch errors if `data` is not a pandas Series or dict-like\n        # object that supports the .get() method.\n        return None\n    except Exception:\n        # A general fallback for any other unexpected errors.\n        return None\n\ndef calculate_goal_orientation(data, **kwargs):\n    \"\"\"\n    Calculate goal_orientation: Difference between cohesive goals and fragmentative goals\n\n    Formula: cohesive_goals - fragmentative_goals\n\n    Args:\n        data (pd.Series): A single row of analysis data containing dimension scores.\n        **kwargs: Additional parameters (not used).\n\n    Returns:\n        float: Calculated result or None if insufficient data.\n    \"\"\"\n    import pandas as pd\n    import numpy as np\n\n    try:\n        cohesive_col = 'cohesive_goals'\n        fragmentative_col = 'fragmentative_goals'\n\n        # Extract scores from the data Series\n        cohesive_score = data[cohesive_col]\n        fragmentative_score = data[fragmentative_col]\n\n        # Check for missing values (NaN, None) before calculation\n        if pd.isna(cohesive_score) or pd.isna(fragmentative_score):\n            return None\n\n        # Perform the calculation\n        result = float(cohesive_score - fragmentative_score)\n\n        # Ensure the result is a finite number (not inf, -inf, or nan)\n        if not np.isfinite(result):\n            return None\n\n        return result\n    except Exception:\n        # Catches KeyError if columns are missing, TypeError if data is non-numeric,\n        # or any other unexpected errors.\n        return None\n\ndef calculate_overall_cohesion_index(data, **kwargs):\n    \"\"\"\n    Calculate overall_cohesion_index: Comprehensive measure combining all dimensions.\n\n    This function computes a holistic score representing the overall state of\n    social cohesion as defined by the Cohesive Flourishing Framework. It is\n    calculated as the arithmetic mean of the primary sub-indices, each\n    representing a core dimension of a flourishing society.\n\n    Formula:\n    mean(\n        discourse_health_index,\n        social_fabric_index,\n        civic_vitality_index,\n        institutional_trust_index\n    )\n\n    Args:\n        data (pd.Series or pd.DataFrame): A single row of data containing\n            the necessary pre-calculated sub-indices.\n            Required columns:\n            - 'discourse_health_index': Index measuring constructive vs. destructive communication.\n            - 'social_fabric_index': Index measuring social trust, solidarity, and belonging.\n            - 'civic_vitality_index': Index measuring active and constructive citizen engagement.\n            - 'institutional_trust_index': Index measuring public confidence in shared institutions.\n\n    Returns:\n        float: The calculated Overall Cohesion Index, or None if any of the\n               required sub-indices are missing or non-numeric.\n    \"\"\"\n    import pandas as pd\n    import numpy as np\n\n    # As this function aggregates other indices, these are its dependencies.\n    # Invented based on framework description as no explicit columns were provided.\n    required_columns = [\n        'discourse_health_index',\n        'social_fabric_index',\n        'civic_vitality_index',\n        'institutional_trust_index'\n    ]\n\n    try:\n        # Handle both Series and single-row DataFrame inputs\n        if isinstance(data, pd.DataFrame):\n            if data.empty:\n                return None\n            record = data.iloc[0]\n        elif isinstance(data, pd.Series):\n            record = data\n        else:\n            # Invalid input type\n            return None\n\n        # Check for the presence of all required columns\n        if not all(col in record.index for col in required_columns):\n            return None\n\n        # Extract values, ensuring they are numeric and handling non-numeric data\n        values = pd.to_numeric(record[required_columns], errors='coerce')\n\n        # If any value is missing (NaN) after conversion, we cannot calculate the index\n        if values.isnull().any():\n            return None\n\n        # Calculate the mean of the component indices\n        overall_index = values.mean()\n\n        return float(overall_index)\n\n    except (AttributeError, TypeError, ValueError, IndexError):\n        # Catch a variety of potential errors during data processing\n        return None\n    except Exception:\n        # Broad exception for any other unforeseen issues\n        return None\n\ndef calculate_all_derived_metrics(data: pd.DataFrame) -> Dict[str, Optional[float]]:\n    \"\"\"\n    Calculate all derived metrics for the given dataset.\n    \n    Args:\n        data: pandas DataFrame with dimension scores\n        \n    Returns:\n        Dictionary mapping metric names to calculated values\n    \"\"\"\n    results = {}\n    \n    # Get all calculation functions from this module\n    import inspect\n    current_module = inspect.getmodule(inspect.currentframe())\n    \n    for name, obj in inspect.getmembers(current_module):\n        if (inspect.isfunction(obj) and \n            name.startswith('calculate_') and \n            name not in ['calculate_all_derived_metrics', 'calculate_derived_metrics']):\n            try:\n                results[name.replace('calculate_', '')] = obj(data)\n            except Exception as e:\n                results[name.replace('calculate_', '')] = None\n                \n    return results\n\n\ndef calculate_derived_metrics(data: pd.DataFrame) -> pd.DataFrame:\n    \"\"\"\n    Template-compatible wrapper function for derived metrics calculation.\n    \n    This function is called by the universal notebook template and returns\n    the original data with additional derived metric columns.\n    \n    Args:\n        data: pandas DataFrame with dimension scores\n        \n    Returns:\n        DataFrame with original data plus derived metric columns\n    \"\"\"\n    # Calculate all derived metrics\n    derived_metrics = calculate_all_derived_metrics(data)\n    \n    # Create a copy of the original data\n    result = data.copy()\n    \n    # Add derived metrics as new columns\n    for metric_name, metric_value in derived_metrics.items():\n        if metric_value is not None:\n            # For scalar metrics, broadcast to all rows\n            result[metric_name] = metric_value\n        else:\n            # For failed calculations, use NaN\n            result[metric_name] = np.nan\n    \n    return result\n",
    "cached_with_code": true
  },
  "derived_metrics_data": {
    "status": "success",
    "original_count": 4,
    "derived_count": 4,
    "derived_metrics": [
      {
        "analysis_id": "analysis_140e27a30c9f",
        "result_hash": "8799556b3890e22fd1316104a08a31a94aa81b53f80dc8913d70ecdf0ae90a60",
        "result_content": {
          "analysis_id": "analysis_140e27a30c9f",
          "agent_name": "EnhancedAnalysisAgent",
          "agent_version": "enhanced_v2.1_raw_output",
          "experiment_name": "simple_test",
          "model_used": "vertex_ai/gemini-2.5-pro",
          "raw_analysis_response": "```\n<<<DISCERNUS_ANALYSIS_JSON_v6>>>\n{\n  \"analysis_metadata\": {\n    \"framework_name\": \"cohesive_flourishing_framework\",\n    \"framework_version\": \"10.0\",\n    \"analyst_confidence\": 0.95,\n    \"analysis_notes\": \"The document is a political concession speech, a genre characterized by calls for unity and respect for the victor. The analysis reflects this, with high scores on dimensions related to cohesion (Amity, Hope, Compersion, Cohesive Goals, Individual Dignity) and very low scores on dimensions related to fragmentation. The speaker's rhetoric is direct and unambiguous, leading to high confidence in the scoring.\"\n  },\n  \"document_analyses\": [\n    {\n      \"document_id\": \"{artifact_id}\",\n      \"document_name\": \"john_mccain_2008_concession.txt\",\n      \"dimensional_scores\": {\n        \"tribal_dominance\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.1,\n          \"confidence\": 0.95\n        },\n        \"individual_dignity\": {\n          \"raw_score\": 0.8,\n          \"salience\": 0.8,\n          \"confidence\": 0.95\n        },\n        \"fear\": {\n          \"raw_score\": 0.1,\n          \"salience\": 0.2,\n          \"confidence\": 0.9\n        },\n        \"hope\": {\n          \"raw_score\": 0.8,\n          \"salience\": 0.9,\n          \"confidence\": 0.95\n        },\n        \"envy\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.0,\n          \"confidence\": 1.0\n        },\n        \"compersion\": {\n          \"raw_score\": 0.9,\n          \"salience\": 0.9,\n          \"confidence\": 0.95\n        },\n        \"enmity\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.1,\n          \"confidence\": 0.95\n        },\n        \"amity\": {\n          \"raw_score\": 0.9,\n          \"salience\": 1.0,\n          \"confidence\": 0.95\n        },\n        \"fragmentative_goals\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.0,\n          \"confidence\": 1.0\n        },\n        \"cohesive_goals\": {\n          \"raw_score\": 0.9,\n          \"salience\": 1.0,\n          \"confidence\": 0.95\n        }\n      },\n      \"evidence\": [\n        {\n          \"dimension\": \"tribal_dominance\",\n          \"quote_text\": \"\",\n          \"confidence\": 1.0,\n          \"context_type\": \"absence_of_evidence\"\n        },\n        {\n          \"dimension\": \"individual_dignity\",\n          \"quote_text\": \"This is an historic election, and I recognize the special significance it has for African-Americans and for the special pride that must be theirs tonight.\",\n          \"confidence\": 0.95,\n          \"context_type\": \"direct_rhetorical_appeal\"\n        },\n        {\n          \"dimension\": \"fear\",\n          \"quote_text\": \"...to not despair of our present difficulties, but to believe always in the promise and greatness of America.\",\n          \"confidence\": 0.9,\n          \"context_type\": \"counter_theme\"\n        },\n        {\n          \"dimension\": \"hope\",\n          \"quote_text\": \"We never surrender. We never hide from history. We make history.\",\n          \"confidence\": 0.9,\n          \"context_type\": \"concluding_statement\"\n        },\n        {\n          \"dimension\": \"envy\",\n          \"quote_text\": \"\",\n          \"confidence\": 1.0,\n          \"context_type\": \"absence_of_evidence\"\n        },\n        {\n          \"dimension\": \"compersion\",\n          \"quote_text\": \"But that he managed to do so by inspiring the hopes of so many millions of Americans who had once wrongly believed that they had little at stake or little influence in the election of an American president is something I deeply admire and commend him for achieving.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"direct_praise_of_opponent\"\n        },\n        {\n          \"dimension\": \"enmity\",\n          \"quote_text\": \"I wish Godspeed to the man who was my former opponent and will be my president.\",\n          \"confidence\": 0.95,\n          \"context_type\": \"direct_rejection_of_enmity\"\n        },\n        {\n          \"dimension\": \"amity\",\n          \"quote_text\": \"Whatever our differences, we are fellow Americans, and please believe me when I say no association has ever meant more to me than that.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"direct_rhetorical_appeal\"\n        },\n        {\n          \"dimension\": \"fragmentative_goals\",\n          \"quote_text\": \"\",\n          \"confidence\": 1.0,\n          \"context_type\": \"absence_of_evidence\"\n        },\n        {\n          \"dimension\": \"cohesive_goals\",\n          \"quote_text\": \"I urge all Americans who supported me to join me in not just congratulating him, but offering our next president our good will and earnest effort to find ways to come together, to find the necessary compromises to bridge our differences and help restore our prosperity, defend our security in a dangerous world, and leave our children and grandchildren a stronger, better country than we inherited.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"central_call_to_action\"\n        }\n      ]\n    }\n  ]\n}\n<<<END_DISCERNUS_ANALYSIS_JSON_v6>>>\n```",
          "evidence_hash": "3a2aea5d29c11fd66108609b3c32ca9365b013325cba6a631937bda0c24f2974",
          "execution_metadata": {
            "start_time": "2025-08-24T03:40:19.034967+00:00",
            "end_time": "2025-08-24T03:40:48.799801+00:00",
            "duration_seconds": 29.764814
          },
          "input_artifacts": {
            "framework_hash": "b254fffdb549378c430a324bd448849b3556ea58fd390e1011c62365faaee3c5",
            "document_hashes": [
              "ff9b26f20ad6dfa10cbf8ce4b7353fddab5e7cce5879e6b4603b8af60d0a9e35"
            ],
            "num_documents": 1
          },
          "provenance": {
            "security_boundary": {
              "experiment_name": "simple_test_cff",
              "experiment_root": "/Volumes/code/discernus/projects/simple_test_cff",
              "boundary_type": "filesystem",
              "security_level": "experiment_scoped"
            },
            "audit_session_id": "20250824T033926Z_e07cf4d4"
          }
        },
        "cached": true
      },
      {
        "analysis_id": "analysis_2572f29378b9",
        "result_hash": "380d450d2130c4405e683edb2f4f4d97d90ff8fb9c481a7f0f3d1bab30bd202f",
        "result_content": {
          "analysis_id": "analysis_2572f29378b9",
          "agent_name": "EnhancedAnalysisAgent",
          "agent_version": "enhanced_v2.1_raw_output",
          "experiment_name": "simple_test",
          "model_used": "vertex_ai/gemini-2.5-pro",
          "raw_analysis_response": "<<<DISCERNUS_ANALYSIS_JSON_v6>>>\n{\n  \"analysis_metadata\": {\n    \"framework_name\": \"cohesive_flourishing_framework\",\n    \"framework_version\": \"10.0\",\n    \"analyst_confidence\": 0.95,\n    \"analysis_notes\": \"The document is a political speech with two distinct but thematically linked sections. The first section frames a procedural political dispute (a Supreme Court nomination) in existential terms of constitutional survival. The second, more dominant section pivots to immigration, using highly graphic and emotional victim narratives to evoke fear and anger, framing immigrants as a hostile out-group and the current administration as an adversary enabling them. The rhetorical strategy is clear and maps well to the framework's dimensions, particularly those related to fear, enmity, and tribalism. Cohesive dimensions are almost entirely absent.\"\n  },\n  \"document_analyses\": [\n    {\n      \"document_id\": \"{artifact_id}\",\n      \"document_name\": \"steve_king_2017_house_floor.txt\",\n      \"dimensional_scores\": {\n        \"tribal_dominance\": {\n          \"raw_score\": 0.8,\n          \"salience\": 0.9,\n          \"confidence\": 0.95\n        },\n        \"individual_dignity\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.0,\n          \"confidence\": 0.95\n        },\n        \"fear\": {\n          \"raw_score\": 0.9,\n          \"salience\": 0.9,\n          \"confidence\": 0.95\n        },\n        \"hope\": {\n          \"raw_score\": 0.1,\n          \"salience\": 0.2,\n          \"confidence\": 0.9\n        },\n        \"envy\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.0,\n          \"confidence\": 0.95\n        },\n        \"compersion\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.0,\n          \"confidence\": 0.95\n        },\n        \"enmity\": {\n          \"raw_score\": 0.8,\n          \"salience\": 0.8,\n          \"confidence\": 0.95\n        },\n        \"amity\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.0,\n          \"confidence\": 0.9\n        },\n        \"fragmentative_goals\": {\n          \"raw_score\": 0.8,\n          \"salience\": 0.7,\n          \"confidence\": 0.95\n        },\n        \"cohesive_goals\": {\n          \"raw_score\": 0.2,\n          \"salience\": 0.3,\n          \"confidence\": 0.85\n        }\n      },\n      \"evidence\": [\n        {\n          \"dimension\": \"tribal_dominance\",\n          \"quote_text\": \"That's 135 dead Americans that would be alive today if the President didn't have the policy of releasing criminal, criminal aliens onto the streets.\",\n          \"confidence\": 0.95,\n          \"context_type\": \"Policy Critique\"\n        },\n        {\n          \"dimension\": \"individual_dignity\",\n          \"quote_text\": \"\",\n          \"confidence\": 0.95,\n          \"context_type\": \"Absence of Evidence\"\n        },\n        {\n          \"dimension\": \"fear\",\n          \"quote_text\": \"This illegal alien beat this boy to death and then he went and bought gasoline and burned his body. He hauled his body out and and put gas and poured gasoline on it and burned this Joshua Wilkerson's body and then he went and took a shower and went to a movie as if it was just another day in the life of.\",\n          \"confidence\": 0.98,\n          \"context_type\": \"Victim Narrative\"\n        },\n        {\n          \"dimension\": \"hope\",\n          \"quote_text\": \"And this Congress ought to speak up and we need a president that will appoint justices to the Supreme Court that will rule on the text of the Constitution, its original meaning, and on the understanding of what the text of that Constitution says.\",\n          \"confidence\": 0.9,\n          \"context_type\": \"Call to Action\"\n        },\n        {\n          \"dimension\": \"envy\",\n          \"quote_text\": \"\",\n          \"confidence\": 0.95,\n          \"context_type\": \"Absence of Evidence\"\n        },\n        {\n          \"dimension\": \"compersion\",\n          \"quote_text\": \"\",\n          \"confidence\": 0.95,\n          \"context_type\": \"Absence of Evidence\"\n        },\n        {\n          \"dimension\": \"enmity\",\n          \"quote_text\": \"And instead of being restored, it would be destroyed by another presidential appointment.\",\n          \"confidence\": 0.95,\n          \"context_type\": \"Constitutional Argument\"\n        },\n        {\n          \"dimension\": \"amity\",\n          \"quote_text\": \"\",\n          \"confidence\": 0.9,\n          \"context_type\": \"Absence of Evidence\"\n        },\n        {\n          \"dimension\": \"fragmentative_goals\",\n          \"quote_text\": \"No hearing, no, no confirmation in the Senate, no vote in the in the Judiciary Committee, and no vote on the floor of the Senate for this lame duck President's appointments because we have a Constitution that's got to be restored.\",\n          \"confidence\": 0.95,\n          \"context_type\": \"Call to Action\"\n        },\n        {\n          \"dimension\": \"cohesive_goals\",\n          \"quote_text\": \"We have a Constitution to preserve, protect, defend, and support and defend.\",\n          \"confidence\": 0.85,\n          \"context_type\": \"Constitutional Argument\"\n        }\n      ]\n    }\n  ]\n}\n<<<END_DISCERNUS_ANALYSIS_JSON_v6>>>",
          "evidence_hash": "b5a8cd4aed305ce3c400c7bb0c04a385d57dffe58828fffb60438279f419ea49",
          "execution_metadata": {
            "start_time": "2025-08-24T03:40:48.801163+00:00",
            "end_time": "2025-08-24T03:41:42.969215+00:00",
            "duration_seconds": 54.168036
          },
          "input_artifacts": {
            "framework_hash": "b254fffdb549378c430a324bd448849b3556ea58fd390e1011c62365faaee3c5",
            "document_hashes": [
              "738780d93cc3c43b7b2e292a7fd0aa9f7e438f7ad2555be4ce6bfc20d9efda82"
            ],
            "num_documents": 1
          },
          "provenance": {
            "security_boundary": {
              "experiment_name": "simple_test_cff",
              "experiment_root": "/Volumes/code/discernus/projects/simple_test_cff",
              "boundary_type": "filesystem",
              "security_level": "experiment_scoped"
            },
            "audit_session_id": "20250824T033926Z_e07cf4d4"
          }
        },
        "cached": true
      },
      {
        "analysis_id": "analysis_7be7931f6872",
        "result_hash": "c72459760d7f5693906ae553ccc6e36bb9655bcd479878940d3780a788a5e82f",
        "result_content": {
          "analysis_id": "analysis_7be7931f6872",
          "agent_name": "EnhancedAnalysisAgent",
          "agent_version": "enhanced_v2.1_raw_output",
          "experiment_name": "simple_test",
          "model_used": "vertex_ai/gemini-2.5-pro",
          "raw_analysis_response": "<<<DISCERNUS_ANALYSIS_JSON_v6>>>\n{\n  \"analysis_metadata\": {\n    \"framework_name\": \"cohesive_flourishing_framework\",\n    \"framework_version\": \"10.0\",\n    \"analyst_confidence\": 0.95,\n    \"analysis_notes\": \"The document is a classic example of populist rhetoric, establishing a strong conflict between 'the American people' and a 'billionaire' or 'oligarch' class. This makes dimensions like tribal_dominance, envy, and enmity highly intense and salient. The positive dimensions, such as hope and amity, are present but are primarily used as mobilization tools for the in-group to combat the defined out-group.\"\n  },\n  \"document_analyses\": [\n    {\n      \"document_id\": \"{artifact_id}\",\n      \"document_name\": \"bernie_sanders_2025_fighting_oligarchy.txt\",\n      \"dimensional_scores\": {\n        \"tribal_dominance\": {\n          \"raw_score\": 0.8,\n          \"salience\": 0.9,\n          \"confidence\": 1.0\n        },\n        \"individual_dignity\": {\n          \"raw_score\": 0.1,\n          \"salience\": 0.1,\n          \"confidence\": 0.9\n        },\n        \"fear\": {\n          \"raw_score\": 0.6,\n          \"salience\": 0.5,\n          \"confidence\": 0.9\n        },\n        \"hope\": {\n          \"raw_score\": 0.7,\n          \"salience\": 0.8,\n          \"confidence\": 1.0\n        },\n        \"envy\": {\n          \"raw_score\": 0.9,\n          \"salience\": 0.9,\n          \"confidence\": 1.0\n        },\n        \"compersion\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.0,\n          \"confidence\": 1.0\n        },\n        \"enmity\": {\n          \"raw_score\": 0.8,\n          \"salience\": 0.9,\n          \"confidence\": 1.0\n        },\n        \"amity\": {\n          \"raw_score\": 0.6,\n          \"salience\": 0.7,\n          \"confidence\": 1.0\n        },\n        \"fragmentative_goals\": {\n          \"raw_score\": 0.8,\n          \"salience\": 0.8,\n          \"confidence\": 1.0\n        },\n        \"cohesive_goals\": {\n          \"raw_score\": 0.3,\n          \"salience\": 0.5,\n          \"confidence\": 0.9\n        }\n      },\n      \"evidence\": [\n        {\n          \"dimension\": \"tribal_dominance\",\n          \"quote_text\": \"Abraham Lincoln talked about a government of the people, by the people, for the people. Well, Trump has a government of the billionaires, by the billionaires, and for the billionaires.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"central_argument\"\n        },\n        {\n          \"dimension\": \"individual_dignity\",\n          \"quote_text\": \"I don't care if you are a Republican, Democrat, or independent, I don't think there's anybody who thinks it vaguely makes sense that the richest guy in the world could spend $270 million to get Trump elected and then become the most powerful person in the government.\",\n          \"confidence\": 0.8,\n          \"context_type\": \"inclusive_appeal_setup\"\n        },\n        {\n          \"dimension\": \"fear\",\n          \"quote_text\": \"They are prepared to destroy Social Security, Medicaid, Medicare, the Veterans Administration in order to make themselves even richer.\",\n          \"confidence\": 0.9,\n          \"context_type\": \"threat_assessment\"\n        },\n        {\n          \"dimension\": \"hope\",\n          \"quote_text\": \"So if we stand together, are strong, are disciplined, are smart, I have every reason to believe deeply in my heart that not only will we defeat Trumpism, but we can create the kind of nation that we deserve.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"closing_vision_statement\"\n        },\n        {\n          \"dimension\": \"envy\",\n          \"quote_text\": \"Meanwhile, there has been a $75 trillion transfer of wealth from the bottom 90% to the top 1%. That is what a rigged economy is about, and that is what we are going to change.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"core_grievance_statement\"\n        },\n        {\n          \"dimension\": \"compersion\",\n          \"quote_text\": \"\",\n          \"confidence\": 1.0,\n          \"context_type\": \"absent_in_text\"\n        },\n        {\n          \"dimension\": \"enmity\",\n          \"quote_text\": \"But I will tell you this, in the midst of all of these addictions, the worst and most dangerous addiction we have is the greed of the oligarchs.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"adversarial_framing\"\n        },\n        {\n          \"dimension\": \"amity\",\n          \"quote_text\": \"So if we stand together, are strong, are disciplined, are smart, I have every reason to believe deeply in my heart that not only will we defeat Trumpism, but we can create the kind of nation that we deserve.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"in-group_mobilization_call\"\n        },\n        {\n          \"dimension\": \"fragmentative_goals\",\n          \"quote_text\": \"We will not accept an oligarchic form of society. We will not accept the richest guy in the world running all over Washington, making cuts to the Social Security Administration, cuts to the Veterans Administration, almost destroying the Department of Education, all so that they could give over a trillion dollars in tax breaks to the wealthiest 1%.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"statement_of_opposition\"\n        },\n        {\n          \"dimension\": \"cohesive_goals\",\n          \"quote_text\": \"...we can create the kind of nation that we deserve.\",\n          \"confidence\": 0.9,\n          \"context_type\": \"aspirational_vision\"\n        }\n      ]\n    }\n  ]\n}\n<<<END_DISCERNUS_ANALYSIS_JSON_v6>>>",
          "evidence_hash": "60e2cef9f5d786d25382f14dc8fd9a06700a33d715578e5d9c27492a2356585c",
          "execution_metadata": {
            "start_time": "2025-08-24T03:41:42.970576+00:00",
            "end_time": "2025-08-24T03:42:29.014947+00:00",
            "duration_seconds": 46.044358
          },
          "input_artifacts": {
            "framework_hash": "b254fffdb549378c430a324bd448849b3556ea58fd390e1011c62365faaee3c5",
            "document_hashes": [
              "261b893a384411f76907e78e7997860cd9be5d959334a6b9ae1386ea1ba6cbdd"
            ],
            "num_documents": 1
          },
          "provenance": {
            "security_boundary": {
              "experiment_name": "simple_test_cff",
              "experiment_root": "/Volumes/code/discernus/projects/simple_test_cff",
              "boundary_type": "filesystem",
              "security_level": "experiment_scoped"
            },
            "audit_session_id": "20250824T033926Z_e07cf4d4"
          }
        },
        "cached": true
      },
      {
        "analysis_id": "analysis_3e3ce65667a6",
        "result_hash": "8306fb8b652d6528c4ebad6cbf4982f10e6ca1934c9c61e322d0fcd59da9b6fd",
        "result_content": {
          "analysis_id": "analysis_3e3ce65667a6",
          "agent_name": "EnhancedAnalysisAgent",
          "agent_version": "enhanced_v2.1_raw_output",
          "experiment_name": "simple_test",
          "model_used": "vertex_ai/gemini-2.5-pro",
          "raw_analysis_response": "```json\n<<<DISCERNUS_ANALYSIS_JSON_v6>>>\n{\n  \"analysis_metadata\": {\n    \"framework_name\": \"cohesive_flourishing_framework\",\n    \"framework_version\": \"10.0\",\n    \"analyst_confidence\": 0.95,\n    \"analysis_notes\": \"The document is a political speech with a very clear and consistent rhetorical strategy. It employs a populist, class-based framing that strongly polarizes a 'working class' in-group against an 'oligarch' out-group. This makes dimensions like Tribal Dominance, Envy, and Enmity highly intense and salient. Conversely, opposing dimensions like Compersion are entirely absent. The speech strategically combines strong negative framing of the problem (Fear, Envy) with a strong call for in-group solidarity (Amity, Cohesive Goals) to motivate action.\"\n  },\n  \"document_analyses\": [\n    {\n      \"document_id\": \"{artifact_id}\",\n      \"document_name\": \"alexandria_ocasio_cortez_2025_fighting_oligarchy.txt\",\n      \"dimensional_scores\": {\n        \"tribal_dominance\": {\n          \"raw_score\": 0.8,\n          \"salience\": 0.9,\n          \"confidence\": 0.95\n        },\n        \"individual_dignity\": {\n          \"raw_score\": 0.7,\n          \"salience\": 0.6,\n          \"confidence\": 0.9\n        },\n        \"fear\": {\n          \"raw_score\": 0.8,\n          \"salience\": 0.8,\n          \"confidence\": 0.95\n        },\n        \"hope\": {\n          \"raw_score\": 0.2,\n          \"salience\": 0.2,\n          \"confidence\": 0.9\n        },\n        \"envy\": {\n          \"raw_score\": 0.9,\n          \"salience\": 0.9,\n          \"confidence\": 1.0\n        },\n        \"compersion\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.0,\n          \"confidence\": 1.0\n        },\n        \"enmity\": {\n          \"raw_score\": 0.9,\n          \"salience\": 0.9,\n          \"confidence\": 0.95\n        },\n        \"amity\": {\n          \"raw_score\": 0.8,\n          \"salience\": 0.7,\n          \"confidence\": 0.9\n        },\n        \"fragmentative_goals\": {\n          \"raw_score\": 0.8,\n          \"salience\": 0.7,\n          \"confidence\": 0.9\n        },\n        \"cohesive_goals\": {\n          \"raw_score\": 0.6,\n          \"salience\": 0.6,\n          \"confidence\": 0.85\n        }\n      },\n      \"evidence\": [\n        {\n          \"dimension\": \"tribal_dominance\",\n          \"quote_text\": \"The same billionaires are taking a wrecking ball to our country and they derive their power from dividing working people apart. They specialize in getting us to turn on one another...\",\n          \"confidence\": 1.0,\n          \"context_type\": \"central_argument_framing\"\n        },\n        {\n          \"dimension\": \"individual_dignity\",\n          \"quote_text\": \"no matter your race, religion, gender identity, or status, no matter if you disagree with me on a couple of things. If you are willing to fight for someone you don\u2019t know, you are welcome here.\",\n          \"confidence\": 0.95,\n          \"context_type\": \"inclusive_call_to_action\"\n        },\n        {\n          \"dimension\": \"fear\",\n          \"quote_text\": \"It\u2019s shorthand for the right wing\u2019s entire political agenda and a certain ugly kind of politics, a politics that involves lying to and screwing over working and middle class Americans so that they can steal from our healthcare, Social Security, and veterans\u2019 benefits to pay for tax cuts for the wealthiest and bailouts for their crypto billionaire friends.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"threat_perception\"\n        },\n        {\n          \"dimension\": \"hope\",\n          \"quote_text\": \"Because in this house, we stand together, we know that, that it's our only choice because we know that without exception, if we stand together, it is the only way that we can win.\",\n          \"confidence\": 0.8,\n          \"context_type\": \"conditional_positive_outcome\"\n        },\n        {\n          \"dimension\": \"envy\",\n          \"quote_text\": \"Now it\u2019s this idea that if we just work hard, we too can have nation-state level money, except these kinds of spoils aren\u2019t earned really. They aren\u2019t working for these billions. They\u2019re stealing them. They\u2019re stealing them. They\u2019re stealing them from you and you and me.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"delegitimization_of_success\"\n        },\n        {\n          \"dimension\": \"compersion\",\n          \"quote_text\": \"\",\n          \"confidence\": 1.0,\n          \"context_type\": \"absent_theme\"\n        },\n        {\n          \"dimension\": \"enmity\",\n          \"quote_text\": \"We need to come together and spend every day between now and election day working to educate our neighbors, and give Evans and Boebert the boot, and replace them with a brawling Democrat who will stand for Colorado.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"adversarial_call_to_action\"\n        },\n        {\n          \"dimension\": \"amity\",\n          \"quote_text\": \"If you are willing to fight for working people regardless of who they are, how they identify, or where they come from, you are welcome here.\",\n          \"confidence\": 0.95,\n          \"context_type\": \"cooperative_in-group_framing\"\n        },\n        {\n          \"dimension\": \"fragmentative_goals\",\n          \"quote_text\": \"Donald Trump does see the immense pressure that working people are under. But his answer is an America that operates on the principle of every man for himself, divide and conquer.\",\n          \"confidence\": 0.85,\n          \"context_type\": \"description_of_adversarial_strategy\"\n        },\n        {\n          \"dimension\": \"cohesive_goals\",\n          \"quote_text\": \"So I hope that you see this movement is not about partisan labels or purity tests, but about class solidarity.\",\n          \"confidence\": 0.9,\n          \"context_type\": \"statement_of_unifying_principle\"\n        }\n      ]\n    }\n  ]\n}\n<<<END_DISCERNUS_ANALYSIS_JSON_v6>>>\n```",
          "evidence_hash": "75609273ba15141f7e927ea55495e8af25f8ee3b7dde2b0e81dad3ee38f8bd0d",
          "execution_metadata": {
            "start_time": "2025-08-24T03:42:29.016969+00:00",
            "end_time": "2025-08-24T03:43:12.567762+00:00",
            "duration_seconds": 43.550779
          },
          "input_artifacts": {
            "framework_hash": "b254fffdb549378c430a324bd448849b3556ea58fd390e1011c62365faaee3c5",
            "document_hashes": [
              "1121e4ae679ce6e6c08c6d2d9aa4ce0c6e5040e8b13405fcfd9ea725b8ad5ff6"
            ],
            "num_documents": 1
          },
          "provenance": {
            "security_boundary": {
              "experiment_name": "simple_test_cff",
              "experiment_root": "/Volumes/code/discernus/projects/simple_test_cff",
              "boundary_type": "filesystem",
              "security_level": "experiment_scoped"
            },
            "audit_session_id": "20250824T033926Z_e07cf4d4"
          }
        },
        "cached": true
      }
    ],
    "columns_added": []
  },
  "status": "success_with_data",
  "validation_passed": true
}