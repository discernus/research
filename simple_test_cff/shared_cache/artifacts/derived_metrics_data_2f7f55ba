{
  "status": "completed",
  "derived_metrics_hash": "262c8e26e82648f17ec92a00ae45a82809d8006c676f7c957d800009d9753758",
  "functions_generated": 6,
  "derived_metrics_results": {
    "generation_metadata": {
      "status": "success",
      "functions_generated": 6,
      "output_file": "automatedderivedmetricsagent_functions.py",
      "module_size": 12197,
      "function_code_content": "\"\"\"\nAutomated Derived Metrics Functions\n===================================\n\nGenerated by AutomatedDerivedMetricsAgent for experiment: Test Experiment\nDescription: Test experiment for derived metrics\nGenerated: 2025-08-29T15:33:41.219149+00:00\n\nThis module contains automatically generated calculation functions for derived metrics\nas specified in the framework's natural language descriptions.\n\"\"\"\n\nimport pandas as pd\nimport numpy as np\nfrom typing import Optional, Dict, Any\n\n\ndef calculate_identity_tension(data, **kwargs):\n    \"\"\"\n    Calculate identity_tension: Conflict between tribal dominance and individual dignity dimensions.\n\n    This tension is modeled as the interaction between the 'tribal_dominance' and\n    'individual_dignity' dimensions. The conflict is considered highest when both\n    dimensions are strongly present in the discourse. The product of the scores\n    is used to represent this interaction.\n\n    Formula:\n    identity_tension = tribal_dominance * individual_dignity\n\n    Args:\n        data (pd.Series): A single row of data as a pandas Series, containing\n                          dimension scores.\n        **kwargs: Additional keyword arguments (not used).\n\n    Returns:\n        float: The calculated identity tension score, or None if input data is\n               missing or invalid.\n    \"\"\"\n    import pandas as pd\n    import numpy as np\n\n    try:\n        # This calculation logically requires 'tribal_dominance' and 'individual_dignity'\n        # columns, inferred from the calculation's description.\n        tribal_dominance = data['tribal_dominance']\n        individual_dignity = data['individual_dignity']\n\n        # Ensure both required values are present and are numeric\n        if pd.isna(tribal_dominance) or pd.isna(individual_dignity):\n            return None\n\n        # Calculate tension as the product of the two scores\n        result = float(tribal_dominance * individual_dignity)\n\n        # Ensure result is not NaN or infinite\n        if not np.isfinite(result):\n            return None\n            \n        return result\n\n    except (KeyError, TypeError, IndexError):\n        # Handles missing columns, non-numeric data, or empty data structures\n        return None\n    except Exception:\n        # Fallback for any other unexpected errors\n        return None\n\ndef calculate_emotional_balance(data, **kwargs):\n    \"\"\"\n    Calculate emotional_balance: Difference between hope and fear scores.\n\n    Formula: hope - fear\n\n    Args:\n        data (pd.Series): A single row of data containing dimension scores.\n        **kwargs: Additional keyword arguments (not used).\n\n    Returns:\n        float: The calculated emotional balance, or None if 'hope' or 'fear'\n               scores are missing, non-numeric, or contain NaN values.\n    \"\"\"\n    import pandas as pd\n    import numpy as np\n\n    try:\n        # Access the required scores from the data row (Series).\n        # A KeyError will be raised if the 'hope' or 'fear' columns are missing.\n        hope_score = data['hope']\n        fear_score = data['fear']\n\n        # The subtraction operation will result in NaN if either input is NaN.\n        # A TypeError will be raised if the dtypes are incompatible (e.g., string).\n        result = hope_score - fear_score\n\n        # A final check for NaN is the most robust way to handle missing inputs.\n        if pd.isna(result):\n            return None\n        else:\n            return float(result)\n\n    except (KeyError, TypeError):\n        # If required columns are missing or data is of the wrong type,\n        # the calculation cannot be performed.\n        return None\n\ndef calculate_success_climate(data, **kwargs):\n    \"\"\"\n    Calculate success_climate: Difference between compersion and envy scores.\n\n    Formula: compersion - envy\n\n    Args:\n        data (pd.Series): A single row of data represented as a pandas Series.\n                          This Series must contain 'compersion' and 'envy' scores.\n        **kwargs: Additional keyword arguments (not used).\n\n    Returns:\n        float: The calculated score, or None if the required data is missing or invalid.\n    \"\"\"\n    import pandas as pd\n\n    try:\n        # The calculation requires 'compersion' and 'envy' scores.\n        compersion_score = data['compersion']\n        envy_score = data['envy']\n\n        # Check if either score is a missing value (e.g., NaN).\n        if pd.isna(compersion_score) or pd.isna(envy_score):\n            return None\n\n        # Perform the calculation and ensure the result is a float.\n        result = float(compersion_score) - float(envy_score)\n\n        return result\n\n    except (KeyError, TypeError, ValueError):\n        # KeyError: If 'compersion' or 'envy' columns are not in the data.\n        # TypeError/ValueError: If scores are not numeric and cannot be cast to float.\n        return None\n\ndef calculate_relational_climate(data, **kwargs):\n    \"\"\"\n    Calculate relational_climate: Difference between amity and enmity scores\n\n    Formula: amity - enmity\n\n    Args:\n        data (pd.Series): A row of data containing dimension scores.\n        **kwargs: Additional keyword arguments (unused).\n\n    Returns:\n        float: The calculated relational climate score, or None if the necessary\n               'amity' or 'enmity' columns are missing or contain non-numeric data.\n    \"\"\"\n    import pandas as pd\n    import numpy as np\n\n    try:\n        # The calculation requires 'amity' and 'enmity' scores.\n        # This function assumes these columns exist in the input 'data' object.\n        amity_score = pd.to_numeric(data['amity'], errors='coerce')\n        enmity_score = pd.to_numeric(data['enmity'], errors='coerce')\n\n        # If either score could not be converted to a number (i.e., is NaN),\n        # there is insufficient data to perform the calculation.\n        if pd.isna(amity_score) or pd.isna(enmity_score):\n            return None\n\n        # Calculate the difference as per the definition.\n        relational_climate = amity_score - enmity_score\n\n        return float(relational_climate)\n\n    except (KeyError, TypeError, AttributeError):\n        # KeyError: Handles cases where 'amity' or 'enmity' columns do not exist.\n        # TypeError/AttributeError: Handles cases where 'data' is not a dict-like object.\n        return None\n\ndef calculate_goal_orientation(data, **kwargs):\n    \"\"\"\n    Calculate goal_orientation: Difference between cohesive goals and fragmentative goals\n\n    Formula: cohesive_goals - fragmentative_goals\n    \n    Args:\n        data (pd.Series): A single row of data from the DataFrame.\n        **kwargs: Additional parameters (unused).\n        \n    Returns:\n        float: The calculated goal orientation score, or None if input data is missing or invalid.\n    \"\"\"\n    import pandas as pd\n    import numpy as np\n    \n    try:\n        # The calculation is defined by the framework as the difference between\n        # 'cohesive_goals' and 'fragmentative_goals' scores.\n        cohesive_score = data['cohesive_goals']\n        fragmentative_score = data['fragmentative_goals']\n        \n        # Handle cases where either of the required scores is missing.\n        if pd.isna(cohesive_score) or pd.isna(fragmentative_score):\n            return None\n            \n        # Ensure values are numeric and perform the calculation.\n        result = float(cohesive_score) - float(fragmentative_score)\n        \n        # Return None if the result is not a finite number (e.g., inf, -inf, nan)\n        if not np.isfinite(result):\n            return None\n            \n        return result\n        \n    except (KeyError, TypeError, ValueError):\n        # KeyError: Catches cases where the required columns are not in the data.\n        # This is expected if the provided data structure doesn't match the calculation's needs.\n        # TypeError/ValueError: Catches cases where data is not in a numeric format.\n        return None\n\ndef calculate_overall_cohesion_index(data, **kwargs):\n    \"\"\"\n    Calculate overall_cohesion_index: Comprehensive measure combining all dimensions.\n\n    This function is designed to compute a comprehensive score reflecting overall\n    social cohesion. The conceptual formula involves aggregating multiple\n    individual dimension scores from the Cohesive Flourishing Framework.\n\n    Formula: Conceptually, an aggregation (e.g., weighted average) of various\n    cohesion dimension scores. Since the specific dimension score columns are not\n    present in the provided data structure, this calculation cannot be performed.\n\n    Args:\n        data (pd.Series): A single row of data represented as a pandas Series.\n                          It is expected to contain various dimension scores for\n                          the calculation.\n        **kwargs: Additional keyword arguments (not used in this implementation).\n\n    Returns:\n        float: The calculated index. Returns None because the necessary dimension\n               score columns are not available in the input data structure,\n               preventing the calculation.\n    \"\"\"\n    import pandas as pd\n    import numpy as np\n\n    try:\n        # The calculation for 'overall_cohesion_index' is described as a\n        # \"Comprehensive measure combining all dimensions\". This requires specific\n        # dimension score columns (e.g., scores for Hope, Fear, Unity, etc.)\n        # which are part of the Cohesive Flourishing Framework.\n\n        # The provided data structure only contains the following columns:\n        # 'analysis_result', 'raw_analysis_response', 'scores_hash',\n        # 'evidence_hash', 'document_id', 'filename'.\n\n        # As per the explicit instructions, column names cannot be assumed or invented.\n        # Since the necessary input dimensions for the calculation are not present\n        # in the 'data' object, it is impossible to compute the index.\n\n        # The function gracefully handles this by returning None, indicating that\n        # the calculation could not be completed due to missing prerequisite data.\n        return None\n\n    except Exception:\n        # This broad exception handler ensures robustness. If any unexpected error\n        # occurs during processing (e.g., due to malformed data), the function\n        # will return None instead of crashing.\n        return None\n\ndef calculate_all_derived_metrics(data: pd.DataFrame) -> Dict[str, Optional[float]]:\n    \"\"\"\n    Calculate all derived metrics for the given dataset.\n    \n    Args:\n        data: pandas DataFrame with dimension scores\n        \n    Returns:\n        Dictionary mapping metric names to calculated values\n    \"\"\"\n    results = {}\n    \n    # Get all calculation functions from this module\n    import inspect\n    current_module = inspect.getmodule(inspect.currentframe())\n    \n    for name, obj in inspect.getmembers(current_module):\n        if (inspect.isfunction(obj) and \n            name.startswith('calculate_') and \n            name not in ['calculate_all_derived_metrics', 'calculate_derived_metrics']):\n            try:\n                results[name.replace('calculate_', '')] = obj(data)\n            except Exception as e:\n                results[name.replace('calculate_', '')] = None\n                \n    return results\n\n\ndef calculate_derived_metrics(data: pd.DataFrame) -> pd.DataFrame:\n    \"\"\"\n    Template-compatible wrapper function for derived metrics calculation.\n    \n    This function is called by the universal notebook template and returns\n    the original data with additional derived metric columns.\n    \n    Args:\n        data: pandas DataFrame with dimension scores\n        \n    Returns:\n        DataFrame with original data plus derived metric columns\n    \"\"\"\n    # Calculate all derived metrics\n    derived_metrics = calculate_all_derived_metrics(data)\n    \n    # Create a copy of the original data\n    result = data.copy()\n    \n    # Add derived metrics as new columns\n    for metric_name, metric_value in derived_metrics.items():\n        if metric_value is not None:\n            # For scalar metrics, broadcast to all rows\n            result[metric_name] = metric_value\n        else:\n            # For failed calculations, use NaN\n            result[metric_name] = np.nan\n    \n    return result\n",
      "cached_with_code": true
    },
    "derived_metrics_data": {
      "status": "success",
      "original_count": 4,
      "derived_count": 4,
      "derived_metrics": [
        {
          "analysis_id": "analysis_088361cc0533",
          "result_hash": "f7e5bce529829b0033f2bd1e1379ad30278db6d75c2953ea7019e12db2ebf28b",
          "duration_seconds": 48.509691,
          "result_content": {
            "analysis_id": "analysis_088361cc0533",
            "agent_name": "EnhancedAnalysisAgent",
            "agent_version": "enhanced_v2.1_raw_output",
            "experiment_name": "simple_test",
            "model_used": "vertex_ai/gemini-2.5-pro",
            "raw_analysis_response": "<<<DISCERNUS_ANALYSIS_JSON_v6>>>\n{\n  \"analysis_metadata\": {\n    \"framework_name\": \"cohesive_flourishing_framework\",\n    \"framework_version\": \"10.2\",\n    \"analyst_confidence\": 0.98,\n    \"analysis_notes\": \"The document is a classic political concession speech, characterized by a strong emphasis on national unity and graciousness towards the victor. The analysis reflects this, with high scores on cohesive dimensions (Amity, Compersion, Cohesive Goals, Individual Dignity) and correspondingly low scores on divisive dimensions. The rhetoric is clear and serves as a strong example of discourse aimed at bridging divides post-election.\"\n  },\n  \"document_analyses\": [\n    {\n      \"document_id\": \"{artifact_id}\",\n      \"document_name\": \"john_mccain_2008_concession.txt\",\n      \"dimensional_scores\": {\n        \"tribal_dominance\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.1,\n          \"confidence\": 1.0\n        },\n        \"individual_dignity\": {\n          \"raw_score\": 0.8,\n          \"salience\": 0.9,\n          \"confidence\": 1.0\n        },\n        \"fear\": {\n          \"raw_score\": 0.2,\n          \"salience\": 0.3,\n          \"confidence\": 0.9\n        },\n        \"hope\": {\n          \"raw_score\": 0.7,\n          \"salience\": 0.7,\n          \"confidence\": 1.0\n        },\n        \"envy\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.0,\n          \"confidence\": 1.0\n        },\n        \"compersion\": {\n          \"raw_score\": 0.9,\n          \"salience\": 0.9,\n          \"confidence\": 1.0\n        },\n        \"enmity\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.1,\n          \"confidence\": 1.0\n        },\n        \"amity\": {\n          \"raw_score\": 0.9,\n          \"salience\": 0.9,\n          \"confidence\": 1.0\n        },\n        \"fragmentative_goals\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.0,\n          \"confidence\": 1.0\n        },\n        \"cohesive_goals\": {\n          \"raw_score\": 0.9,\n          \"salience\": 0.9,\n          \"confidence\": 1.0\n        }\n      },\n      \"evidence\": [\n        {\n          \"dimension\": \"tribal_dominance\",\n          \"quote_text\": \"\",\n          \"confidence\": 1.0,\n          \"context_type\": \"absence_of_dimension\"\n        },\n        {\n          \"dimension\": \"individual_dignity\",\n          \"quote_text\": \"This is an historic election, and I recognize the special significance it has for African-Americans and for the special pride that must be theirs tonight.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"explicit_statement\"\n        },\n        {\n          \"dimension\": \"fear\",\n          \"quote_text\": \"These are difficult times for our country, and I pledge to him tonight to do all in my power to help him lead us through the many challenges we face.\",\n          \"confidence\": 0.9,\n          \"context_type\": \"contextual_framing\"\n        },\n        {\n          \"dimension\": \"hope\",\n          \"quote_text\": \"...to not despair of our present difficulties, but to believe always in the promise and greatness of America.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"explicit_call_to_action\"\n        },\n        {\n          \"dimension\": \"envy\",\n          \"quote_text\": \"\",\n          \"confidence\": 1.0,\n          \"context_type\": \"absence_of_dimension\"\n        },\n        {\n          \"dimension\": \"compersion\",\n          \"quote_text\": \"But that he managed to do so by inspiring the hopes of so many millions of Americans who had once wrongly believed that they had little at stake or little influence in the election of an American president is something I deeply admire and commend him for achieving.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"explicit_praise_of_opponent\"\n        },\n        {\n          \"dimension\": \"enmity\",\n          \"quote_text\": \"\",\n          \"confidence\": 1.0,\n          \"context_type\": \"absence_of_dimension\"\n        },\n        {\n          \"dimension\": \"amity\",\n          \"quote_text\": \"Whatever our differences, we are fellow Americans, and please believe me when I say no association has ever meant more to me than that.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"explicit_statement\"\n        },\n        {\n          \"dimension\": \"fragmentative_goals\",\n          \"quote_text\": \"\",\n          \"confidence\": 1.0,\n          \"context_type\": \"absence_of_dimension\"\n        },\n        {\n          \"dimension\": \"cohesive_goals\",\n          \"quote_text\": \"I urge all Americans who supported me to join me in not just congratulating him, but offering our next president our good will and earnest effort to find ways to come together, to find the necessary compromises to bridge our differences...\",\n          \"confidence\": 1.0,\n          \"context_type\": \"explicit_call_to_action\"\n        }\n      ]\n    }\n  ]\n}\n<<<END_DISCERNUS_ANALYSIS_JSON_v6>>>",
            "evidence_hash": "0b9340b5e338fe925df3041374e611d4d88ff0e6626135f457c110b52d9c3cdd",
            "execution_metadata": {
              "start_time": "2025-08-29T15:46:43.935344+00:00",
              "end_time": "2025-08-29T15:47:32.445056+00:00",
              "duration_seconds": 48.509691
            },
            "input_artifacts": {
              "framework_hash": "77e927d6773a3131ec6b0fa5ef666cbcd957859357ebe6ae80efaeb7be557b12",
              "document_hashes": [
                "ff9b26f20ad6dfa10cbf8ce4b7353fddab5e7cce5879e6b4603b8af60d0a9e35"
              ],
              "num_documents": 1
            },
            "provenance": {
              "security_boundary": {
                "experiment_name": "simple_test_cff",
                "experiment_root": "/Volumes/code/discernus/projects/simple_test_cff",
                "boundary_type": "filesystem",
                "security_level": "experiment_scoped"
              },
              "audit_session_id": "20250829T154643Z_5c1e6644"
            }
          }
        },
        {
          "analysis_id": "analysis_5039147acdd4",
          "result_hash": "9feeb61943a14fd7e3332f9f28f2584d4cc0f020704499cb3a3d823de83da2bf",
          "duration_seconds": 46.672486,
          "result_content": {
            "analysis_id": "analysis_5039147acdd4",
            "agent_name": "EnhancedAnalysisAgent",
            "agent_version": "enhanced_v2.1_raw_output",
            "experiment_name": "simple_test",
            "model_used": "vertex_ai/gemini-2.5-pro",
            "raw_analysis_response": "<<<DISCERNUS_ANALYSIS_JSON_v6>>>\n{\n  \"analysis_metadata\": {\n    \"framework_name\": \"cohesive_flourishing_framework\",\n    \"framework_version\": \"10.2\",\n    \"analyst_confidence\": 0.95,\n    \"analysis_notes\": \"The document is a political speech characterized by strong, unambiguous rhetoric. The dominant dimensions of Fear, Enmity, and Tribal Dominance are exceptionally clear and well-evidenced, making confidence in their scoring very high. Conversely, the cohesive dimensions (Amity, Compersion, Cohesive Goals) are almost entirely absent, which is also scored with high confidence. The analysis focuses on the explicit rhetorical strategies and emotionally charged narratives used throughout the speech.\"\n  },\n  \"document_analyses\": [\n    {\n      \"document_id\": \"{artifact_id}\",\n      \"document_name\": \"steve_king_2017_house_floor.txt\",\n      \"dimensional_scores\": {\n        \"tribal_dominance\": {\n          \"raw_score\": 0.85,\n          \"salience\": 0.9,\n          \"confidence\": 0.95\n        },\n        \"individual_dignity\": {\n          \"raw_score\": 0.1,\n          \"salience\": 0.1,\n          \"confidence\": 0.9\n        },\n        \"fear\": {\n          \"raw_score\": 0.9,\n          \"salience\": 0.9,\n          \"confidence\": 1.0\n        },\n        \"hope\": {\n          \"raw_score\": 0.2,\n          \"salience\": 0.2,\n          \"confidence\": 0.9\n        },\n        \"envy\": {\n          \"raw_score\": 0.6,\n          \"salience\": 0.5,\n          \"confidence\": 0.85\n        },\n        \"compersion\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.0,\n          \"confidence\": 1.0\n        },\n        \"enmity\": {\n          \"raw_score\": 0.9,\n          \"salience\": 0.95,\n          \"confidence\": 1.0\n        },\n        \"amity\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.0,\n          \"confidence\": 1.0\n        },\n        \"fragmentative_goals\": {\n          \"raw_score\": 0.8,\n          \"salience\": 0.8,\n          \"confidence\": 0.95\n        },\n        \"cohesive_goals\": {\n          \"raw_score\": 0.1,\n          \"salience\": 0.2,\n          \"confidence\": 0.8\n        }\n      },\n      \"evidence\": [\n        {\n          \"dimension\": \"tribal_dominance\",\n          \"quote_text\": \"to push Obamacare down the throats of the American people.\",\n          \"confidence\": 0.95,\n          \"context_type\": \"in-group/out-group framing\"\n        },\n        {\n          \"dimension\": \"individual_dignity\",\n          \"quote_text\": \"That being one of God's children is good enough to be protected by the law, but everybody treated equally.\",\n          \"confidence\": 0.7,\n          \"context_type\": \"isolated appeal to universal principle\"\n        },\n        {\n          \"dimension\": \"fear\",\n          \"quote_text\": \"Sarah Root would be alive today if the President had done his job, if law enforcement had been allowed to do their job, if ICE had responded when local law enforcement called them.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"existential threat perception\"\n        },\n        {\n          \"dimension\": \"hope\",\n          \"quote_text\": \"This is the time we must defend our Constitution and we must nominate and elect a president of the United States who will make those appointments to the Supreme Court who believe the Constitution means what it says.\",\n          \"confidence\": 0.9,\n          \"context_type\": \"conditional vision of restoration\"\n        },\n        {\n          \"dimension\": \"envy\",\n          \"quote_text\": \"The Chief Justice of the Supreme Court decided that he could write words into Obamacare that didn\u2019t exist... They made it up.\",\n          \"confidence\": 0.9,\n          \"context_type\": \"grievance over illegitimate power\"\n        },\n        {\n          \"dimension\": \"compersion\",\n          \"quote_text\": \"\",\n          \"confidence\": 1.0,\n          \"context_type\": \"absent dimension\"\n        },\n        {\n          \"dimension\": \"enmity\",\n          \"quote_text\": \"This is the face of one of these perpetrators, Mauricio Hernandez. What did he do? Mauricio Hernandez, a sexual predator who impregnated a 13-year-old daughter of his living girlfriend.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"adversarial characterization\"\n        },\n        {\n          \"dimension\": \"amity\",\n          \"quote_text\": \"\",\n          \"confidence\": 1.0,\n          \"context_type\": \"absent dimension\"\n        },\n        {\n          \"dimension\": \"fragmentative_goals\",\n          \"quote_text\": \"No hearing, no, no confirmation in the Senate, no vote in the in the Judiciary Committee, and no vote on the floor of the Senate for this lame duck President's appointments because we have a Constitution that's got to be restored.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"explicit zero-sum objective\"\n        },\n        {\n          \"dimension\": \"cohesive_goals\",\n          \"quote_text\": \"Secure our borders. Restore their respect for the rule of law. Save these lives.\",\n          \"confidence\": 0.8,\n          \"context_type\": \"goal framed as restoration and enforcement\"\n        }\n      ]\n    }\n  ]\n}\n<<<END_DISCERNUS_ANALYSIS_JSON_v6>>>",
            "evidence_hash": "ab865aa2399ab2a230aecba1c9f8016094bbbba504cb016b117f5b8ac74d6baf",
            "execution_metadata": {
              "start_time": "2025-08-29T15:47:32.448893+00:00",
              "end_time": "2025-08-29T15:48:19.121389+00:00",
              "duration_seconds": 46.672486
            },
            "input_artifacts": {
              "framework_hash": "77e927d6773a3131ec6b0fa5ef666cbcd957859357ebe6ae80efaeb7be557b12",
              "document_hashes": [
                "738780d93cc3c43b7b2e292a7fd0aa9f7e438f7ad2555be4ce6bfc20d9efda82"
              ],
              "num_documents": 1
            },
            "provenance": {
              "security_boundary": {
                "experiment_name": "simple_test_cff",
                "experiment_root": "/Volumes/code/discernus/projects/simple_test_cff",
                "boundary_type": "filesystem",
                "security_level": "experiment_scoped"
              },
              "audit_session_id": "20250829T154643Z_5c1e6644"
            }
          }
        },
        {
          "analysis_id": "analysis_e183eef92a4d",
          "result_hash": "a8d54c783b5cb705aa13c22a8f839bdb358bb14ff727f1d2639d181e1f92a065",
          "duration_seconds": 46.899221,
          "result_content": {
            "analysis_id": "analysis_e183eef92a4d",
            "agent_name": "EnhancedAnalysisAgent",
            "agent_version": "enhanced_v2.1_raw_output",
            "experiment_name": "simple_test",
            "model_used": "vertex_ai/gemini-2.5-pro",
            "raw_analysis_response": "<<<DISCERNUS_ANALYSIS_JSON_v6>>>\n{\n  \"analysis_metadata\": {\n    \"framework_name\": \"cohesive_flourishing_framework\",\n    \"framework_version\": \"10.2\",\n    \"analyst_confidence\": 0.95,\n    \"analysis_notes\": \"Analysis based on the 'default' variant. The document is a clear example of populist economic rhetoric, characterized by a strong in-group ('the people') vs. out-group ('oligarchs') framing. This leads to high scores in dimensions like Enmity, Envy, and Tribal Dominance. Cohesive elements like Hope and Amity are present but framed as tools for in-group mobilization against the out-group.\"\n  },\n  \"document_analyses\": [\n    {\n      \"document_id\": \"{artifact_id}\",\n      \"document_name\": \"bernie_sanders_2025_fighting_oligarchy.txt\",\n      \"dimensional_scores\": {\n        \"tribal_dominance\": {\n          \"raw_score\": 0.7,\n          \"salience\": 0.9,\n          \"confidence\": 0.95\n        },\n        \"individual_dignity\": {\n          \"raw_score\": 0.2,\n          \"salience\": 0.1,\n          \"confidence\": 0.8\n        },\n        \"fear\": {\n          \"raw_score\": 0.8,\n          \"salience\": 0.8,\n          \"confidence\": 0.95\n        },\n        \"hope\": {\n          \"raw_score\": 0.6,\n          \"salience\": 0.4,\n          \"confidence\": 0.9\n        },\n        \"envy\": {\n          \"raw_score\": 0.9,\n          \"salience\": 0.9,\n          \"confidence\": 0.95\n        },\n        \"compersion\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.0,\n          \"confidence\": 1.0\n        },\n        \"enmity\": {\n          \"raw_score\": 0.9,\n          \"salience\": 0.9,\n          \"confidence\": 0.95\n        },\n        \"amity\": {\n          \"raw_score\": 0.5,\n          \"salience\": 0.5,\n          \"confidence\": 0.9\n        },\n        \"fragmentative_goals\": {\n          \"raw_score\": 0.8,\n          \"salience\": 0.8,\n          \"confidence\": 0.95\n        },\n        \"cohesive_goals\": {\n          \"raw_score\": 0.5,\n          \"salience\": 0.4,\n          \"confidence\": 0.9\n        }\n      },\n      \"evidence\": [\n        {\n          \"dimension\": \"tribal_dominance\",\n          \"quote_text\": \"Abraham Lincoln talked about a government of the people, by the people, for the people. Well, Trump has a government of the billionaires, by the billionaires, and for the billionaires.\",\n          \"confidence\": 0.95,\n          \"context_type\": \"rhetorical_contrast\"\n        },\n        {\n          \"dimension\": \"individual_dignity\",\n          \"quote_text\": \"...we can create the kind of nation that we deserve.\",\n          \"confidence\": 0.7,\n          \"context_type\": \"concluding_statement\"\n        },\n        {\n          \"dimension\": \"fear\",\n          \"quote_text\": \"They are prepared to destroy Social Security, Medicaid, Medicare, the Veterans Administration in order to make themselves even richer.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"accusation_of_threat\"\n        },\n        {\n          \"dimension\": \"hope\",\n          \"quote_text\": \"So if we stand together, are strong, are disciplined, are smart, I have every reason to believe deeply in my heart that not only will we defeat Trumpism, but we can create the kind of nation that we deserve.\",\n          \"confidence\": 0.95,\n          \"context_type\": \"call_to_action\"\n        },\n        {\n          \"dimension\": \"envy\",\n          \"quote_text\": \"Meanwhile, there has been a $75 trillion transfer of wealth from the bottom 90% to the top 1%. That is what a rigged economy is about, and that is what we are going to change.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"zero_sum_framing\"\n        },\n        {\n          \"dimension\": \"compersion\",\n          \"quote_text\": \"\",\n          \"confidence\": 1.0,\n          \"context_type\": \"absence_of_evidence\"\n        },\n        {\n          \"dimension\": \"enmity\",\n          \"quote_text\": \"But I will tell you this, in the midst of all of these addictions, the worst and most dangerous addiction we have is the greed of the oligarchs.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"character_assassination\"\n        },\n        {\n          \"dimension\": \"amity\",\n          \"quote_text\": \"So if we stand together, are strong, are disciplined, are smart, I have every reason to believe deeply in my heart that not only will we defeat Trumpism, but we can create the kind of nation that we deserve.\",\n          \"confidence\": 0.9,\n          \"context_type\": \"in_group_solidarity_appeal\"\n        },\n        {\n          \"dimension\": \"fragmentative_goals\",\n          \"quote_text\": \"That is what a rigged economy is about, and that is what we are going to change.\",\n          \"confidence\": 0.95,\n          \"context_type\": \"statement_of_objective\"\n        },\n        {\n          \"dimension\": \"cohesive_goals\",\n          \"quote_text\": \"...not only will we defeat Trumpism, but we can create the kind of nation that we deserve.\",\n          \"confidence\": 0.9,\n          \"context_type\": \"statement_of_vision\"\n        }\n      ]\n    }\n  ]\n}\n<<<END_DISCERNUS_ANALYSIS_JSON_v6>>>",
            "evidence_hash": "8d7b38cdad5ed82af092f4fe397ff22acde5c189213364785ad87e9e0f82f6f1",
            "execution_metadata": {
              "start_time": "2025-08-29T15:48:19.122251+00:00",
              "end_time": "2025-08-29T15:49:06.021481+00:00",
              "duration_seconds": 46.899221
            },
            "input_artifacts": {
              "framework_hash": "77e927d6773a3131ec6b0fa5ef666cbcd957859357ebe6ae80efaeb7be557b12",
              "document_hashes": [
                "261b893a384411f76907e78e7997860cd9be5d959334a6b9ae1386ea1ba6cbdd"
              ],
              "num_documents": 1
            },
            "provenance": {
              "security_boundary": {
                "experiment_name": "simple_test_cff",
                "experiment_root": "/Volumes/code/discernus/projects/simple_test_cff",
                "boundary_type": "filesystem",
                "security_level": "experiment_scoped"
              },
              "audit_session_id": "20250829T154643Z_5c1e6644"
            }
          }
        },
        {
          "analysis_id": "analysis_648630eae46a",
          "result_hash": "64ee764a21af6c63a272bd5bd617e65e3db509fbda6395a1312bf036a8cd8ddb",
          "duration_seconds": 57.766415,
          "result_content": {
            "analysis_id": "analysis_648630eae46a",
            "agent_name": "EnhancedAnalysisAgent",
            "agent_version": "enhanced_v2.1_raw_output",
            "experiment_name": "simple_test",
            "model_used": "vertex_ai/gemini-2.5-pro",
            "raw_analysis_response": "<<<DISCERNUS_ANALYSIS_JSON_v6>>>\n{\n  \"analysis_metadata\": {\n    \"framework_name\": \"cohesive_flourishing_framework\",\n    \"framework_version\": \"10.2\",\n    \"analyst_confidence\": 0.9,\n    \"analysis_notes\": \"The analysis focuses on the speaker's rhetorical construction of a class-based conflict. The speech strongly delineates an 'in-group' (the working class) and an 'out-group' (the oligarchy), attributing malicious intent and illegitimate success to the latter. The primary rhetorical strategy is to foster in-group solidarity (Amity, Cohesive Goals) to fight an external enemy (Enmity, Fragmentative Goals).\"\n  },\n  \"document_analyses\": [\n    {\n      \"document_id\": \"{artifact_id}\",\n      \"document_name\": \"alexandria_ocasio_cortez_2025_fighting_oligarchy.txt\",\n      \"dimensional_scores\": {\n        \"tribal_dominance\": {\n          \"raw_score\": 0.7,\n          \"salience\": 0.8,\n          \"confidence\": 0.9\n        },\n        \"individual_dignity\": {\n          \"raw_score\": 0.8,\n          \"salience\": 0.7,\n          \"confidence\": 0.95\n        },\n        \"fear\": {\n          \"raw_score\": 0.8,\n          \"salience\": 0.8,\n          \"confidence\": 0.9\n        },\n        \"hope\": {\n          \"raw_score\": 0.5,\n          \"salience\": 0.5,\n          \"confidence\": 0.85\n        },\n        \"envy\": {\n          \"raw_score\": 0.9,\n          \"salience\": 0.9,\n          \"confidence\": 1.0\n        },\n        \"compersion\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.0,\n          \"confidence\": 1.0\n        },\n        \"enmity\": {\n          \"raw_score\": 0.9,\n          \"salience\": 0.9,\n          \"confidence\": 1.0\n        },\n        \"amity\": {\n          \"raw_score\": 0.8,\n          \"salience\": 0.8,\n          \"confidence\": 0.95\n        },\n        \"fragmentative_goals\": {\n          \"raw_score\": 0.8,\n          \"salience\": 0.8,\n          \"confidence\": 0.9\n        },\n        \"cohesive_goals\": {\n          \"raw_score\": 0.8,\n          \"salience\": 0.8,\n          \"confidence\": 0.95\n        }\n      },\n      \"evidence\": [\n        {\n          \"dimension\": \"tribal_dominance\",\n          \"quote_text\": \"The same billionaires are taking a wrecking ball to our country and they derive their power from dividing working people apart.\",\n          \"confidence\": 0.9,\n          \"context_type\": \"characterization_of_outgroup\"\n        },\n        {\n          \"dimension\": \"individual_dignity\",\n          \"quote_text\": \"If you are willing to fight for someone you don\u2019t know, you are welcome here.\",\n          \"confidence\": 0.95,\n          \"context_type\": \"statement_of_inclusive_values\"\n        },\n        {\n          \"dimension\": \"fear\",\n          \"quote_text\": \"And our political system is ill-prepared for this abuse of power. In fact, much of our political system enables it, starting with the role of money in politics.\",\n          \"confidence\": 0.9,\n          \"context_type\": \"description_of_systemic_threat\"\n        },\n        {\n          \"dimension\": \"hope\",\n          \"quote_text\": \"Because in this house, we stand together, we know that, that it's our only choice because we know that without exception, if we stand together, it is the only way that we can win.\",\n          \"confidence\": 0.9,\n          \"context_type\": \"statement_of_conditional_optimism\"\n        },\n        {\n          \"dimension\": \"envy\",\n          \"quote_text\": \"Now it's this idea that if we just work hard, we too can have nation-state level money, except these kinds of spoils aren\u2019t earned really. They aren't working for these billions. They're stealing them. They're stealing them. They're stealing them from you and you and me.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"delegitimization_of_outgroup_success\"\n        },\n        {\n          \"dimension\": \"compersion\",\n          \"quote_text\": \"\",\n          \"confidence\": 1.0,\n          \"context_type\": \"absence_of_evidence\"\n        },\n        {\n          \"dimension\": \"enmity\",\n          \"quote_text\": \"We need to come together and spend every day between now and election day working to educate our neighbors, and give Evans and Boebert the boot, and replace them with a brawling Democrat who will stand for Colorado.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"adversarial_call_to_action\"\n        },\n        {\n          \"dimension\": \"amity\",\n          \"quote_text\": \"Because in this house, we stand together, we know that, that it's our only choice because we know that without exception, if we stand together, it is the only way that we can win.\",\n          \"confidence\": 0.95,\n          \"context_type\": \"call_for_in-group_solidarity\"\n        },\n        {\n          \"dimension\": \"fragmentative_goals\",\n          \"quote_text\": \"Donald Trump does see the immense pressure that working people are under. But his answer is an America that operates on the principle of every man for himself, divide and conquer.\",\n          \"confidence\": 0.9,\n          \"context_type\": \"attribution_of_divisive_goals_to_opponent\"\n        },\n        {\n          \"dimension\": \"cohesive_goals\",\n          \"quote_text\": \"So I hope that you see this movement is not about partisan labels or purity tests, but about class solidarity.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"explicit_statement_of_unifying_goal\"\n        }\n      ]\n    }\n  ]\n}\n<<<END_DISCERNUS_ANALYSIS_JSON_v6>>>",
            "evidence_hash": "791961db7154e75bcc838bb36e036666bd8924f552207bcee7f4f336187c9c2b",
            "execution_metadata": {
              "start_time": "2025-08-29T15:49:06.022342+00:00",
              "end_time": "2025-08-29T15:50:03.788777+00:00",
              "duration_seconds": 57.766415
            },
            "input_artifacts": {
              "framework_hash": "77e927d6773a3131ec6b0fa5ef666cbcd957859357ebe6ae80efaeb7be557b12",
              "document_hashes": [
                "1121e4ae679ce6e6c08c6d2d9aa4ce0c6e5040e8b13405fcfd9ea725b8ad5ff6"
              ],
              "num_documents": 1
            },
            "provenance": {
              "security_boundary": {
                "experiment_name": "simple_test_cff",
                "experiment_root": "/Volumes/code/discernus/projects/simple_test_cff",
                "boundary_type": "filesystem",
                "security_level": "experiment_scoped"
              },
              "audit_session_id": "20250829T154643Z_5c1e6644"
            }
          }
        }
      ],
      "columns_added": []
    },
    "status": "success_with_data",
    "validation_passed": true
  }
}