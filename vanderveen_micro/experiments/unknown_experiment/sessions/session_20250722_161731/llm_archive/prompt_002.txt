=== SYSTEM PROMPT ===
You are a framework analysis specialist. CRITICAL: Include all provenance stamps in your response.

=== USER PROMPT ===
Here are detailed instructions for analysis agents to implement the Van der Veen 2019 replication experiment using the PDAF v1.3 Tension Enhanced framework:

1. Data Extraction Agent Instructions:

- Extract full text content from each of the 7 specified corpus documents, preserving speech/document metadata.
- Clean and normalize the extracted text, removing any formatting artifacts or non-relevant content.
- Prepare a structured dataset with document ID, speaker/source, date, and full text content for each asset.
- Ensure the dataset is properly formatted for ingestion by the Analysis Agent.

2. Analysis Agent Instructions:

- For each document in the prepared dataset:
  1. Conduct a full PDAF v1.3 Tension Enhanced analysis as specified in the framework.
  2. Score all 9 populist anchors for both intensity (0.0-2.0) and salience (0.0-1.0).
  3. Provide at least 2 direct quotations supporting each populist anchor assessment.
  4. Calculate the 3 populist strategic tensions:
     - Democratic-Authoritarian Tension
     - Internal-External Focus Tension
     - Crisis-Elite Attribution Tension
  5. Compute the Populist Strategic Contradiction Index (PSCI).
  6. Classify the populist strategy pattern based on the PSCI score.
  7. Assess the Populist Salience Concentration.
  8. Determine the Economic Direction Indicator.
  9. Identify the primary Populist Strategic Focus based on salience rankings.

- Pay special attention to:
  - Differences between candidate speeches and party platforms
  - Variations in populist patterns between Republican and Democratic sources
  - Strategic tensions unique to each speaker/document

- Ensure all output adheres to the specified JSON schema in the framework's output contract.

3. Calculation Agent Instructions:

- Aggregate results from the Analysis Agent outputs:
  1. Calculate average Populist Intensity Index scores for:
     - All Trump speeches
     - All Sanders speeches
     - Cruz speech
     - Republican Party Platform
     - Democratic Party Platform
  2. Compute mean PSCI scores for the same groupings.
  3. Identify the most common Populist Strategic Focus for each group.
  4. Calculate the and salience for each populist anchor across all documents.
  5. Determine the overall distribution of populist strategy classifications.

- Prepare summary statistics and data visualizations to highlight:. Synthesis Agent Instructions:

- Compare PDAF v1.3 results to Van der Veen 2019 findings:
  1. Assess alignment on basic populist/non-populist classifications.
  2. Identify areas where PDAF v1.3 provides additional insights.
  3. Evaluate how tension analysis extends the original study's conclusions.

- Address the research questions specified in the experiment:
  - Replicate Van der Veen's populist classifications
  - Describe emerging strategic tension patterns
  - Compare Republican vs Democratic populist coherence
  - Contrast candidate speeches with party platforms
  - platform populist patterns
  - Highlight insights uniquely enabled by tension analysis through tension analysis

- Evaluate experiment success based on specified metrics:
  - Basic replication of Van der Veen classifications
  - Methodological extension through tension analysis
  - Research contribution via strategic communication insights

- Synthesize key findings into a cohesive narrative, focusing on:
  - Replication success and validation of PDAF v1.3
  - Novel insights enabled by tension-enhanced analysis
  - Theoreticalist discourse theory and future research directions

- Prepare a summary suitable for academic publication, including:
  - Methodology comparison (Van der Veen vs PDAF v1.3)
  - Key findings and their significance
  - Limitations of the current study
  - Recommendations for further populist discourse analysis using PDAF v1.3

PROVENANCE VERIFICATION:
You are analyzing content from file: README.md
Content hash: 54ed45bd84ad
Content preview: "# Discernus: Computational Text Analysis Platform

**Philosophy**: "Thick LLM + Thin Software = Epis..."

CRITICAL: You must include this provenance stamp in your response: [PROVENANCE:54ed45bd84ad@README.md]

TEXT TO ANALYZE:
# Discernus: Computational Text Analysis Platform

**Philosophy**: "Thick LLM + Thin Software = Epistemic Trust"

## üìö Documentation

**Complete documentation is available at**: [`docs/README.md`](docs/README.md)

The docs directory contains comprehensive guides for:
- **New Users**: Getting started with the platform
- **Developers**: Architecture and technical implementation  
- **Researchers**: Framework integration and academic workflows
- **Framework Developers**: Extension development and community standards

## üöÄ Quick Start

```bash
# Install dependencies
pip install -r requirements.txt

# Execute analysis with THIN Experiment Lifecycle (includes validation gauntlet)
python3 discernus_cli.py execute ./my_project/experiment.md

# Or validate first, then execute
python3 discernus_cli.py validate ./my_project/experiment.md
python3 discernus_cli.py execute ./my_project/experiment.md
```

## üèóÔ∏è THIN Architecture Principles

### ‚úÖ **THIN Patterns (Do This)**
- **LLM Intelligence**: Analysis, reasoning, and content generation in prompts
- **Software Infrastructure**: Simple routing, storage, and execution
- **Natural Language Flow**: LLM-to-LLM communication without parsing
- **Centralized Prompts**: Prompts are engineered as part of the agent that consumes them, not hardcoded.

### ‚ùå **THICK Anti-Patterns (Don't Do This)**
- Complex JSON parsing from LLM responses
- Hardcoded prompts in orchestrator code
- Mathematical operations in software (use hybrid intelligence pattern)
- Domain-specific assumptions in core platform

## üéØ Three Foundational Commitments

1. **Structured Data, Not Code**: LLMs are prompted to return structured, verifiable data (e.g., JSON with scores) rather than executable code for analysis, which simplifies the pipeline and improves reliability.
2. **Cost Transparency**: Upfront estimation, budget controls, predictable pricing
3. **Complete Reproducibility**: Zero mystery, full audit trails, deterministic results

## üìã Commands

```bash
# Execute experiment with THIN Experiment Lifecycle (validation gauntlet + enhancement + execution)
python3 discernus_cli.py execute ./my_project/experiment.md

# Validate project structure and specifications only
python3 discernus_cli.py validate ./my_project/experiment.md

# Resume interrupted experiment with intelligent state analysis (Issue #132)
python3 discernus_cli.py resume ./my_project

# Resume with legacy direct continuation
python3 discernus_cli.py resume ./my_project --legacy

# List available analytical frameworks
python3 discernus_cli.py list-frameworks

# Show system information and THIN compliance
python3 discernus_cli.py info --check-thin
```

## üõ†Ô∏è Development Tools

```bash
# Check environment setup
make check

# Run test suite  
make test

# Test models directly (prompt engineering)
make harness-simple MODEL="vertex_ai/gemini-2.5-flash" PROMPT="Test prompt"

# List available models
make harness-list
```

*See [`discernus/tests/README.md`](discernus/tests/README.md) for comprehensive testing documentation and [`scripts/README.md`](scripts/README.md) for development scripts.*

## üîó Key Resources

- **[Complete Documentation](docs/README.md)** - Master index and user guides
- **[Agent Briefing](docs/AGENT_BRIEFING.md)** - Essential principles for contributors
- **[Strategic Vision](docs/DISCERNUS_STRATEGIC_VISION.md)** - Mission and use cases
- **[Quick Start Guide](docs/QUICK_START_GUIDE.md)** - Detailed getting started guide

---

*For complete documentation, examples, and advanced usage, see [`docs/README.md`](docs/README.md)*


Remember to include the provenance stamp [PROVENANCE:54ed45bd84ad@README.md] in your response to verify content integrity.