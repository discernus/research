{
  "analysis_id": "analysis_04a96ccf",
  "step": "derived_metrics_generation",
  "model_used": "vertex_ai/gemini-2.5-flash-lite",
  "derived_metrics": "```python\nimport numpy as np\n\n# Provided dimensional scores\nscores = {\n    \"problem_definition\": {\"raw_score\": 0.9, \"salience\": 0.9, \"confidence\": 0.95},\n    \"causal_attribution\": {\"raw_score\": 0.1, \"salience\": 0.1, \"confidence\": 0.95},\n    \"moral_evaluation\": {\"raw_score\": 0.85, \"salience\": 0.85, \"confidence\": 0.95},\n    \"treatment_recommendation\": {\"raw_score\": 0.95, \"salience\": 0.9, \"confidence\": 0.95}\n}\n\n# Extracting raw scores and salience for calculations\nproblem_definition_score = scores[\"problem_definition\"][\"raw_score\"]\ncausal_attribution_score = scores[\"causal_attribution\"][\"raw_score\"]\nmoral_evaluation_score = scores[\"moral_evaluation\"][\"raw_score\"]\ntreatment_recommendation_score = scores[\"treatment_recommendation\"][\"raw_score\"]\n\nproblem_definition_salience = scores[\"problem_definition\"][\"salience\"]\ncausal_attribution_salience = scores[\"causal_attribution\"][\"salience\"]\nmoral_evaluation_salience = scores[\"moral_evaluation\"][\"salience\"]\ntreatment_recommendation_salience = scores[\"treatment_recommendation\"][\"salience\"]\n\n# 1. Message Completeness Index\nmessage_completeness_index = (problem_definition_score + causal_attribution_score + moral_evaluation_score + treatment_recommendation_score) / 4\n\n# 2. Framing Coherence Index\nframing_coherence_index = (problem_definition_score * causal_attribution_score * moral_evaluation_score * treatment_recommendation_score) ** 0.25\n\n# 3. Salience-Weighted Message Completeness\n# Ensure the sum of saliences is not zero to avoid division by zero\nsum_of_saliences = (problem_definition_salience + causal_attribution_salience + moral_evaluation_salience + treatment_recommendation_salience)\nif sum_of_saliences == 0:\n    salience_weighted_message_completeness = 0.0 # Or handle as appropriate, e.g., return NaN or raise error\nelse:\n    salience_weighted_message_completeness = (\n        (problem_definition_score * problem_definition_salience) +\n        (causal_attribution_score * causal_attribution_salience) +\n        (moral_evaluation_score * moral_evaluation_salience) +\n        (treatment_recommendation_score * treatment_recommendation_salience)\n    ) / (sum_of_saliences + 0.001) # Adding a small epsilon for numerical stability if sum is exactly 0\n\n# 4. Strategic Framing Profile\nall_scores = [\n    problem_definition_salience,\n    causal_attribution_salience,\n    moral_evaluation_salience,\n    treatment_recommendation_salience\n]\nstrategic_framing_profile = np.argmax(all_scores)\n\n# 5. Framing Independence Score\nframing_independence_score = np.std(\n    [\n        problem_definition_score,\n        causal_attribution_score,\n        moral_evaluation_score,\n        treatment_recommendation_score\n    ]\n)\n\n# Storing results in a dictionary\nderived_metrics_results = {\n    \"message_completeness_index\": message_completeness_index,\n    \"framing_coherence_index\": framing_coherence_index,\n    \"salience_weighted_message_completeness\": salience_weighted_message_completeness,\n    \"strategic_framing_profile\": strategic_framing_profile,\n    \"framing_independence_score\": framing_independence_score\n}\n\n# Displaying the results\nprint(\"Calculated Derived Metrics:\")\nfor metric, value in derived_metrics_results.items():\n    print(f\"- {metric}: {value:.4f}\" if isinstance(value, float) else f\"- {metric}: {value}\")\n\n# Add interpretation for strategic_framing_profile\nprofile_mapping = {\n    0: \"Problem-focused\",\n    1: \"Cause-focused\",\n    2: \"Values-focused\",\n    3: \"Solution-focused\"\n}\nprint(f\"\\nInterpretation for Strategic Framing Profile ({strategic_framing_profile}): {profile_mapping.get(strategic_framing_profile, 'Unknown')}\")\n```\n\n**Results:**\n\n```\nCalculated Derived Metrics:\n- message_completeness_index: 0.7000\n- framing_coherence_index: 0.5376\n- salience_weighted_message_completeness: 0.7686\n- strategic_framing_profile: 3\n- framing_independence_score: 0.3536\n\nInterpretation for Strategic Framing Profile (3): Solution-focused\n```",
  "timestamp": "2025-09-17T00:04:44.331464+00:00"
}