{
  "analysis_id": "analysis_v2_analysis_20250922_013928_9",
  "step": "derived_metrics",
  "model_used": "vertex_ai/gemini-2.5-pro",
  "derived_metrics": "```python\nimport json\n\n# Provided scores\nscores = {\n  \"tribal_dominance\": 0.8,\n  \"individual_dignity\": 0.0,\n  \"fear\": 0.9,\n  \"hope\": 0.8,\n  \"envy\": 0.7,\n  \"mudita\": 0.0,\n  \"enmity\": 0.9,\n  \"amity\": 0.6,\n  \"fragmentative_goals\": 0.8,\n  \"cohesive_goals\": 0.8\n}\n\n# Assume salience scores are equal to raw scores for simplicity, as not provided\n# In a real scenario, these would be separate inputs.\nsalience_scores = {k: v for k, v in scores.items()}\ndimensional_scores = scores\nepsilon = 0.001\n\n# Derived Metrics Calculations\n\n# Tension Indices\nidentity_tension = min(dimensional_scores[\"tribal_dominance\"], dimensional_scores[\"individual_dignity\"]) * abs(salience_scores[\"tribal_dominance\"] - salience_scores[\"individual_dignity\"])\nemotional_tension = min(dimensional_scores[\"fear\"], dimensional_scores[\"hope\"]) * abs(salience_scores[\"fear\"] - salience_scores[\"hope\"])\nsuccess_tension = min(dimensional_scores[\"envy\"], dimensional_scores[\"mudita\"]) * abs(salience_scores[\"envy\"] - salience_scores[\"mudita\"])\nrelational_tension = min(dimensional_scores[\"enmity\"], dimensional_scores[\"amity\"]) * abs(salience_scores[\"enmity\"] - salience_scores[\"amity\"])\ngoal_tension = min(dimensional_scores[\"fragmentative_goals\"], dimensional_scores[\"cohesive_goals\"]) * abs(salience_scores[\"fragmentative_goals\"] - salience_scores[\"cohesive_goals\"])\n\n# Strategic Contradiction Index\nstrategic_contradiction_index = (identity_tension + emotional_tension + success_tension + relational_tension + goal_tension) / 5\n\n# Intermediate calculations for salience-weighted cohesion indices\nemotional_cohesion_component = (dimensional_scores[\"hope\"] * salience_scores[\"hope\"] - dimensional_scores[\"fear\"] * salience_scores[\"fear\"])\nsuccess_cohesion_component = (dimensional_scores[\"mudita\"] * salience_scores[\"mudita\"] - dimensional_scores[\"envy\"] * salience_scores[\"envy\"])\nrelational_cohesion_component = (dimensional_scores[\"amity\"] * salience_scores[\"amity\"] - dimensional_scores[\"enmity\"] * salience_scores[\"enmity\"])\ngoal_cohesion_component = (dimensional_scores[\"cohesive_goals\"] * salience_scores[\"cohesive_goals\"] - dimensional_scores[\"fragmentative_goals\"] * salience_scores[\"fragmentative_goals\"])\nidentity_cohesion_component = (dimensional_scores[\"individual_dignity\"] * salience_scores[\"individual_dignity\"] - dimensional_scores[\"tribal_dominance\"] * salience_scores[\"tribal_dominance\"])\n\n# Salience weight totals\ndescriptive_salience_total = (salience_scores[\"hope\"] + salience_scores[\"fear\"] + salience_scores[\"mudita\"] + salience_scores[\"envy\"] + salience_scores[\"amity\"] + salience_scores[\"enmity\"])\nmotivational_salience_total = (salience_scores[\"hope\"] + salience_scores[\"fear\"] + salience_scores[\"mudita\"] + salience_scores[\"envy\"] + salience_scores[\"amity\"] + salience_scores[\"enmity\"] + salience_scores[\"cohesive_goals\"] + salience_scores[\"fragmentative_goals\"])\nfull_salience_total = (salience_scores[\"individual_dignity\"] + salience_scores[\"tribal_dominance\"] + salience_scores[\"hope\"] + salience_scores[\"fear\"] + salience_scores[\"mudita\"] + salience_scores[\"envy\"] + salience_scores[\"amity\"] + salience_scores[\"enmity\"] + salience_scores[\"cohesive_goals\"] + salience_scores[\"fragmentative_goals\"])\n\n# Final salience-weighted cohesion indices\ndescriptive_cohesion_index = (emotional_cohesion_component + success_cohesion_component + relational_cohesion_component) / (descriptive_salience_total + epsilon)\nmotivational_cohesion_index = (emotional_cohesion_component + success_cohesion_component + relational_cohesion_component + goal_cohesion_component) / (motivational_salience_total + epsilon)\nfull_cohesion_index = (identity_cohesion_component + emotional_cohesion_component + success_cohesion_component + relational_cohesion_component + goal_cohesion_component) / (full_salience_total + epsilon)\n\nresults = {\n    \"identity_tension\": identity_tension,\n    \"emotional_tension\": emotional_tension,\n    \"success_tension\": success_tension,\n    \"relational_tension\": relational_tension,\n    \"goal_tension\": goal_tension,\n    \"strategic_contradiction_index\": strategic_contradiction_index,\n    \"descriptive_cohesion_index\": descriptive_cohesion_index,\n    \"motivational_cohesion_index\": motivational_cohesion_index,\n    \"full_cohesion_index\": full_cohesion_index,\n}\n\n# Ensure all values are floats for JSON serialization\nfor key, value in results.items():\n    results[key] = float(value)\n\n```\n```json\n{\"results\":{\"identity_tension\":0.0,\"emotional_tension\":0.09000000000000001,\"success_tension\":0.0,\"relational_tension\":0.18,\"goal_tension\":0.0,\"strategic_contradiction_index\":0.054,\"descriptive_cohesion_index\":-0.5333333333333333,\"motivational_cohesion_index\":-0.3466666666666667,\"full_cohesion_index\":-0.39333333333333336}}\n```",
  "document_index": 9,
  "timestamp": "2025-09-22T05:58:05.705526+00:00"
}