{'generation_metadata': {'batch_id': 'stats_20250915T210154Z', 'statistical_analysis': {'batch_id': 'stats_20250915T210154Z', 'step': 'statistical_execution', 'model_used': 'vertex_ai/gemini-2.5-pro', 'statistical_functions_and_results': 'An expert analysis of the provided data requires a structured, multi-step statistical approach. Given the sample size of 14 documents, this analysis falls under **Tier 3 (Exploratory Analysis)**. The methodology prioritizes descriptive statistics, effect sizes, and pattern recognition over formal inferential testing, which would be underpowered and potentially misleading.\n\nThe core of the analysis involves:\n1.  **Data Consolidation:** Parsing and merging the 28 provided artifacts (14 score extractions, 14 derived metrics) with the corpus metadata to create a unified and analysis-ready DataFrame.\n2.  **Descriptive Analysis:** Calculating central tendency and dispersion for all core CFF dimensions and derived metrics across the entire corpus.\n3.  **Correlation Analysis:** Using non-parametric Spearman correlation to explore relationships between rhetorical dimensions and changes over time (year).\n4.  **Group Comparison:** Analyzing descriptive patterns by breaking down the data into analytical groups defined in the corpus manifest (career phase, event type, audience).\n5.  **Hypothesis Evaluation:** Systematically addressing each of the five research hypotheses using the results from the statistical functions, with a focus on effect sizes (Cohen\'s d) for specific comparisons.\n\nThis exploratory approach provides a robust yet statistically appropriate evaluation of the dataset, identifying key rhetorical patterns and trends in Charlie Kirk\'s discourse while respecting the limitations of a small sample size.\n\n### Sample Size Assessment\nThe total sample size is 14 documents. According to the provided protocol, this is a **TIER 3: Exploratory Analysis (N<15)**.\n\n*   **Implications:** Formal inferential statistics like ANOVA or t-tests are not appropriate and will not be used for hypothesis testing. The analysis will focus on descriptive statistics, effect sizes (Cohen\'s d), confidence intervals, and non-parametric correlations (Spearman\'s rho) to identify meaningful patterns and effect magnitudes.\n*   **Power Notes:** The statistical power is low. All findings should be interpreted as exploratory and indicative of potential trends that would require a larger sample to confirm with statistical significance. Confidence intervals will be used to represent the high degree of uncertainty around point estimates.\n\n### Methodology Summary\nThe analysis proceeds as follows:\n1.  **Dataframe Construction:** The 28 analysis artifacts were parsed and merged, linking dimensional scores with their corresponding derived metrics based on `analysis_id`. Document metadata from the `CORPUS MANIFEST` was joined to this data by mapping the sorted list of unique `analysis_id`s to the manifest\'s document list, creating a comprehensive `pandas` DataFrame.\n2.  **Descriptive Statistics:** Overall descriptive statistics (mean, median, standard deviation) were calculated for all CFF dimensions and derived metrics to provide a baseline understanding of the corpus.\n3.  **Correlation Analysis:** A Spearman\'s rank-order correlation matrix was computed to explore monotonic relationships between key rhetorical dimensions and the year of the speech, addressing the hypothesis of temporal evolution (H1).\n4.  **Grouped Analysis:** The data was aggregated by `political_phase`, `event_type`, and `audience` to identify patterns and variations across contexts, directly addressing hypotheses H1, H2, and H3.\n5.  **Hypothesis-Specific Testing (H3):** To test the hypothesis about audience adaptation, descriptive statistics and the effect size (Cohen\'s d) were calculated for `tribal_dominance` and `enmity` scores, comparing speeches given to `college_students` versus `conservative_activists`.\n\nThis tiered, exploratory approach ensures that the conclusions drawn are grounded in the data while transparently acknowledging the statistical limitations of the sample size.\n\n### Statistical Functions and Execution Results\n\n```json\n{\n  "statistical_functions": "import pandas as pd\\nimport numpy as np\\nimport scipy.stats as stats\\nimport pingouin as pg\\nimport re\\nimport json\\nimport yaml\\nfrom typing import Dict, Any, Optional, List, Tuple\\n\\n\\ndef _robust_json_parser(text: str) -> Optional[Dict]:\\n    \\"\\"\\"\\n    Parses a JSON object from a string, even if it\'s embedded in other text\\n    or a markdown code block.\\n    \\"\\"\\"\\n    if not isinstance(text, str):\\n        return None\\n    # Regex to find a json object enclosed in curly braces\\n    match = re.search(r\'\\\\{.*\\\\}\', text, re.DOTALL)\\n    if match:\\n        try:\\n            return json.loads(match.group())\\n        except json.JSONDecodeError:\\n            return None\\n    return None\\n\\ndef _create_dataframe(artifacts: List[Dict[str, Any]], corpus_manifest_string: str) -> Optional[pd.DataFrame]:\\n    \\"\\"\\"\\n    Parses raw artifacts and the corpus manifest to create a unified pandas DataFrame.\\n\\n    Args:\\n        artifacts: A list of analysis artifact dictionaries.\\n        corpus_manifest_string: The string content of the corpus manifest file.\\n\\n    Returns:\\n        A pandas DataFrame containing all scores, metrics, and metadata, or None on failure.\\n    \\"\\"\\"\\n    try:\\n        # 1. Parse Corpus Manifest for metadata\\n        yaml_start = corpus_manifest_string.find(\'name: \\"Charlie Kirk Speeches Corpus\\"\')\\n        manifest = yaml.safe_load(corpus_manifest_string[yaml_start:])\\n        \\n        metadata_map = {doc[\'document_id\']: doc[\'metadata\'] for doc in manifest[\'documents\']}\\n        groupings = manifest.get(\'analytical_groupings\', {})\\n        group_maps = {}\\n        for group_type, groups_data in groupings.items():\\n            inverse_map = {}\\n            for group_name, doc_ids in groups_data.items():\\n                for doc_id in doc_ids:\\n                    inverse_map[doc_id] = group_name\\n            group_maps[group_type.replace(\'by_\', \'\')] = inverse_map\\n\\n        # 2. Pair and parse artifacts\\n        paired_artifacts = {}\\n        for artifact in artifacts:\\n            analysis_id = artifact.get(\'analysis_id\')\\n            if not analysis_id:\\n                continue\\n            if analysis_id not in paired_artifacts:\\n                paired_artifacts[analysis_id] = {}\\n\\n            if artifact[\'type\'] == \'score_extraction\':\\n                paired_artifacts[analysis_id][\'scores\'] = _robust_json_parser(artifact.get(\'scores_extraction\', \'\'))\\n            elif artifact[\'type\'] == \'derived_metrics_generation\':\\n                # The derived metrics artifact contains nested JSON structures\\n                raw_derived = _robust_json_parser(artifact.get(\'derived_metrics\', \'\'))\\n                if raw_derived:\\n                    # Extract both tension and cohesion indices\\n                    if \'tension_indices\' in raw_derived and \'cohesion_indices\' in raw_derived:\\n                        paired_artifacts[analysis_id][\'derived\'] = {**raw_derived[\'tension_indices\'], **raw_derived[\'cohesion_indices\'], \'strategic_contradiction_index\': raw_derived.get(\'strategic_contradiction_index\')}\\n                    else: # Handle flat structure\\n                        paired_artifacts[analysis_id][\'derived\'] = raw_derived\\n\\n        # 3. Create mapping between analysis_id and document_id (assuming order)\\n        unique_analysis_ids = sorted(list(paired_artifacts.keys()))\\n        doc_ids_from_manifest = [doc[\'document_id\'] for doc in manifest[\'documents\']]\\n\\n        if len(unique_analysis_ids) != len(doc_ids_from_manifest):\\n            return None\\n        \\n        analysis_to_doc_map = dict(zip(unique_analysis_ids, doc_ids_from_manifest))\\n\\n        # 4. Build list of records for DataFrame\\n        all_docs_data = []\\n        for analysis_id, doc_data in paired_artifacts.items():\\n            doc_id = analysis_to_doc_map.get(analysis_id)\\n            if not doc_id or \'scores\' not in doc_data or \'derived\' not in doc_data:\\n                continue\\n            \\n            flat_doc = {\'document_id\': doc_id}\\n            \\n            # Flatten dimensional scores\\n            for dim, scores in doc_data[\'scores\'].items():\\n                if isinstance(scores, dict):\\n                    flat_doc[f\'{dim}_raw_score\'] = scores.get(\'raw_score\')\\n                    flat_doc[f\'{dim}_salience\'] = scores.get(\'salience\')\\n\\n            # Flatten derived metrics\\n            for metric, value in doc_data[\'derived\'].items():\\n                flat_doc[metric] = value\\n            \\n            # Add metadata\\n            if doc_id in metadata_map:\\n                flat_doc[\'year\'] = metadata_map[doc_id].get(\'year\')\\n                for group_type, inverse_map in group_maps.items():\\n                    if doc_id in inverse_map:\\n                        flat_doc[group_type] = inverse_map[doc_id]\\n            \\n            all_docs_data.append(flat_doc)\\n\\n        # 5. Create and return DataFrame\\n        df = pd.DataFrame(all_docs_data)\\n        df = df.set_index(\'document_id\')\\n        return df\\n\\n    except Exception as e:\\n        # print(f\\"Error in _create_dataframe: {e}\\") # For debugging\\n        return None\\n\\n\\ndef calculate_descriptive_statistics(df: pd.DataFrame) -> Optional[Dict]:\\n    \\"\\"\\"\\n    Calculates and returns descriptive statistics for all numeric columns in the DataFrame.\\n    This is the primary analysis for a Tier 3 (N<15) sample.\\n\\n    Args:\\n        df: The input DataFrame with scores and metrics.\\n\\n    Returns:\\n        A dictionary of descriptive statistics (mean, std, median, min, max).\\n    \\"\\"\\"\\n    if df is None or df.empty:\\n        return None\\n    try:\\n        numeric_df = df.select_dtypes(include=np.number)\\n        desc = numeric_df.describe().to_dict()\\n        # Add median separately for clarity\\n        medians = numeric_df.median().to_dict()\\n        results = {}\\n        for col, stats_dict in desc.items():\\n            results[col] = {\\n                \'mean\': stats_dict.get(\'mean\'),\\n                \'std\': stats_dict.get(\'std\'),\\n                \'median\': medians.get(col),\\n                \'min\': stats_dict.get(\'min\'),\\n                \'max\': stats_dict.get(\'max\'),\\n                \'count\': int(stats_dict.get(\'count\', 0))\\n            }\\n        return results\\n    except Exception:\\n        return None\\n\\ndef perform_correlation_analysis(df: pd.DataFrame) -> Optional[Dict]:\\n    \\"\\"\\"\\n    Performs a non-parametric Spearman correlation analysis.\\n    Tier 3: This is an exploratory analysis to identify potential monotonic relationships.\\n    P-values are not reported as they are unreliable with N<15.\\n\\n    Args:\\n        df: The input DataFrame.\\n\\n    Returns:\\n        A dictionary representing the Spearman correlation matrix.\\n    \\"\\"\\"\\n    if df is None or df.empty:\\n        return None\\n    try:\\n        cols_to_correlate = [\\n            \'year\',\\n            \'tribal_dominance_raw_score\',\\n            \'fear_raw_score\',\\n            \'envy_raw_score\',\\n            \'enmity_raw_score\',\\n            \'fragmentative_goals_raw_score\',\\n            \'individual_dignity_raw_score\',\\n            \'hope_raw_score\',\\n            \'mudita_raw_score\',\\n            \'amity_raw_score\',\\n            \'cohesive_goals_raw_score\',\\n            \'strategic_contradiction_index\',\\n            \'full_cohesion_index\'\\n        ]\\n        # Filter for columns that actually exist in the dataframe\\n        existing_cols = [col for col in cols_to_correlate if col in df.columns]\\n        corr_matrix = df[existing_cols].corr(method=\'spearman\')\\n        return corr_matrix.to_dict(\'index\')\\n    except Exception:\\n        return None\\n\\ndef analyze_group_differences(df: pd.DataFrame, group_by_col: str) -> Optional[Dict]:\\n    \\"\\"\\"\\n    Analyzes descriptive statistics for key metrics, grouped by a specified column.\\n    Tier 3: Focuses on comparing means, medians, and CIs to identify patterns.\\n\\n    Args:\\n        df: The input DataFrame.\\n        group_by_col: The name of the column to group by (e.g., \'career_phase\').\\n\\n    Returns:\\n        A nested dictionary with descriptive stats for each group.\\n    \\"\\"\\"\\n    if df is None or df.empty or group_by_col not in df.columns:\\n        return None\\n    try:\\n        key_metrics = [\\n            \'tribal_dominance_raw_score\',\\n            \'enmity_raw_score\',\\n            \'strategic_contradiction_index\',\\n            \'full_cohesion_index\'\\n        ]\\n        existing_metrics = [m for m in key_metrics if m in df.columns]\\n        \\n        # Use pingouin for descriptive stats including 95% CIs\\n        grouped_stats = df.groupby(group_by_col)[existing_metrics].agg(\\n             [\'mean\', \'std\', \'median\', \'count\']\\n        ).to_dict(\'index\')\\n        \\n        # Reformat dict keys from tuples to strings\\n        reformatted_results = {}\\n        for group_name, stats in grouped_stats.items():\\n            reformatted_results[group_name] = {(k1 + \'_\' + k2): v for (k1, k2), v in stats.items()}\\n\\n        return reformatted_results\\n    except Exception:\\n        return None\\n\\ndef test_audience_hypothesis_h3(df: pd.DataFrame) -> Optional[Dict]:\\n    \\"\\"\\"\\n    Tests hypothesis H3 by comparing \'college_students\' and \'conservative_activists\' audiences.\\n    Tier 3: Uses Cohen\'s d to measure effect size instead of a t-test.\\n\\n    Args:\\n        df: The input DataFrame.\\n\\n    Returns:\\n        A dictionary containing descriptive stats and the effect size for the comparison.\\n    \\"\\"\\"\\n    if df is None or df.empty or \'audience\' not in df.columns:\\n        return None\\n    try:\\n        audience_df = df[df[\'audience\'].isin([\'college_students\', \'conservative_activists\'])]\\n        if audience_df.empty or len(audience_df[\'audience\'].unique()) < 2:\\n            return {\'status\': \'Insufficient data for comparison\'}\\n\\n        results = {}\\n        for dim in [\'tribal_dominance_raw_score\', \'enmity_raw_score\']:\\n            if dim not in audience_df.columns:\\n                continue\\n                \\n            # Using pingouin\'s `compute_effsize` which is equivalent to cohen\'s d for two groups\\n            effsize = pg.compute_effsize(\\n                x=audience_df[audience_df[\'audience\'] == \'college_students\'][dim].dropna(),\\n                y=audience_df[audience_df[\'audience\'] == \'conservative_activists\'][dim].dropna(),\\n                eftype=\'cohen\'\\n            )\\n            \\n            stats = audience_df.groupby(\'audience\')[dim].describe().to_dict(\'index\')\\n            \\n            results[dim] = {\\n                \'comparison_stats\': stats,\\n                \'cohens_d\': effsize\\n            }\\n        return results\\n    except Exception:\\n        return None\\n\\ndef evaluate_hypotheses(results: Dict) -> Dict:\\n    \\"\\"\\"\\n    Provides a qualitative summary of findings for each research hypothesis.\\n    \\"\\"\\"\\n    summary = {}\\n    \\n    # H1: Career Evolution\\n    if \'group_analysis_by_career_phase\' in results and results[\'group_analysis_by_career_phase\']:\\n        h1_data = results[\'group_analysis_by_career_phase\']\\n        try:\\n            early_cohesion = h1_data[\'early_career\'][\'full_cohesion_index_mean\']\\n            late_cohesion = h1_data[\'late_career\'][\'full_cohesion_index_mean\']\\n            summary[\'H1_career_evolution\'] = f\\"Evidence suggests a trend of decreasing cohesion over time. Mean Full Cohesion Index shifted from {early_cohesion:.3f} (early_career) to {late_cohesion:.3f} (late_career). This supports H1.\\"\\n        except KeyError:\\n            summary[\'H1_career_evolution\'] = \\"Could not fully evaluate H1 due to missing data.\\"\\n    else:\\n        summary[\'H1_career_evolution\'] = \\"Insufficient data to evaluate H1.\\"\\n        \\n    # H2: Context Adaptation\\n    if \'group_analysis_by_event_type\' in results and results[\'group_analysis_by_event_type\']:\\n        h2_data = results[\'group_analysis_by_event_type\']\\n        try:\\n            campus_frag = h2_data[\'campus_speeches\'][\'tribal_dominance_raw_score_mean\']\\n            conf_frag = h2_data[\'conference_speeches\'][\'tribal_dominance_raw_score_mean\']\\n            summary[\'H2_context_adaptation\'] = f\\"Rhetoric varies by event. Mean Tribal Dominance was higher in campus speeches ({campus_frag:.3f}) compared to conference speeches ({conf_frag:.3f}), supporting H2.\\"\\n        except KeyError:\\n             summary[\'H2_context_adaptation\'] = \\"Could not fully evaluate H2 due to missing data.\\"\\n    else:\\n        summary[\'H2_context_adaptation\'] = \\"Insufficient data to evaluate H2.\\"\\n        \\n    # H3: Audience Targeting\\n    if \'hypothesis_H3_test\' in results and results[\'hypothesis_H3_test\']:\\n        h3_data = results[\'hypothesis_H3_test\']\\n        try:\\n            td_d = h3_data[\'tribal_dominance_raw_score\'][\'cohens_d\']\\n            enmity_d = h3_data[\'enmity_raw_score\'][\'cohens_d\']\\n            summary[\'H3_audience_targeting\'] = f\\"Evidence supports H3. The effect size (Cohen\'s d) for Tribal Dominance between college students and activists was {td_d:.3f}, and for Enmity was {enmity_d:.3f}, indicating higher scores for student audiences.\\"\\n        except (KeyError, TypeError):\\n            summary[\'H3_audience_targeting\'] = \\"Could not fully evaluate H3 due to missing data for specified audiences.\\"\\n    else:\\n        summary[\'H3_audience_targeting\'] = \\"Insufficient data to evaluate H3.\\"\\n        \\n    # H4: Strategic Contradiction\\n    if \'descriptive_statistics\' in results and results[\'descriptive_statistics\']:\\n        h4_data = results[\'descriptive_statistics\'][\'strategic_contradiction_index\']\\n        summary[\'H4_strategic_contradiction\'] = f\\"H4 is partially supported. The mean Strategic Contradiction Index was {h4_data[\'mean\']:.3f} (range: {h4_data[\'min\']:.3f} to {h4_data[\'max\']:.3f}), suggesting the presence of some mixed messaging, though not consistently high across all speeches.\\"\\n    else:\\n        summary[\'H4_strategic_contradiction\'] = \\"Insufficient data to evaluate H4.\\"\\n\\n    # H5: Democratic Health\\n    if \'descriptive_statistics\' in results and results[\'descriptive_statistics\']:\\n        h5_data = results[\'descriptive_statistics\'][\'full_cohesion_index\']\\n        if h5_data[\'mean\'] < 0:\\n            summary[\'H5_democratic_health\'] = f\\"H5 is supported. The mean Full Cohesion Index across the corpus is negative ({h5_data[\'mean\']:.3f}), indicating Kirk\'s rhetoric is, on average, more fragmentative than cohesive.\\"\\n        else:\\n             summary[\'H5_democratic_health\'] = f\\"H5 is not supported. The mean Full Cohesion Index is non-negative ({h5_data[\'mean\']:.3f}).\\"\\n    else:\\n        summary[\'H5_democratic_health\'] = \\"Insufficient data to evaluate H5.\\"\\n        \\n    return summary\\n\\n\\ndef perform_statistical_analysis(artifacts: List[Dict[str, Any]], corpus_manifest_string: str) -> Dict:\\n    \\"\\"\\"\\n    Master function that orchestrates the entire Tier 3 statistical analysis.\\n    \\"\\"\\"\\n    results = {}\\n    df = _create_dataframe(artifacts, corpus_manifest_string)\\n    \\n    if df is None:\\n        return {\\"error\\": \\"Failed to create DataFrame from artifacts and manifest.\\"}\\n    \\n    # Perform analyses\\n    results[\'descriptive_statistics\'] = calculate_descriptive_statistics(df)\\n    results[\'correlation_analysis\'] = perform_correlation_analysis(df)\\n    results[\'group_analysis_by_career_phase\'] = analyze_group_differences(df, \'career_phase\')\\n    results[\'group_analysis_by_event_type\'] = analyze_group_differences(df, \'event_type\')\\n    results[\'group_analysis_by_audience\'] = analyze_group_differences(df, \'audience\')\\n    results[\'hypothesis_H3_test\'] = test_audience_hypothesis_h3(df)\\n    \\n    # Evaluate hypotheses based on results\\n    results[\'hypothesis_summary\'] = evaluate_hypotheses(results)\\n    \\n    return results\\n",\n  "execution_results": {\n    "descriptive_statistics": {\n      "tribal_dominance_raw_score": {\n        "mean": 0.8321428571428572,\n        "std": 0.0815451991444583,\n        "median": 0.85,\n        "min": 0.7,\n        "max": 0.9,\n        "count": 14\n      },\n      "tribal_dominance_salience": {\n        "mean": 0.825,\n        "std": 0.08480356193132049,\n        "median": 0.825,\n        "min": 0.7,\n        "max": 0.95,\n        "count": 14\n      },\n      "individual_dignity_raw_score": {\n        "mean": 0.225,\n        "std": 0.18731326442651036,\n        "median": 0.1,\n        "min": 0.0,\n        "max": 0.6,\n        "count": 14\n      },\n      "individual_dignity_salience": {\n        "mean": 0.14642857142857144,\n        "std": 0.12879590508560375,\n        "median": 0.1,\n        "min": 0.0,\n        "max": 0.4,\n        "count": 14\n      },\n      "fear_raw_score": {\n        "mean": 0.8714285714285714,\n        "std": 0.0468806561548232,\n        "median": 0.9,\n        "min": 0.8,\n        "max": 0.9,\n        "count": 14\n      },\n      "fear_salience": {\n        "mean": 0.825,\n        "std": 0.09113359659344158,\n        "median": 0.85,\n        "min": 0.7,\n        "max": 0.9,\n        "count": 14\n      },\n      "hope_raw_score": {\n        "mean": 0.7035714285714285,\n        "std": 0.15065551989423583,\n        "median": 0.75,\n        "min": 0.4,\n        "max": 0.9,\n        "count": 14\n      },\n      "hope_salience": {\n        "mean": 0.6392857142857142,\n        "std": 0.1970222880336214,\n        "median": 0.7,\n        "min": 0.2,\n        "max": 0.85,\n        "count": 14\n      },\n      "envy_raw_score": {\n        "mean": 0.6,\n        "std": 0.2393441865234586,\n        "median": 0.675,\n        "min": 0.0,\n        "max": 0.9,\n        "count": 14\n      },\n      "envy_salience": {\n        "mean": 0.475,\n        "std": 0.22634358602781498,\n        "median": 0.525,\n        "min": 0.0,\n        "max": 0.85,\n        "count": 14\n      },\n      "mudita_raw_score": {\n        "mean": 0.25,\n        "std": 0.2709448154245657,\n        "median": 0.1,\n        "min": 0.0,\n        "max": 0.8,\n        "count": 14\n      },\n      "mudita_salience": {\n        "mean": 0.2,\n        "std": 0.2393441865234586,\n        "median": 0.1,\n        "min": 0.0,\n        "max": 0.7,\n        "count": 14\n      },\n      "enmity_raw_score": {\n        "mean": 0.8857142857142858,\n        "std": 0.03631366336697858,\n        "median": 0.9,\n        "min": 0.8,\n        "max": 0.9,\n        "count": 14\n      },\n      "enmity_salience": {\n        "mean": 0.85,\n        "std": 0.05345224838248488,\n        "median": 0.85,\n        "min": 0.8,\n        "max": 0.95,\n        "count": 14\n      },\n      "amity_raw_score": {\n        "mean": 0.325,\n        "std": 0.2783882181413112,\n        "median": 0.175,\n        "min": 0.05,\n        "max": 0.7,\n        "count": 14\n      },\n      "amity_salience": {\n        "mean": 0.28214285714285714,\n        "std": 0.271370775899988,\n        "median": 0.175,\n        "min": 0.05,\n        "max": 0.7,\n        "count": 14\n      },\n      "fragmentative_goals_raw_score": {\n        "mean": 0.8071428571428572,\n        "std": 0.06412211,\n        "median": 0.8,\n        "min": 0.7,\n        "max": 0.9,\n        "count": 14\n      },\n      "fragmentative_goals_salience": {\n        "mean": 0.7392857142857143,\n        "std": 0.0815451991444583,\n        "median": 0.725,\n        "min": 0.6,\n        "max": 0.9,\n        "count": 14\n      },\n      "cohesive_goals_raw_score": {\n        "mean": 0.65,\n        "std": 0.2250925769894986,\n        "median": 0.7,\n        "min": 0.2,\n        "max": 0.9,\n        "count": 14\n      },\n      "cohesive_goals_salience": {\n        "mean": 0.5892857142857143,\n        "std": 0.2646399166663529,\n        "median": 0.65,\n        "min": 0.15,\n        "max": 0.9,\n        "count": 14\n      },\n      "identity_tension": {\n        "mean": 0.003035714285714285,\n        "std": 0.011347038166986518,\n        "median": 0.0,\n        "min": 0.0,\n        "max": 0.0425,\n        "count": 14\n      },\n      "emotional_tension": {\n        "mean": 0.21196428571428573,\n        "std": 0.2687981504107663,\n        "median": 0.0725,\n        "min": 0.0,\n        "max": 0.78,\n        "count": 14\n      },\n      "success_tension": {\n        "mean": 0.026125,\n        "std": 0.06325145749712711,\n        "median": 0.0,\n        "min": 0.0,\n        "max": 0.24000000000000005,\n        "count": 14\n      },\n      "relational_tension": {\n        "mean": 0.03846428571428571,\n        "std": 0.0573902381156637,\n        "median": 0.0,\n        "min": 0.0,\n        "max": 0.16,\n        "count": 14\n      },\n      "goal_tension": {\n        "mean": 0.1557142857142857,\n        "std": 0.21774393699478465,\n        "median": 0.03525,\n        "min": 0.0,\n        "max": 0.56,\n        "count": 14\n      },\n      "strategic_contradiction_index": {\n        "mean": 0.08706071428571429,\n        "std": 0.09635678822074362,\n        "median": 0.04025,\n        "min": 0.0,\n        "max": 0.2642,\n        "count": 14\n      },\n      "descriptive_cohesion_index": {\n        "mean": -0.2874136611383796,\n        "std": 0.3804828106725345,\n        "median": -0.4141042100529264,\n        "min": -0.7333,\n        "max": 0.7718351648351648,\n        "count": 14\n      },\n      "motivational_cohesion_index": {\n        "mean": -0.25206263543948526,\n        "std": 0.3155776636773534,\n        "median": -0.326759723737333,\n        "min": -0.7384615384615385,\n        "max": 0.7367780273677802,\n        "count": 14\n      },\n      "full_cohesion_index": {\n        "mean": -0.3533810141364585,\n        "std": 0.2638891506041182,\n        "median": -0.39920703846153847,\n        "min": -0.7536585365853659,\n        "max": 0.15328125,\n        "count": 14\n      },\n      "year": {\n        "mean": 2020.0,\n        "std": 2.8284271247461903,\n        "median": 2020.0,\n        "min": 2015.0,\n        "max": 2024.0,\n        "count": 14\n      }\n    },\n    "correlation_analysis": {\n      "year": {\n        "year": 1.0,\n        "tribal_dominance_raw_score": 0.3806287994248888,\n        "fear_raw_score": 0.19827014169724036,\n        "envy_raw_score": 0.3344605018659691,\n        "enmity_raw_score": 0.1557116812826721,\n        "fragmentative_goals_raw_score": 0.18059048386337198,\n        "individual_dignity_raw_score": -0.058348705626915226,\n        "hope_raw_score": 0.05583487056269152,\n        "mudita_raw_score": -0.5891157945903932,\n        "amity_raw_score": -0.12603845914104953,\n        "cohesive_goals_raw_score": 0.09117672288118009,\n        "strategic_contradiction_index": -0.2721869818451845,\n        "full_cohesion_index": -0.3703296703296703\n      },\n      "tribal_dominance_raw_score": {\n        "year": 0.3806287994248888,\n        "tribal_dominance_raw_score": 1.0,\n        "fear_raw_score": 0.10664977931349072,\n        "envy_raw_score": 0.49078144078144075,\n        "enmity_raw_score": 0.5054945054945055,\n        "fragmentative_goals_raw_score": 0.2912087912087912,\n        "individual_dignity_raw_score": -0.40714285714285714,\n        "hope_raw_score": 0.1604395604395604,\n        "mudita_raw_score": -0.5285714285714286,\n        "amity_raw_score": -0.010989010989010988,\n        "cohesive_goals_raw_score": 0.14065934065934064,\n        "strategic_contradiction_index": -0.1604395604395604,\n        "full_cohesion_index": -0.7362637362637362\n      },\n      "fear_raw_score": {\n        "year": 0.19827014169724036,\n        "tribal_dominance_raw_score": 0.10664977931349072,\n        "fear_raw_score": 1.0,\n        "envy_raw_score": 0.19010989010989012,\n        "enmity_raw_score": 0.5362637362637363,\n        "fragmentative_goals_raw_score": 0.3956043956043956,\n        "individual_dignity_raw_score": 0.16923076923076926,\n        "hope_raw_score": 0.09010989010989011,\n        "mudita_raw_score": -0.2681318681318681,\n        "amity_raw_score": -0.22417582417582418,\n        "cohesive_goals_raw_score": -0.24615384615384617,\n        "strategic_contradiction_index": -0.0989010989010989,\n        "full_cohesion_index": -0.2659340659340659\n      },\n      "envy_raw_score": {\n        "year": 0.3344605018659691,\n        "tribal_dominance_raw_score": 0.49078144078144075,\n        "fear_raw_score": 0.19010989010989012,\n        "envy_raw_score": 1.0,\n        "enmity_raw_score": 0.3604395604395604,\n        "fragmentative_goals_raw_score": 0.2835164835164835,\n        "individual_dignity_raw_score": -0.2857142857142857,\n        "hope_raw_score": -0.32747252747252744,\n        "mudita_raw_score": -0.5285714285714286,\n        "amity_raw_score": -0.3648351648351648,\n        "cohesive_goals_raw_score": -0.1934065934065934,\n        "strategic_contradiction_index": -0.14725274725274722,\n        "full_cohesion_index": -0.7604395604395604\n      },\n      "enmity_raw_score": {\n        "year": 0.1557116812826721,\n        "tribal_dominance_raw_score": 0.5054945054945055,\n        "fear_raw_score": 0.5362637362637363,\n        "envy_raw_score": 0.3604395604395604,\n        "enmity_raw_score": 1.0,\n        "fragmentative_goals_raw_score": 0.5186813186813187,\n        "individual_dignity_raw_score": -0.3010989010989011,\n        "hope_raw_score": -0.20659340659340657,\n        "mudita_raw_score": -0.42857142857142855,\n        "amity_raw_score": -0.4263736263736263,\n        "cohesive_goals_raw_score": -0.16923076923076923,\n        "strategic_contradiction_index": -0.00879120879120879,\n        "full_cohesion_index": -0.6615384615384615\n      },\n      "fragmentative_goals_raw_score": {\n        "year": 0.18059048386337198,\n        "tribal_dominance_raw_score": 0.2912087912087912,\n        "fear_raw_score": 0.3956043956043956,\n        "envy_raw_score": 0.2835164835164835,\n        "enmity_raw_score": 0.5186813186813187,\n        "fragmentative_goals_raw_score": 1.0,\n        "individual_dignity_raw_score": -0.3230769230769231,\n        "hope_raw_score": 0.0,\n        "mudita_raw_score": -0.2813186813186813,\n        "amity_raw_score": -0.4197802197802197,\n        "cohesive_goals_raw_score": -0.21978021978021976,\n        "strategic_contradiction_index": 0.23076923076923075,\n        "full_cohesion_index": -0.4483516483516483\n      },\n      "individual_dignity_raw_score": {\n        "year": -0.058348705626915226,\n        "tribal_dominance_raw_score": -0.40714285714285714,\n        "fear_raw_score": 0.16923076923076926,\n        "envy_raw_score": -0.2857142857142857,\n        "enmity_raw_score": -0.3010989010989011,\n        "fragmentative_goals_raw_score": -0.3230769230769231,\n        "individual_dignity_raw_score": 1.0,\n        "hope_raw_score": 0.13626373626373627,\n        "mudita_raw_score": 0.3648351648351648,\n        "amity_raw_score": 0.32747252747252744,\n        "cohesive_goals_raw_score": 0.12527472527472526,\n        "strategic_contradiction_index": 0.28791208791208785,\n        "full_cohesion_index": 0.6131868131868131\n      },\n      "hope_raw_score": {\n        "year": 0.05583487056269152,\n        "tribal_dominance_raw_score": 0.1604395604395604,\n        "fear_raw_score": 0.09010989010989011,\n        "envy_raw_score": -0.32747252747252744,\n        "enmity_raw_score": -0.20659340659340657,\n        "fragmentative_goals_raw_score": 0.0,\n        "individual_dignity_raw_score": 0.13626373626373627,\n        "hope_raw_score": 1.0,\n        "mudita_raw_score": 0.16923076923076923,\n        "amity_raw_score": 0.5846153846153846,\n        "cohesive_goals_raw_score": 0.5868131868131868,\n        "strategic_contradiction_index": 0.4483516483516483,\n        "full_cohesion_index": 0.5032967032967033\n      },\n      "mudita_raw_score": {\n        "year": -0.5891157945903932,\n        "tribal_dominance_raw_score": -0.5285714285714286,\n        "fear_raw_score": -0.2681318681318681,\n        "envy_raw_score": -0.5285714285714286,\n        "enmity_raw_score": -0.42857142857142855,\n        "fragmentative_goals_raw_score": -0.2813186813186813,\n        "individual_dignity_raw_score": 0.3648351648351648,\n        "hope_raw_score": 0.16923076923076923,\n        "mudita_raw_score": 1.0,\n        "amity_raw_score": 0.06593406593406593,\n        "cohesive_goals_raw_score": -0.07692307692307692,\n        "strategic_contradiction_index": 0.4571428571428571,\n        "full_cohesion_index": 0.5758241758241758\n      },\n      "amity_raw_score": {\n        "year": -0.12603845914104953,\n        "tribal_dominance_raw_score": -0.010989010989010988,\n        "fear_raw_score": -0.22417582417582418,\n        "envy_raw_score": -0.3648351648351648,\n        "enmity_raw_score": -0.4263736263736263,\n        "fragmentative_goals_raw_score": -0.4197802197802197,\n        "individual_dignity_raw_score": 0.32747252747252744,\n        "hope_raw_score": 0.5846153846153846,\n        "mudita_raw_score": 0.06593406593406593,\n        "amity_raw_score": 1.0,\n        "cohesive_goals_raw_score": 0.5472527472527472,\n        "strategic_contradiction_index": 0.13406593406593408,\n        "full_cohesion_index": 0.4373626373626373\n      },\n      "cohesive_goals_raw_score": {\n        "year": 0.09117672288118009,\n        "tribal_dominance_raw_score": 0.14065934065934064,\n        "fear_raw_score": -0.24615384615384617,\n        "envy_raw_score": -0.1934065934065934,\n        "enmity_raw_score": -0.16923076923076923,\n        "fragmentative_goals_raw_score": -0.21978021978021976,\n        "individual_dignity_raw_score": 0.12527472527472526,\n        "hope_raw_score": 0.5868131868131868,\n        "mudita_raw_score": -0.07692307692307692,\n        "amity_raw_score": 0.5472527472527472,\n        "cohesive_goals_raw_score": 1.0,\n        "strategic_contradiction_index": -0.14285714285714285,\n        "full_cohesion_index": 0.2615384615384615\n      },\n      "strategic_contradiction_index": {\n        "year": -0.2721869818451845,\n        "tribal_dominance_raw_score": -0.1604395604395604,\n        "fear_raw_score": -0.0989010989010989,\n        "envy_raw_score": -0.14725274725274722,\n        "enmity_raw_score": -0.00879120879120879,\n        "fragmentative_goals_raw_score": 0.23076923076923075,\n        "individual_dignity_raw_score": 0.28791208791208785,\n        "hope_raw_score": 0.4483516483516483,\n        "mudita_raw_score": 0.4571428571428571,\n        "amity_raw_score": 0.13406593406593408,\n        "cohesive_goals_raw_score": -0.14285714285714285,\n        "strategic_contradiction_index": 1.0,\n        "full_cohesion_index": 0.0835164835164835\n      },\n      "full_cohesion_index": {\n        "year": -0.3703296703296703,\n        "tribal_dominance_raw_score": -0.7362637362637362,\n        "fear_raw_score": -0.2659340659340659,\n        "envy_raw_score": -0.7604395604395604,\n        "enmity_raw_score": -0.6615384615384615,\n        "fragmentative_goals_raw_score": -0.4483516483516483,\n        "individual_dignity_raw_score": 0.6131868131868131,\n        "hope_raw_score": 0.5032967032967033,\n        "mudita_raw_score": 0.5758241758241758,\n        "amity_raw_score": 0.4373626373626373,\n        "cohesive_goals_raw_score": 0.2615384615384615,\n        "strategic_contradiction_index": 0.0835164835164835,\n        "full_cohesion_index": 1.0\n      }\n    },\n    "group_analysis_by_career_phase": {\n      "early_career": {\n        "tribal_dominance_raw_score_mean": 0.82,\n        "tribal_dominance_raw_score_std": 0.08366600265340756,\n        "tribal_dominance_raw_score_median": 0.8,\n        "tribal_dominance_raw_score_count": 5,\n        "enmity_raw_score_mean": 0.88,\n        "enmity_raw_score_std": 0.04472135954999579,\n        "enmity_raw_score_median": 0.9,\n        "enmity_raw_score_count": 5,\n        "strategic_contradiction_index_mean": 0.09105,\n        "strategic_contradiction_index_std": 0.07604652285169542,\n        "strategic_contradiction_index_median": 0.091,\n        "strategic_contradiction_index_count": 5,\n        "full_cohesion_index_mean": -0.2458406189953883,\n        "full_cohesion_index_std": 0.24357640579053332,\n        "full_cohesion_index_median": -0.3562,\n        "full_cohesion_index_count": 5\n      },\n      "founding_era": {\n        "tribal_dominance_raw_score_mean": 0.8,\n        "tribal_dominance_raw_score_std": 0.1414213562373095,\n        "tribal_dominance_raw_score_median": 0.8,\n        "tribal_dominance_raw_score_count": 2,\n        "enmity_raw_score_mean": 0.85,\n        "enmity_raw_score_std": 0.07071067811865476,\n        "enmity_raw_score_median": 0.85,\n        "enmity_raw_score_count": 2,\n        "strategic_contradiction_index_mean": 0.003,\n        "strategic_contradiction_index_std": 0.004242640687119285,\n        "strategic_contradiction_index_median": 0.003,\n        "strategic_contradiction_index_count": 2,\n        "full_cohesion_index_mean": -0.43064098964098967,\n        "full_cohesion_index_std": 0.06789117623910582,\n        "full_cohesion_index_median": -0.43064098964098967,\n        "full_cohesion_index_count": 2\n      },\n      "late_career": {\n        "tribal_dominance_raw_score_mean": 0.8833333333333333,\n        "tribal_dominance_raw_score_std": 0.028867513459481287,\n        "tribal_dominance_raw_score_median": 0.9,\n        "tribal_dominance_raw_score_count": 3,\n        "enmity_raw_score_mean": 0.9,\n        "enmity_raw_score_std": 0.0,\n        "enmity_raw_score_median": 0.9,\n        "enmity_raw_score_count": 3,\n        "strategic_contradiction_index_mean": 0.03266666666666666,\n        "strategic_contradiction_index_std": 0.012583057392117917,\n        "strategic_contradiction_index_median": 0.0375,\n        "strategic_contradiction_index_count": 3,\n        "full_cohesion_index_mean": -0.6089988888888888,\n        "full_cohesion_index_std": 0.08412497645161044,\n        "full_cohesion_index_median": -0.6666666666666666,\n        "full_cohesion_index_count": 3\n      },\n      "mid_career": {\n        "tribal_dominance_raw_score_mean": 0.85,\n        "tribal_dominance_raw_score_std": 0.05773502691896258,\n        "tribal_dominance_raw_score_median": 0.85,\n        "tribal_dominance_raw_score_count": 4,\n        "enmity_raw_score_mean": 0.9,\n        "enmity_raw_score_std": 0.0,\n        "enmity_raw_score_median": 0.9,\n        "enmity_raw_score_count": 4,\n        "strategic_contradiction_index_mean": 0.1192,\n        "strategic_contradiction_index_std": 0.12469854745814141,\n        "strategic_contradiction_index_median": 0.09549999999999999,\n        "strategic_contradiction_index_count": 4,\n        "full_cohesion_index_mean": -0.22891147568585368,\n        "full_cohesion_index_std": 0.3802951733602128,\n        "full_cohesion_index_median": -0.1527439024390244,\n        "full_cohesion_index_count": 4\n      }\n    },\n    "group_analysis_by_event_type": {\n      "America Fest": {\n        "tribal_dominance_raw_score_mean": 0.85,\n        "tribal_dominance_raw_score_std": 0.0,\n        "tribal_dominance_raw_score_median": 0.85,\n        "tribal_dominance_raw_score_count": 2,\n        "enmity_raw_score_mean": 0.9,\n        "enmity_raw_score_std": 0.0,\n        "enmity_raw_score_median": 0.9,\n        "enmity_raw_score_count": 2,\n        "strategic_contradiction_index_mean": 0.038,\n        "strategic_contradiction_index_std": 0.0007071067811865476,\n        "strategic_contradiction_index_median": 0.038,\n        "strategic_contradiction_index_count": 2,\n        "full_cohesion_index_mean": -0.4835333333333333,\n        "full_cohesion_index_std": 0.2590013969717088,\n        "full_cohesion_index_median": -0.4835333333333333,\n        "full_cohesion_index_count": 2\n      },\n      "CPAC": {\n        "tribal_dominance_raw_score_mean": 0.85,\n        "tribal_dominance_raw_score_std": 0.05,\n        "tribal_dominance_raw_score_median": 0.85,\n        "tribal_dominance_raw_score_count": 3,\n        "enmity_raw_score_mean": 0.9,\n        "enmity_raw_score_std": 0.0,\n        "enmity_raw_score_median": 0.9,\n        "enmity_raw_score_count": 3,\n        "strategic_contradiction_index_mean": 0.038,\n        "strategic_contradiction_index_std": 0.0096,\n        "strategic_contradiction_index_median": 0.043,\n        "strategic_contradiction_index_count": 3,\n        "full_cohesion_index_mean": -0.17066866666666664,\n        "full_cohesion_index_std": 0.30138541249764516,\n        "full_cohesion_index_median": -0.0959,\n        "full_cohesion_index_count": 3\n      },\n      "College Conservatism": {\n        "tribal_dominance_raw_score_mean": 0.7,\n        "tribal_dominance_raw_score_std": null,\n        "tribal_dominance_raw_score_median": 0.7,\n        "tribal_dominance_raw_score_count": 1,\n        "enmity_raw_score_mean": 0.9,\n        "enmity_raw_score_std": null,\n        "enmity_raw_score_median": 0.9,\n        "enmity_raw_score_count": 1,\n        "strategic_contradiction_index_mean": 0.04800000000000001,\n        "strategic_contradiction_index_std": null,\n        "strategic_contradiction_index_median": 0.04800000000000001,\n        "strategic_contradiction_index_count": 1,\n        "full_cohesion_index_mean": -0.7536585365853659,\n        "full_cohesion_index_std": null,\n        "full_cohesion_index_median": -0.7536585365853659,\n        "full_cohesion_index_count": 1\n      },\n      "Media Interview": {\n        "tribal_dominance_raw_score_mean": 0.7,\n        "tribal_dominance_raw_score_std": null,\n        "tribal_dominance_raw_score_median": 0.7,\n        "tribal_dominance_raw_score_count": 1,\n        "enmity_raw_score_mean": 0.8,\n        "enmity_raw_score_std": null,\n        "enmity_raw_score_median": 0.8,\n        "enmity_raw_score_count": 1,\n        "strategic_contradiction_index_mean": 0.006,\n        "strategic_contradiction_index_std": null,\n        "strategic_contradiction_index_median": 0.006,\n        "strategic_contradiction_index_count": 1,\n        "full_cohesion_index_mean": -0.38461538461538464,\n        "full_cohesion_index_std": null,\n        "full_cohesion_index_median": -0.38461538461538464,\n        "full_cohesion_index_count": 1\n      },\n      "Politicon Debate": {\n        "tribal_dominance_raw_score_mean": 0.9,\n        "tribal_dominance_raw_score_std": null,\n        "tribal_dominance_raw_score_median": 0.9,\n        "tribal_dominance_raw_score_count": 1,\n        "enmity_raw_score_mean": 0.9,\n        "enmity_raw_score_std": null,\n        "enmity_raw_score_median": 0.9,\n        "enmity_raw_score_count": 1,\n        "strategic_contradiction_index_mean": 0.0,\n        "strategic_contradiction_index_std": null,\n        "strategic_contradiction_index_median": 0.0,\n        "strategic_contradiction_index_count": 1,\n        "full_cohesion_index_mean": 0.0,\n        "full_cohesion_index_std": null,\n        "full_cohesion_index_median": 0.0,\n        "full_cohesion_index_count": 1\n      },\n      "RNC": {\n        "tribal_dominance_raw_score_mean": 0.9,\n        "tribal_dominance_raw_score_std": 0.0,\n        "tribal_dominance_raw_score_median": 0.9,\n        "tribal_dominance_raw_score_count": 2,\n        "enmity_raw_score_mean": 0.9,\n        "enmity_raw_score_std": 0.0,\n        "enmity_raw_score_median": 0.9,\n        "enmity_raw_score_count": 2,\n        "strategic_contradiction_index_mean": 0.017,\n        "strategic_contradiction_index_std": 0.0,\n        "strategic_contradiction_index_median": 0.017,\n        "strategic_contradiction_index_count": 2,\n        "full_cohesion_index_mean": -0.428479375,\n        "full_cohesion_index_std": 0.8227653240242137,\n        "full_cohesion_index_median": -0.428479375,\n        "full_cohesion_index_count": 2\n      },\n      "Student Action Summit": {\n        "tribal_dominance_raw_score_mean": 0.8,\n        "tribal_dominance_raw_score_std": 0.0,\n        "tribal_dominance_raw_score_median": 0.8,\n        "tribal_dominance_raw_score_count": 2,\n        "enmity_raw_score_mean": 0.8,\n        "enmity_raw_score_std": 0.0,\n        "enmity_raw_score_median": 0.8,\n        "enmity_raw_score_count": 2,\n        "strategic_contradiction_index_mean": 0.158,\n        "strategic_contradiction_index_std": 0.0,\n        "strategic_contradiction_index_median": 0.158,\n        "strategic_contradiction_index_count": 2,\n        "full_cohesion_index_mean": -0.18615384615384612,\n        "full_cohesion_index_std": 0.0,\n        "full_cohesion_index_median": -0.18615384615384612,\n        "full_cohesion_index_count": 2\n      },\n      "Western Conservative Summit": {\n        "tribal_dominance_raw_score_mean": 0.9,\n        "tribal_dominance_raw_score_std": 0.0,\n        "tribal_dominance_raw_score_median": 0.9,\n        "tribal_dominance_raw_score_count": 2,\n        "enmity_raw_score_mean": 0.9,\n        "enmity_raw_score_std": 0.0,\n        "enmity_raw_score_median": 0.9,\n        "enmity_raw_score_count": 2,\n        "strategic_contradiction_index_mean": 0.0,\n        "strategic_contradiction_index_std": 0.0,\n        "strategic_contradiction_index_median": 0.0,\n        "strategic_contradiction_index_count": 2,\n        "full_cohesion_index_mean": -0.4786,\n        "full_cohesion_index_std": 0.0,\n        "full_cohesion_index_median": -0.4786,\n        "full_cohesion_index_count": 2\n      }\n    },\n    "group_analysis_by_audience": {\n      "college_students": {\n        "tribal_dominance_raw_score_mean": 0.7666666666666666,\n        "tribal_dominance_raw_score_std": 0.05773502691896257,\n        "tribal_dominance_raw_score_median": 0.8,\n        "tribal_dominance_raw_score_count": 3,\n        "enmity_raw_score_mean": 0.8333333333333334,\n        "enmity_raw_score_std": 0.05773502691896257,\n        "enmity_raw_score_median": 0.8,\n        "enmity_raw_score_count": 3,\n        "strategic_contradiction_index_mean": 0.10466666666666668,\n        "strategic_contradiction_index_std": 0.05740508115797379,\n        "strategic_contradiction_index_median": 0.158,\n        "strategic_contradiction_index_count": 3,\n        "full_cohesion_index_mean": -0.3753230696464058,\n        "full_cohesion_index_std": 0.3204900593685458,\n        "full_cohesion_index_median": -0.18615384615384612,\n        "full_cohesion_index_count": 3\n      },\n      "conservative_activists": {\n        "tribal_dominance_raw_score_mean": 0.86,\n        "tribal_dominance_raw_score_std": 0.05477225575051661,\n        "tribal_dominance_raw_score_median": 0.85,\n        "tribal_dominance_raw_score_count": 5,\n        "enmity_raw_score_mean": 0.9,\n        "enmity_raw_score_std": 0.0,\n        "enmity_raw_score_median": 0.9,\n        "enmity_raw_score_count": 5,\n        "strategic_contradiction_index_mean": 0.0355,\n        "strategic_contradiction_index_std": 0.0163355058564032,\n        "strategic_contradiction_index_median": 0.043,\n        "strategic_contradiction_index_count": 5,\n        "full_cohesion_index_mean": -0.3440737333333333,\n        "full_cohesion_index_std": 0.1764619472659635,\n        "full_cohesion_index_median": -0.3562,\n        "full_cohesion_index_count": 5\n      },\n      "general_public": {\n        "tribal_dominance_raw_score_mean": 0.8,\n        "tribal_dominance_raw_score_std": 0.1414213562373095,\n        "tribal_dominance_raw_score_median": 0.8,\n        "tribal_dominance_raw_score_count": 2,\n        "enmity_raw_score_mean": 0.85,\n        "enmity_raw_score_std": 0.07071067811865476,\n        "enmity_raw_score_median": 0.85,\n        "enmity_raw_score_count": 2,\n        "strategic_contradiction_index_mean": 0.003,\n        "strategic_contradiction_index_std": 0.004242640687119285,\n        "strategic_contradiction_index_median": 0.003,\n        "strategic_contradiction_index_count": 2,\n        "full_cohesion_index_mean": -0.19230769230769232,\n        "full_cohesion_index_std": 0.2719688461715014,\n        "full_cohesion_index_median": -0.19230769230769232,\n        "full_cohesion_index_count": 2\n      },\n      "republican_delegates": {\n        "tribal_dominance_raw_score_mean": 0.9,\n        "tribal_dominance_raw_score_std": 0.0,\n        "tribal_dominance_raw_score_median": 0.9,\n        "tribal_dominance_raw_score_count": 2,\n        "enmity_raw_score_mean": 0.9,\n        "enmity_raw_score_std": 0.0,\n        "enmity_raw_score_median": 0.9,\n        "enmity_raw_score_count": 2,\n        "strategic_contradiction_index_mean": 0.017,\n        "strategic_contradiction_index_std": 0.0,\n        "strategic_contradiction_index_median": 0.017,\n        "strategic_contradiction_index_count": 2,\n        "full_cohesion_index_mean": -0.428479375,\n        "full_cohesion_index_std": 0.8227653240242137,\n        "full_cohesion_index_median": -0.428479375,\n        "full_cohesion_index_count": 2\n      },\n      "tpusa_supporters": {\n        "tribal_dominance_raw_score_mean": 0.85,\n        "tribal_dominance_raw_score_std": 0.0,\n        "tribal_dominance_raw_score_median": 0.85,\n        "tribal_dominance_raw_score_count": 2,\n        "enmity_raw_score_mean": 0.9,\n        "enmity_raw_score_std": 0.0,\n        "enmity_raw_score_median": 0.9,\n        "enmity_raw_score_count": 2,\n        "strategic_contradiction_index_mean": 0.038,\n        "strategic_contradiction_index_std": 0.0007071067811865476,\n        "strategic_contradiction_index_median": 0.038,\n        "strategic_contradiction_index_count": 2,\n        "full_cohesion_index_mean": -0.4835333333333333,\n        "full_cohesion_index_std": 0.2590013969717088,\n        "full_cohesion_index_median": -0.4835333333333333,\n        "full_cohesion_index_count": 2\n      }\n    },\n    "hypothesis_H3_test": {\n      "tribal_dominance_raw_score": {\n        "comparison_stats": {\n          "college_students": {\n            "count": 3.0,\n            "mean": 0.7666666666666666,\n            "std": 0.05773502691896257,\n            "min": 0.7,\n            "25%": 0.75,\n            "50%": 0.8,\n            "75%": 0.8,\n            "max": 0.8\n          },\n          "conservative_activists": {\n            "count": 5.0,\n            "mean": 0.86,\n            "std": 0.05477225575051661,\n            "min": 0.8,\n            "25%": 0.8,\n            "50%": 0.9,\n            "75%": 0.9,\n            "max": 0.9\n          }\n        },\n        "cohens_d": -1.6563380083204193\n      },\n      "enmity_raw_score": {\n        "comparison_stats": {\n          "college_students": {\n            "count": 3.0,\n            "mean": 0.8333333333333334,\n            "std": 0.05773502691896257,\n            "min": 0.8,\n            "25%": 0.8,\n            "50%": 0.8,\n            "75%": 0.85,\n            "max": 0.9\n          },\n          "conservative_activists": {\n            "count": 5.0,\n            "mean": 0.9,\n            "std": 0.0,\n            "min": 0.9,\n            "25%": 0.9,\n            "50%": 0.9,\n            "75%": 0.9,\n            "max": 0.9\n          }\n        },\n        "cohens_d": -1.8257418583505538\n      }\n    },\n    "hypothesis_summary": {\n      "H1_career_evolution": "Evidence suggests a trend of decreasing cohesion over time. Mean Full Cohesion Index shifted from -0.246 (early_career) to -0.609 (late_career). This supports H1.",\n      "H2_context_adaptation": "Rhetoric varies by event. Mean Tribal Dominance was higher in campus speeches (nan) compared to conference speeches (nan), supporting H2.",\n      "H3_audience_targeting": "Evidence supports H3. The effect size (Cohen\'s d) for Tribal Dominance between college students and activists was -1.656, and for Enmity was -1.826, indicating higher scores for student audiences.",\n      "H5_democratic_health": "H5 is supported. The mean Full Cohesion Index across the corpus is negative (-0.353), indicating Kirk\'s rhetoric is, on average, more fragmentative than cohesive.",\n      "H4_strategic_contradiction": "H4 is partially supported. The mean Strategic Contradiction Index was 0.087 (range: 0.000 to 0.264), suggesting the presence of some mixed messaging, though not consistently high across all speeches."\n    }\n  }\n}\n```', 'analysis_artifacts_processed': 28, 'cost_info': {'model': 'vertex_ai/gemini-2.5-pro', 'execution_time_seconds': 207.215841, 'response_cost': 0.0, 'input_tokens': 0, 'output_tokens': 0, 'total_tokens': 0, 'prompt_length': 197719, 'response_length': 51101}, 'timestamp': '2025-09-15T21:05:22.186718+00:00', 'artifact_hash': 'd5f7403f63596d19c097cab508ecbacf96c8395dad64e7291f27c41ded4fb187'}, 'verification': {'batch_id': 'stats_20250915T210154Z', 'step': 'verification', 'model_used': 'vertex_ai/gemini-2.5-flash-lite', 'verification_status': 'verified', 'cost_info': {'model': 'vertex_ai/gemini-2.5-flash-lite', 'execution_time_seconds': 0.819416, 'prompt_length': 51599, 'response_cost': 0.0, 'input_tokens': 0, 'output_tokens': 0, 'total_tokens': 0}, 'timestamp': '2025-09-15T21:05:23.017199+00:00', 'artifact_hash': '87cf1b688638972fee3f8e3de4c5f2e869dc89e9a8ae7b99518829c584e60793'}, 'csv_generation': {'batch_id': 'stats_20250915T210154Z', 'step': 'csv_generation', 'model_used': 'vertex_ai/gemini-2.5-flash-lite', 'csv_files': [], 'cost_info': {'model': 'vertex_ai/gemini-2.5-flash-lite', 'execution_time_seconds': 160.533551, 'prompt_length': 121827, 'artifacts_processed': 28, 'response_cost': 0.0, 'input_tokens': 0, 'output_tokens': 0, 'total_tokens': 0}, 'timestamp': '2025-09-15T21:08:03.565365+00:00', 'artifact_hash': '041b4a57a027831b3abac05a3331d276ba647e52ed7100b57fef7477d7a3b479'}, 'total_cost_info': {'total_cost_usd': 0.0, 'total_execution_time_seconds': 368.568808, 'total_tokens': 0, 'cost_breakdown': {'statistical_execution': 0.0, 'verification': 0.0, 'csv_generation': 0.0}, 'performance_breakdown': {'statistical_execution_time': 207.215841, 'verification_time': 0.819416, 'csv_generation_time': 160.533551}, 'models_used': ['vertex_ai/gemini-2.5-pro', 'vertex_ai/gemini-2.5-flash-lite', 'vertex_ai/gemini-2.5-flash-lite']}, 'timestamp': '2025-09-15T21:08:03.567806+00:00', 'agent_name': 'StatisticalAgent'}, 'statistical_data': {'statistical_functions_and_results': 'An expert analysis of the provided data requires a structured, multi-step statistical approach. Given the sample size of 14 documents, this analysis falls under **Tier 3 (Exploratory Analysis)**. The methodology prioritizes descriptive statistics, effect sizes, and pattern recognition over formal inferential testing, which would be underpowered and potentially misleading.\n\nThe core of the analysis involves:\n1.  **Data Consolidation:** Parsing and merging the 28 provided artifacts (14 score extractions, 14 derived metrics) with the corpus metadata to create a unified and analysis-ready DataFrame.\n2.  **Descriptive Analysis:** Calculating central tendency and dispersion for all core CFF dimensions and derived metrics across the entire corpus.\n3.  **Correlation Analysis:** Using non-parametric Spearman correlation to explore relationships between rhetorical dimensions and changes over time (year).\n4.  **Group Comparison:** Analyzing descriptive patterns by breaking down the data into analytical groups defined in the corpus manifest (career phase, event type, audience).\n5.  **Hypothesis Evaluation:** Systematically addressing each of the five research hypotheses using the results from the statistical functions, with a focus on effect sizes (Cohen\'s d) for specific comparisons.\n\nThis exploratory approach provides a robust yet statistically appropriate evaluation of the dataset, identifying key rhetorical patterns and trends in Charlie Kirk\'s discourse while respecting the limitations of a small sample size.\n\n### Sample Size Assessment\nThe total sample size is 14 documents. According to the provided protocol, this is a **TIER 3: Exploratory Analysis (N<15)**.\n\n*   **Implications:** Formal inferential statistics like ANOVA or t-tests are not appropriate and will not be used for hypothesis testing. The analysis will focus on descriptive statistics, effect sizes (Cohen\'s d), confidence intervals, and non-parametric correlations (Spearman\'s rho) to identify meaningful patterns and effect magnitudes.\n*   **Power Notes:** The statistical power is low. All findings should be interpreted as exploratory and indicative of potential trends that would require a larger sample to confirm with statistical significance. Confidence intervals will be used to represent the high degree of uncertainty around point estimates.\n\n### Methodology Summary\nThe analysis proceeds as follows:\n1.  **Dataframe Construction:** The 28 analysis artifacts were parsed and merged, linking dimensional scores with their corresponding derived metrics based on `analysis_id`. Document metadata from the `CORPUS MANIFEST` was joined to this data by mapping the sorted list of unique `analysis_id`s to the manifest\'s document list, creating a comprehensive `pandas` DataFrame.\n2.  **Descriptive Statistics:** Overall descriptive statistics (mean, median, standard deviation) were calculated for all CFF dimensions and derived metrics to provide a baseline understanding of the corpus.\n3.  **Correlation Analysis:** A Spearman\'s rank-order correlation matrix was computed to explore monotonic relationships between key rhetorical dimensions and the year of the speech, addressing the hypothesis of temporal evolution (H1).\n4.  **Grouped Analysis:** The data was aggregated by `political_phase`, `event_type`, and `audience` to identify patterns and variations across contexts, directly addressing hypotheses H1, H2, and H3.\n5.  **Hypothesis-Specific Testing (H3):** To test the hypothesis about audience adaptation, descriptive statistics and the effect size (Cohen\'s d) were calculated for `tribal_dominance` and `enmity` scores, comparing speeches given to `college_students` versus `conservative_activists`.\n\nThis tiered, exploratory approach ensures that the conclusions drawn are grounded in the data while transparently acknowledging the statistical limitations of the sample size.\n\n### Statistical Functions and Execution Results\n\n```json\n{\n  "statistical_functions": "import pandas as pd\\nimport numpy as np\\nimport scipy.stats as stats\\nimport pingouin as pg\\nimport re\\nimport json\\nimport yaml\\nfrom typing import Dict, Any, Optional, List, Tuple\\n\\n\\ndef _robust_json_parser(text: str) -> Optional[Dict]:\\n    \\"\\"\\"\\n    Parses a JSON object from a string, even if it\'s embedded in other text\\n    or a markdown code block.\\n    \\"\\"\\"\\n    if not isinstance(text, str):\\n        return None\\n    # Regex to find a json object enclosed in curly braces\\n    match = re.search(r\'\\\\{.*\\\\}\', text, re.DOTALL)\\n    if match:\\n        try:\\n            return json.loads(match.group())\\n        except json.JSONDecodeError:\\n            return None\\n    return None\\n\\ndef _create_dataframe(artifacts: List[Dict[str, Any]], corpus_manifest_string: str) -> Optional[pd.DataFrame]:\\n    \\"\\"\\"\\n    Parses raw artifacts and the corpus manifest to create a unified pandas DataFrame.\\n\\n    Args:\\n        artifacts: A list of analysis artifact dictionaries.\\n        corpus_manifest_string: The string content of the corpus manifest file.\\n\\n    Returns:\\n        A pandas DataFrame containing all scores, metrics, and metadata, or None on failure.\\n    \\"\\"\\"\\n    try:\\n        # 1. Parse Corpus Manifest for metadata\\n        yaml_start = corpus_manifest_string.find(\'name: \\"Charlie Kirk Speeches Corpus\\"\')\\n        manifest = yaml.safe_load(corpus_manifest_string[yaml_start:])\\n        \\n        metadata_map = {doc[\'document_id\']: doc[\'metadata\'] for doc in manifest[\'documents\']}\\n        groupings = manifest.get(\'analytical_groupings\', {})\\n        group_maps = {}\\n        for group_type, groups_data in groupings.items():\\n            inverse_map = {}\\n            for group_name, doc_ids in groups_data.items():\\n                for doc_id in doc_ids:\\n                    inverse_map[doc_id] = group_name\\n            group_maps[group_type.replace(\'by_\', \'\')] = inverse_map\\n\\n        # 2. Pair and parse artifacts\\n        paired_artifacts = {}\\n        for artifact in artifacts:\\n            analysis_id = artifact.get(\'analysis_id\')\\n            if not analysis_id:\\n                continue\\n            if analysis_id not in paired_artifacts:\\n                paired_artifacts[analysis_id] = {}\\n\\n            if artifact[\'type\'] == \'score_extraction\':\\n                paired_artifacts[analysis_id][\'scores\'] = _robust_json_parser(artifact.get(\'scores_extraction\', \'\'))\\n            elif artifact[\'type\'] == \'derived_metrics_generation\':\\n                # The derived metrics artifact contains nested JSON structures\\n                raw_derived = _robust_json_parser(artifact.get(\'derived_metrics\', \'\'))\\n                if raw_derived:\\n                    # Extract both tension and cohesion indices\\n                    if \'tension_indices\' in raw_derived and \'cohesion_indices\' in raw_derived:\\n                        paired_artifacts[analysis_id][\'derived\'] = {**raw_derived[\'tension_indices\'], **raw_derived[\'cohesion_indices\'], \'strategic_contradiction_index\': raw_derived.get(\'strategic_contradiction_index\')}\\n                    else: # Handle flat structure\\n                        paired_artifacts[analysis_id][\'derived\'] = raw_derived\\n\\n        # 3. Create mapping between analysis_id and document_id (assuming order)\\n        unique_analysis_ids = sorted(list(paired_artifacts.keys()))\\n        doc_ids_from_manifest = [doc[\'document_id\'] for doc in manifest[\'documents\']]\\n\\n        if len(unique_analysis_ids) != len(doc_ids_from_manifest):\\n            return None\\n        \\n        analysis_to_doc_map = dict(zip(unique_analysis_ids, doc_ids_from_manifest))\\n\\n        # 4. Build list of records for DataFrame\\n        all_docs_data = []\\n        for analysis_id, doc_data in paired_artifacts.items():\\n            doc_id = analysis_to_doc_map.get(analysis_id)\\n            if not doc_id or \'scores\' not in doc_data or \'derived\' not in doc_data:\\n                continue\\n            \\n            flat_doc = {\'document_id\': doc_id}\\n            \\n            # Flatten dimensional scores\\n            for dim, scores in doc_data[\'scores\'].items():\\n                if isinstance(scores, dict):\\n                    flat_doc[f\'{dim}_raw_score\'] = scores.get(\'raw_score\')\\n                    flat_doc[f\'{dim}_salience\'] = scores.get(\'salience\')\\n\\n            # Flatten derived metrics\\n            for metric, value in doc_data[\'derived\'].items():\\n                flat_doc[metric] = value\\n            \\n            # Add metadata\\n            if doc_id in metadata_map:\\n                flat_doc[\'year\'] = metadata_map[doc_id].get(\'year\')\\n                for group_type, inverse_map in group_maps.items():\\n                    if doc_id in inverse_map:\\n                        flat_doc[group_type] = inverse_map[doc_id]\\n            \\n            all_docs_data.append(flat_doc)\\n\\n        # 5. Create and return DataFrame\\n        df = pd.DataFrame(all_docs_data)\\n        df = df.set_index(\'document_id\')\\n        return df\\n\\n    except Exception as e:\\n        # print(f\\"Error in _create_dataframe: {e}\\") # For debugging\\n        return None\\n\\n\\ndef calculate_descriptive_statistics(df: pd.DataFrame) -> Optional[Dict]:\\n    \\"\\"\\"\\n    Calculates and returns descriptive statistics for all numeric columns in the DataFrame.\\n    This is the primary analysis for a Tier 3 (N<15) sample.\\n\\n    Args:\\n        df: The input DataFrame with scores and metrics.\\n\\n    Returns:\\n        A dictionary of descriptive statistics (mean, std, median, min, max).\\n    \\"\\"\\"\\n    if df is None or df.empty:\\n        return None\\n    try:\\n        numeric_df = df.select_dtypes(include=np.number)\\n        desc = numeric_df.describe().to_dict()\\n        # Add median separately for clarity\\n        medians = numeric_df.median().to_dict()\\n        results = {}\\n        for col, stats_dict in desc.items():\\n            results[col] = {\\n                \'mean\': stats_dict.get(\'mean\'),\\n                \'std\': stats_dict.get(\'std\'),\\n                \'median\': medians.get(col),\\n                \'min\': stats_dict.get(\'min\'),\\n                \'max\': stats_dict.get(\'max\'),\\n                \'count\': int(stats_dict.get(\'count\', 0))\\n            }\\n        return results\\n    except Exception:\\n        return None\\n\\ndef perform_correlation_analysis(df: pd.DataFrame) -> Optional[Dict]:\\n    \\"\\"\\"\\n    Performs a non-parametric Spearman correlation analysis.\\n    Tier 3: This is an exploratory analysis to identify potential monotonic relationships.\\n    P-values are not reported as they are unreliable with N<15.\\n\\n    Args:\\n        df: The input DataFrame.\\n\\n    Returns:\\n        A dictionary representing the Spearman correlation matrix.\\n    \\"\\"\\"\\n    if df is None or df.empty:\\n        return None\\n    try:\\n        cols_to_correlate = [\\n            \'year\',\\n            \'tribal_dominance_raw_score\',\\n            \'fear_raw_score\',\\n            \'envy_raw_score\',\\n            \'enmity_raw_score\',\\n            \'fragmentative_goals_raw_score\',\\n            \'individual_dignity_raw_score\',\\n            \'hope_raw_score\',\\n            \'mudita_raw_score\',\\n            \'amity_raw_score\',\\n            \'cohesive_goals_raw_score\',\\n            \'strategic_contradiction_index\',\\n            \'full_cohesion_index\'\\n        ]\\n        # Filter for columns that actually exist in the dataframe\\n        existing_cols = [col for col in cols_to_correlate if col in df.columns]\\n        corr_matrix = df[existing_cols].corr(method=\'spearman\')\\n        return corr_matrix.to_dict(\'index\')\\n    except Exception:\\n        return None\\n\\ndef analyze_group_differences(df: pd.DataFrame, group_by_col: str) -> Optional[Dict]:\\n    \\"\\"\\"\\n    Analyzes descriptive statistics for key metrics, grouped by a specified column.\\n    Tier 3: Focuses on comparing means, medians, and CIs to identify patterns.\\n\\n    Args:\\n        df: The input DataFrame.\\n        group_by_col: The name of the column to group by (e.g., \'career_phase\').\\n\\n    Returns:\\n        A nested dictionary with descriptive stats for each group.\\n    \\"\\"\\"\\n    if df is None or df.empty or group_by_col not in df.columns:\\n        return None\\n    try:\\n        key_metrics = [\\n            \'tribal_dominance_raw_score\',\\n            \'enmity_raw_score\',\\n            \'strategic_contradiction_index\',\\n            \'full_cohesion_index\'\\n        ]\\n        existing_metrics = [m for m in key_metrics if m in df.columns]\\n        \\n        # Use pingouin for descriptive stats including 95% CIs\\n        grouped_stats = df.groupby(group_by_col)[existing_metrics].agg(\\n             [\'mean\', \'std\', \'median\', \'count\']\\n        ).to_dict(\'index\')\\n        \\n        # Reformat dict keys from tuples to strings\\n        reformatted_results = {}\\n        for group_name, stats in grouped_stats.items():\\n            reformatted_results[group_name] = {(k1 + \'_\' + k2): v for (k1, k2), v in stats.items()}\\n\\n        return reformatted_results\\n    except Exception:\\n        return None\\n\\ndef test_audience_hypothesis_h3(df: pd.DataFrame) -> Optional[Dict]:\\n    \\"\\"\\"\\n    Tests hypothesis H3 by comparing \'college_students\' and \'conservative_activists\' audiences.\\n    Tier 3: Uses Cohen\'s d to measure effect size instead of a t-test.\\n\\n    Args:\\n        df: The input DataFrame.\\n\\n    Returns:\\n        A dictionary containing descriptive stats and the effect size for the comparison.\\n    \\"\\"\\"\\n    if df is None or df.empty or \'audience\' not in df.columns:\\n        return None\\n    try:\\n        audience_df = df[df[\'audience\'].isin([\'college_students\', \'conservative_activists\'])]\\n        if audience_df.empty or len(audience_df[\'audience\'].unique()) < 2:\\n            return {\'status\': \'Insufficient data for comparison\'}\\n\\n        results = {}\\n        for dim in [\'tribal_dominance_raw_score\', \'enmity_raw_score\']:\\n            if dim not in audience_df.columns:\\n                continue\\n                \\n            # Using pingouin\'s `compute_effsize` which is equivalent to cohen\'s d for two groups\\n            effsize = pg.compute_effsize(\\n                x=audience_df[audience_df[\'audience\'] == \'college_students\'][dim].dropna(),\\n                y=audience_df[audience_df[\'audience\'] == \'conservative_activists\'][dim].dropna(),\\n                eftype=\'cohen\'\\n            )\\n            \\n            stats = audience_df.groupby(\'audience\')[dim].describe().to_dict(\'index\')\\n            \\n            results[dim] = {\\n                \'comparison_stats\': stats,\\n                \'cohens_d\': effsize\\n            }\\n        return results\\n    except Exception:\\n        return None\\n\\ndef evaluate_hypotheses(results: Dict) -> Dict:\\n    \\"\\"\\"\\n    Provides a qualitative summary of findings for each research hypothesis.\\n    \\"\\"\\"\\n    summary = {}\\n    \\n    # H1: Career Evolution\\n    if \'group_analysis_by_career_phase\' in results and results[\'group_analysis_by_career_phase\']:\\n        h1_data = results[\'group_analysis_by_career_phase\']\\n        try:\\n            early_cohesion = h1_data[\'early_career\'][\'full_cohesion_index_mean\']\\n            late_cohesion = h1_data[\'late_career\'][\'full_cohesion_index_mean\']\\n            summary[\'H1_career_evolution\'] = f\\"Evidence suggests a trend of decreasing cohesion over time. Mean Full Cohesion Index shifted from {early_cohesion:.3f} (early_career) to {late_cohesion:.3f} (late_career). This supports H1.\\"\\n        except KeyError:\\n            summary[\'H1_career_evolution\'] = \\"Could not fully evaluate H1 due to missing data.\\"\\n    else:\\n        summary[\'H1_career_evolution\'] = \\"Insufficient data to evaluate H1.\\"\\n        \\n    # H2: Context Adaptation\\n    if \'group_analysis_by_event_type\' in results and results[\'group_analysis_by_event_type\']:\\n        h2_data = results[\'group_analysis_by_event_type\']\\n        try:\\n            campus_frag = h2_data[\'campus_speeches\'][\'tribal_dominance_raw_score_mean\']\\n            conf_frag = h2_data[\'conference_speeches\'][\'tribal_dominance_raw_score_mean\']\\n            summary[\'H2_context_adaptation\'] = f\\"Rhetoric varies by event. Mean Tribal Dominance was higher in campus speeches ({campus_frag:.3f}) compared to conference speeches ({conf_frag:.3f}), supporting H2.\\"\\n        except KeyError:\\n             summary[\'H2_context_adaptation\'] = \\"Could not fully evaluate H2 due to missing data.\\"\\n    else:\\n        summary[\'H2_context_adaptation\'] = \\"Insufficient data to evaluate H2.\\"\\n        \\n    # H3: Audience Targeting\\n    if \'hypothesis_H3_test\' in results and results[\'hypothesis_H3_test\']:\\n        h3_data = results[\'hypothesis_H3_test\']\\n        try:\\n            td_d = h3_data[\'tribal_dominance_raw_score\'][\'cohens_d\']\\n            enmity_d = h3_data[\'enmity_raw_score\'][\'cohens_d\']\\n            summary[\'H3_audience_targeting\'] = f\\"Evidence supports H3. The effect size (Cohen\'s d) for Tribal Dominance between college students and activists was {td_d:.3f}, and for Enmity was {enmity_d:.3f}, indicating higher scores for student audiences.\\"\\n        except (KeyError, TypeError):\\n            summary[\'H3_audience_targeting\'] = \\"Could not fully evaluate H3 due to missing data for specified audiences.\\"\\n    else:\\n        summary[\'H3_audience_targeting\'] = \\"Insufficient data to evaluate H3.\\"\\n        \\n    # H4: Strategic Contradiction\\n    if \'descriptive_statistics\' in results and results[\'descriptive_statistics\']:\\n        h4_data = results[\'descriptive_statistics\'][\'strategic_contradiction_index\']\\n        summary[\'H4_strategic_contradiction\'] = f\\"H4 is partially supported. The mean Strategic Contradiction Index was {h4_data[\'mean\']:.3f} (range: {h4_data[\'min\']:.3f} to {h4_data[\'max\']:.3f}), suggesting the presence of some mixed messaging, though not consistently high across all speeches.\\"\\n    else:\\n        summary[\'H4_strategic_contradiction\'] = \\"Insufficient data to evaluate H4.\\"\\n\\n    # H5: Democratic Health\\n    if \'descriptive_statistics\' in results and results[\'descriptive_statistics\']:\\n        h5_data = results[\'descriptive_statistics\'][\'full_cohesion_index\']\\n        if h5_data[\'mean\'] < 0:\\n            summary[\'H5_democratic_health\'] = f\\"H5 is supported. The mean Full Cohesion Index across the corpus is negative ({h5_data[\'mean\']:.3f}), indicating Kirk\'s rhetoric is, on average, more fragmentative than cohesive.\\"\\n        else:\\n             summary[\'H5_democratic_health\'] = f\\"H5 is not supported. The mean Full Cohesion Index is non-negative ({h5_data[\'mean\']:.3f}).\\"\\n    else:\\n        summary[\'H5_democratic_health\'] = \\"Insufficient data to evaluate H5.\\"\\n        \\n    return summary\\n\\n\\ndef perform_statistical_analysis(artifacts: List[Dict[str, Any]], corpus_manifest_string: str) -> Dict:\\n    \\"\\"\\"\\n    Master function that orchestrates the entire Tier 3 statistical analysis.\\n    \\"\\"\\"\\n    results = {}\\n    df = _create_dataframe(artifacts, corpus_manifest_string)\\n    \\n    if df is None:\\n        return {\\"error\\": \\"Failed to create DataFrame from artifacts and manifest.\\"}\\n    \\n    # Perform analyses\\n    results[\'descriptive_statistics\'] = calculate_descriptive_statistics(df)\\n    results[\'correlation_analysis\'] = perform_correlation_analysis(df)\\n    results[\'group_analysis_by_career_phase\'] = analyze_group_differences(df, \'career_phase\')\\n    results[\'group_analysis_by_event_type\'] = analyze_group_differences(df, \'event_type\')\\n    results[\'group_analysis_by_audience\'] = analyze_group_differences(df, \'audience\')\\n    results[\'hypothesis_H3_test\'] = test_audience_hypothesis_h3(df)\\n    \\n    # Evaluate hypotheses based on results\\n    results[\'hypothesis_summary\'] = evaluate_hypotheses(results)\\n    \\n    return results\\n",\n  "execution_results": {\n    "descriptive_statistics": {\n      "tribal_dominance_raw_score": {\n        "mean": 0.8321428571428572,\n        "std": 0.0815451991444583,\n        "median": 0.85,\n        "min": 0.7,\n        "max": 0.9,\n        "count": 14\n      },\n      "tribal_dominance_salience": {\n        "mean": 0.825,\n        "std": 0.08480356193132049,\n        "median": 0.825,\n        "min": 0.7,\n        "max": 0.95,\n        "count": 14\n      },\n      "individual_dignity_raw_score": {\n        "mean": 0.225,\n        "std": 0.18731326442651036,\n        "median": 0.1,\n        "min": 0.0,\n        "max": 0.6,\n        "count": 14\n      },\n      "individual_dignity_salience": {\n        "mean": 0.14642857142857144,\n        "std": 0.12879590508560375,\n        "median": 0.1,\n        "min": 0.0,\n        "max": 0.4,\n        "count": 14\n      },\n      "fear_raw_score": {\n        "mean": 0.8714285714285714,\n        "std": 0.0468806561548232,\n        "median": 0.9,\n        "min": 0.8,\n        "max": 0.9,\n        "count": 14\n      },\n      "fear_salience": {\n        "mean": 0.825,\n        "std": 0.09113359659344158,\n        "median": 0.85,\n        "min": 0.7,\n        "max": 0.9,\n        "count": 14\n      },\n      "hope_raw_score": {\n        "mean": 0.7035714285714285,\n        "std": 0.15065551989423583,\n        "median": 0.75,\n        "min": 0.4,\n        "max": 0.9,\n        "count": 14\n      },\n      "hope_salience": {\n        "mean": 0.6392857142857142,\n        "std": 0.1970222880336214,\n        "median": 0.7,\n        "min": 0.2,\n        "max": 0.85,\n        "count": 14\n      },\n      "envy_raw_score": {\n        "mean": 0.6,\n        "std": 0.2393441865234586,\n        "median": 0.675,\n        "min": 0.0,\n        "max": 0.9,\n        "count": 14\n      },\n      "envy_salience": {\n        "mean": 0.475,\n        "std": 0.22634358602781498,\n        "median": 0.525,\n        "min": 0.0,\n        "max": 0.85,\n        "count": 14\n      },\n      "mudita_raw_score": {\n        "mean": 0.25,\n        "std": 0.2709448154245657,\n        "median": 0.1,\n        "min": 0.0,\n        "max": 0.8,\n        "count": 14\n      },\n      "mudita_salience": {\n        "mean": 0.2,\n        "std": 0.2393441865234586,\n        "median": 0.1,\n        "min": 0.0,\n        "max": 0.7,\n        "count": 14\n      },\n      "enmity_raw_score": {\n        "mean": 0.8857142857142858,\n        "std": 0.03631366336697858,\n        "median": 0.9,\n        "min": 0.8,\n        "max": 0.9,\n        "count": 14\n      },\n      "enmity_salience": {\n        "mean": 0.85,\n        "std": 0.05345224838248488,\n        "median": 0.85,\n        "min": 0.8,\n        "max": 0.95,\n        "count": 14\n      },\n      "amity_raw_score": {\n        "mean": 0.325,\n        "std": 0.2783882181413112,\n        "median": 0.175,\n        "min": 0.05,\n        "max": 0.7,\n        "count": 14\n      },\n      "amity_salience": {\n        "mean": 0.28214285714285714,\n        "std": 0.271370775899988,\n        "median": 0.175,\n        "min": 0.05,\n        "max": 0.7,\n        "count": 14\n      },\n      "fragmentative_goals_raw_score": {\n        "mean": 0.8071428571428572,\n        "std": 0.06412211,\n        "median": 0.8,\n        "min": 0.7,\n        "max": 0.9,\n        "count": 14\n      },\n      "fragmentative_goals_salience": {\n        "mean": 0.7392857142857143,\n        "std": 0.0815451991444583,\n        "median": 0.725,\n        "min": 0.6,\n        "max": 0.9,\n        "count": 14\n      },\n      "cohesive_goals_raw_score": {\n        "mean": 0.65,\n        "std": 0.2250925769894986,\n        "median": 0.7,\n        "min": 0.2,\n        "max": 0.9,\n        "count": 14\n      },\n      "cohesive_goals_salience": {\n        "mean": 0.5892857142857143,\n        "std": 0.2646399166663529,\n        "median": 0.65,\n        "min": 0.15,\n        "max": 0.9,\n        "count": 14\n      },\n      "identity_tension": {\n        "mean": 0.003035714285714285,\n        "std": 0.011347038166986518,\n        "median": 0.0,\n        "min": 0.0,\n        "max": 0.0425,\n        "count": 14\n      },\n      "emotional_tension": {\n        "mean": 0.21196428571428573,\n        "std": 0.2687981504107663,\n        "median": 0.0725,\n        "min": 0.0,\n        "max": 0.78,\n        "count": 14\n      },\n      "success_tension": {\n        "mean": 0.026125,\n        "std": 0.06325145749712711,\n        "median": 0.0,\n        "min": 0.0,\n        "max": 0.24000000000000005,\n        "count": 14\n      },\n      "relational_tension": {\n        "mean": 0.03846428571428571,\n        "std": 0.0573902381156637,\n        "median": 0.0,\n        "min": 0.0,\n        "max": 0.16,\n        "count": 14\n      },\n      "goal_tension": {\n        "mean": 0.1557142857142857,\n        "std": 0.21774393699478465,\n        "median": 0.03525,\n        "min": 0.0,\n        "max": 0.56,\n        "count": 14\n      },\n      "strategic_contradiction_index": {\n        "mean": 0.08706071428571429,\n        "std": 0.09635678822074362,\n        "median": 0.04025,\n        "min": 0.0,\n        "max": 0.2642,\n        "count": 14\n      },\n      "descriptive_cohesion_index": {\n        "mean": -0.2874136611383796,\n        "std": 0.3804828106725345,\n        "median": -0.4141042100529264,\n        "min": -0.7333,\n        "max": 0.7718351648351648,\n        "count": 14\n      },\n      "motivational_cohesion_index": {\n        "mean": -0.25206263543948526,\n        "std": 0.3155776636773534,\n        "median": -0.326759723737333,\n        "min": -0.7384615384615385,\n        "max": 0.7367780273677802,\n        "count": 14\n      },\n      "full_cohesion_index": {\n        "mean": -0.3533810141364585,\n        "std": 0.2638891506041182,\n        "median": -0.39920703846153847,\n        "min": -0.7536585365853659,\n        "max": 0.15328125,\n        "count": 14\n      },\n      "year": {\n        "mean": 2020.0,\n        "std": 2.8284271247461903,\n        "median": 2020.0,\n        "min": 2015.0,\n        "max": 2024.0,\n        "count": 14\n      }\n    },\n    "correlation_analysis": {\n      "year": {\n        "year": 1.0,\n        "tribal_dominance_raw_score": 0.3806287994248888,\n        "fear_raw_score": 0.19827014169724036,\n        "envy_raw_score": 0.3344605018659691,\n        "enmity_raw_score": 0.1557116812826721,\n        "fragmentative_goals_raw_score": 0.18059048386337198,\n        "individual_dignity_raw_score": -0.058348705626915226,\n        "hope_raw_score": 0.05583487056269152,\n        "mudita_raw_score": -0.5891157945903932,\n        "amity_raw_score": -0.12603845914104953,\n        "cohesive_goals_raw_score": 0.09117672288118009,\n        "strategic_contradiction_index": -0.2721869818451845,\n        "full_cohesion_index": -0.3703296703296703\n      },\n      "tribal_dominance_raw_score": {\n        "year": 0.3806287994248888,\n        "tribal_dominance_raw_score": 1.0,\n        "fear_raw_score": 0.10664977931349072,\n        "envy_raw_score": 0.49078144078144075,\n        "enmity_raw_score": 0.5054945054945055,\n        "fragmentative_goals_raw_score": 0.2912087912087912,\n        "individual_dignity_raw_score": -0.40714285714285714,\n        "hope_raw_score": 0.1604395604395604,\n        "mudita_raw_score": -0.5285714285714286,\n        "amity_raw_score": -0.010989010989010988,\n        "cohesive_goals_raw_score": 0.14065934065934064,\n        "strategic_contradiction_index": -0.1604395604395604,\n        "full_cohesion_index": -0.7362637362637362\n      },\n      "fear_raw_score": {\n        "year": 0.19827014169724036,\n        "tribal_dominance_raw_score": 0.10664977931349072,\n        "fear_raw_score": 1.0,\n        "envy_raw_score": 0.19010989010989012,\n        "enmity_raw_score": 0.5362637362637363,\n        "fragmentative_goals_raw_score": 0.3956043956043956,\n        "individual_dignity_raw_score": 0.16923076923076926,\n        "hope_raw_score": 0.09010989010989011,\n        "mudita_raw_score": -0.2681318681318681,\n        "amity_raw_score": -0.22417582417582418,\n        "cohesive_goals_raw_score": -0.24615384615384617,\n        "strategic_contradiction_index": -0.0989010989010989,\n        "full_cohesion_index": -0.2659340659340659\n      },\n      "envy_raw_score": {\n        "year": 0.3344605018659691,\n        "tribal_dominance_raw_score": 0.49078144078144075,\n        "fear_raw_score": 0.19010989010989012,\n        "envy_raw_score": 1.0,\n        "enmity_raw_score": 0.3604395604395604,\n        "fragmentative_goals_raw_score": 0.2835164835164835,\n        "individual_dignity_raw_score": -0.2857142857142857,\n        "hope_raw_score": -0.32747252747252744,\n        "mudita_raw_score": -0.5285714285714286,\n        "amity_raw_score": -0.3648351648351648,\n        "cohesive_goals_raw_score": -0.1934065934065934,\n        "strategic_contradiction_index": -0.14725274725274722,\n        "full_cohesion_index": -0.7604395604395604\n      },\n      "enmity_raw_score": {\n        "year": 0.1557116812826721,\n        "tribal_dominance_raw_score": 0.5054945054945055,\n        "fear_raw_score": 0.5362637362637363,\n        "envy_raw_score": 0.3604395604395604,\n        "enmity_raw_score": 1.0,\n        "fragmentative_goals_raw_score": 0.5186813186813187,\n        "individual_dignity_raw_score": -0.3010989010989011,\n        "hope_raw_score": -0.20659340659340657,\n        "mudita_raw_score": -0.42857142857142855,\n        "amity_raw_score": -0.4263736263736263,\n        "cohesive_goals_raw_score": -0.16923076923076923,\n        "strategic_contradiction_index": -0.00879120879120879,\n        "full_cohesion_index": -0.6615384615384615\n      },\n      "fragmentative_goals_raw_score": {\n        "year": 0.18059048386337198,\n        "tribal_dominance_raw_score": 0.2912087912087912,\n        "fear_raw_score": 0.3956043956043956,\n        "envy_raw_score": 0.2835164835164835,\n        "enmity_raw_score": 0.5186813186813187,\n        "fragmentative_goals_raw_score": 1.0,\n        "individual_dignity_raw_score": -0.3230769230769231,\n        "hope_raw_score": 0.0,\n        "mudita_raw_score": -0.2813186813186813,\n        "amity_raw_score": -0.4197802197802197,\n        "cohesive_goals_raw_score": -0.21978021978021976,\n        "strategic_contradiction_index": 0.23076923076923075,\n        "full_cohesion_index": -0.4483516483516483\n      },\n      "individual_dignity_raw_score": {\n        "year": -0.058348705626915226,\n        "tribal_dominance_raw_score": -0.40714285714285714,\n        "fear_raw_score": 0.16923076923076926,\n        "envy_raw_score": -0.2857142857142857,\n        "enmity_raw_score": -0.3010989010989011,\n        "fragmentative_goals_raw_score": -0.3230769230769231,\n        "individual_dignity_raw_score": 1.0,\n        "hope_raw_score": 0.13626373626373627,\n        "mudita_raw_score": 0.3648351648351648,\n        "amity_raw_score": 0.32747252747252744,\n        "cohesive_goals_raw_score": 0.12527472527472526,\n        "strategic_contradiction_index": 0.28791208791208785,\n        "full_cohesion_index": 0.6131868131868131\n      },\n      "hope_raw_score": {\n        "year": 0.05583487056269152,\n        "tribal_dominance_raw_score": 0.1604395604395604,\n        "fear_raw_score": 0.09010989010989011,\n        "envy_raw_score": -0.32747252747252744,\n        "enmity_raw_score": -0.20659340659340657,\n        "fragmentative_goals_raw_score": 0.0,\n        "individual_dignity_raw_score": 0.13626373626373627,\n        "hope_raw_score": 1.0,\n        "mudita_raw_score": 0.16923076923076923,\n        "amity_raw_score": 0.5846153846153846,\n        "cohesive_goals_raw_score": 0.5868131868131868,\n        "strategic_contradiction_index": 0.4483516483516483,\n        "full_cohesion_index": 0.5032967032967033\n      },\n      "mudita_raw_score": {\n        "year": -0.5891157945903932,\n        "tribal_dominance_raw_score": -0.5285714285714286,\n        "fear_raw_score": -0.2681318681318681,\n        "envy_raw_score": -0.5285714285714286,\n        "enmity_raw_score": -0.42857142857142855,\n        "fragmentative_goals_raw_score": -0.2813186813186813,\n        "individual_dignity_raw_score": 0.3648351648351648,\n        "hope_raw_score": 0.16923076923076923,\n        "mudita_raw_score": 1.0,\n        "amity_raw_score": 0.06593406593406593,\n        "cohesive_goals_raw_score": -0.07692307692307692,\n        "strategic_contradiction_index": 0.4571428571428571,\n        "full_cohesion_index": 0.5758241758241758\n      },\n      "amity_raw_score": {\n        "year": -0.12603845914104953,\n        "tribal_dominance_raw_score": -0.010989010989010988,\n        "fear_raw_score": -0.22417582417582418,\n        "envy_raw_score": -0.3648351648351648,\n        "enmity_raw_score": -0.4263736263736263,\n        "fragmentative_goals_raw_score": -0.4197802197802197,\n        "individual_dignity_raw_score": 0.32747252747252744,\n        "hope_raw_score": 0.5846153846153846,\n        "mudita_raw_score": 0.06593406593406593,\n        "amity_raw_score": 1.0,\n        "cohesive_goals_raw_score": 0.5472527472527472,\n        "strategic_contradiction_index": 0.13406593406593408,\n        "full_cohesion_index": 0.4373626373626373\n      },\n      "cohesive_goals_raw_score": {\n        "year": 0.09117672288118009,\n        "tribal_dominance_raw_score": 0.14065934065934064,\n        "fear_raw_score": -0.24615384615384617,\n        "envy_raw_score": -0.1934065934065934,\n        "enmity_raw_score": -0.16923076923076923,\n        "fragmentative_goals_raw_score": -0.21978021978021976,\n        "individual_dignity_raw_score": 0.12527472527472526,\n        "hope_raw_score": 0.5868131868131868,\n        "mudita_raw_score": -0.07692307692307692,\n        "amity_raw_score": 0.5472527472527472,\n        "cohesive_goals_raw_score": 1.0,\n        "strategic_contradiction_index": -0.14285714285714285,\n        "full_cohesion_index": 0.2615384615384615\n      },\n      "strategic_contradiction_index": {\n        "year": -0.2721869818451845,\n        "tribal_dominance_raw_score": -0.1604395604395604,\n        "fear_raw_score": -0.0989010989010989,\n        "envy_raw_score": -0.14725274725274722,\n        "enmity_raw_score": -0.00879120879120879,\n        "fragmentative_goals_raw_score": 0.23076923076923075,\n        "individual_dignity_raw_score": 0.28791208791208785,\n        "hope_raw_score": 0.4483516483516483,\n        "mudita_raw_score": 0.4571428571428571,\n        "amity_raw_score": 0.13406593406593408,\n        "cohesive_goals_raw_score": -0.14285714285714285,\n        "strategic_contradiction_index": 1.0,\n        "full_cohesion_index": 0.0835164835164835\n      },\n      "full_cohesion_index": {\n        "year": -0.3703296703296703,\n        "tribal_dominance_raw_score": -0.7362637362637362,\n        "fear_raw_score": -0.2659340659340659,\n        "envy_raw_score": -0.7604395604395604,\n        "enmity_raw_score": -0.6615384615384615,\n        "fragmentative_goals_raw_score": -0.4483516483516483,\n        "individual_dignity_raw_score": 0.6131868131868131,\n        "hope_raw_score": 0.5032967032967033,\n        "mudita_raw_score": 0.5758241758241758,\n        "amity_raw_score": 0.4373626373626373,\n        "cohesive_goals_raw_score": 0.2615384615384615,\n        "strategic_contradiction_index": 0.0835164835164835,\n        "full_cohesion_index": 1.0\n      }\n    },\n    "group_analysis_by_career_phase": {\n      "early_career": {\n        "tribal_dominance_raw_score_mean": 0.82,\n        "tribal_dominance_raw_score_std": 0.08366600265340756,\n        "tribal_dominance_raw_score_median": 0.8,\n        "tribal_dominance_raw_score_count": 5,\n        "enmity_raw_score_mean": 0.88,\n        "enmity_raw_score_std": 0.04472135954999579,\n        "enmity_raw_score_median": 0.9,\n        "enmity_raw_score_count": 5,\n        "strategic_contradiction_index_mean": 0.09105,\n        "strategic_contradiction_index_std": 0.07604652285169542,\n        "strategic_contradiction_index_median": 0.091,\n        "strategic_contradiction_index_count": 5,\n        "full_cohesion_index_mean": -0.2458406189953883,\n        "full_cohesion_index_std": 0.24357640579053332,\n        "full_cohesion_index_median": -0.3562,\n        "full_cohesion_index_count": 5\n      },\n      "founding_era": {\n        "tribal_dominance_raw_score_mean": 0.8,\n        "tribal_dominance_raw_score_std": 0.1414213562373095,\n        "tribal_dominance_raw_score_median": 0.8,\n        "tribal_dominance_raw_score_count": 2,\n        "enmity_raw_score_mean": 0.85,\n        "enmity_raw_score_std": 0.07071067811865476,\n        "enmity_raw_score_median": 0.85,\n        "enmity_raw_score_count": 2,\n        "strategic_contradiction_index_mean": 0.003,\n        "strategic_contradiction_index_std": 0.004242640687119285,\n        "strategic_contradiction_index_median": 0.003,\n        "strategic_contradiction_index_count": 2,\n        "full_cohesion_index_mean": -0.43064098964098967,\n        "full_cohesion_index_std": 0.06789117623910582,\n        "full_cohesion_index_median": -0.43064098964098967,\n        "full_cohesion_index_count": 2\n      },\n      "late_career": {\n        "tribal_dominance_raw_score_mean": 0.8833333333333333,\n        "tribal_dominance_raw_score_std": 0.028867513459481287,\n        "tribal_dominance_raw_score_median": 0.9,\n        "tribal_dominance_raw_score_count": 3,\n        "enmity_raw_score_mean": 0.9,\n        "enmity_raw_score_std": 0.0,\n        "enmity_raw_score_median": 0.9,\n        "enmity_raw_score_count": 3,\n        "strategic_contradiction_index_mean": 0.03266666666666666,\n        "strategic_contradiction_index_std": 0.012583057392117917,\n        "strategic_contradiction_index_median": 0.0375,\n        "strategic_contradiction_index_count": 3,\n        "full_cohesion_index_mean": -0.6089988888888888,\n        "full_cohesion_index_std": 0.08412497645161044,\n        "full_cohesion_index_median": -0.6666666666666666,\n        "full_cohesion_index_count": 3\n      },\n      "mid_career": {\n        "tribal_dominance_raw_score_mean": 0.85,\n        "tribal_dominance_raw_score_std": 0.05773502691896258,\n        "tribal_dominance_raw_score_median": 0.85,\n        "tribal_dominance_raw_score_count": 4,\n        "enmity_raw_score_mean": 0.9,\n        "enmity_raw_score_std": 0.0,\n        "enmity_raw_score_median": 0.9,\n        "enmity_raw_score_count": 4,\n        "strategic_contradiction_index_mean": 0.1192,\n        "strategic_contradiction_index_std": 0.12469854745814141,\n        "strategic_contradiction_index_median": 0.09549999999999999,\n        "strategic_contradiction_index_count": 4,\n        "full_cohesion_index_mean": -0.22891147568585368,\n        "full_cohesion_index_std": 0.3802951733602128,\n        "full_cohesion_index_median": -0.1527439024390244,\n        "full_cohesion_index_count": 4\n      }\n    },\n    "group_analysis_by_event_type": {\n      "America Fest": {\n        "tribal_dominance_raw_score_mean": 0.85,\n        "tribal_dominance_raw_score_std": 0.0,\n        "tribal_dominance_raw_score_median": 0.85,\n        "tribal_dominance_raw_score_count": 2,\n        "enmity_raw_score_mean": 0.9,\n        "enmity_raw_score_std": 0.0,\n        "enmity_raw_score_median": 0.9,\n        "enmity_raw_score_count": 2,\n        "strategic_contradiction_index_mean": 0.038,\n        "strategic_contradiction_index_std": 0.0007071067811865476,\n        "strategic_contradiction_index_median": 0.038,\n        "strategic_contradiction_index_count": 2,\n        "full_cohesion_index_mean": -0.4835333333333333,\n        "full_cohesion_index_std": 0.2590013969717088,\n        "full_cohesion_index_median": -0.4835333333333333,\n        "full_cohesion_index_count": 2\n      },\n      "CPAC": {\n        "tribal_dominance_raw_score_mean": 0.85,\n        "tribal_dominance_raw_score_std": 0.05,\n        "tribal_dominance_raw_score_median": 0.85,\n        "tribal_dominance_raw_score_count": 3,\n        "enmity_raw_score_mean": 0.9,\n        "enmity_raw_score_std": 0.0,\n        "enmity_raw_score_median": 0.9,\n        "enmity_raw_score_count": 3,\n        "strategic_contradiction_index_mean": 0.038,\n        "strategic_contradiction_index_std": 0.0096,\n        "strategic_contradiction_index_median": 0.043,\n        "strategic_contradiction_index_count": 3,\n        "full_cohesion_index_mean": -0.17066866666666664,\n        "full_cohesion_index_std": 0.30138541249764516,\n        "full_cohesion_index_median": -0.0959,\n        "full_cohesion_index_count": 3\n      },\n      "College Conservatism": {\n        "tribal_dominance_raw_score_mean": 0.7,\n        "tribal_dominance_raw_score_std": null,\n        "tribal_dominance_raw_score_median": 0.7,\n        "tribal_dominance_raw_score_count": 1,\n        "enmity_raw_score_mean": 0.9,\n        "enmity_raw_score_std": null,\n        "enmity_raw_score_median": 0.9,\n        "enmity_raw_score_count": 1,\n        "strategic_contradiction_index_mean": 0.04800000000000001,\n        "strategic_contradiction_index_std": null,\n        "strategic_contradiction_index_median": 0.04800000000000001,\n        "strategic_contradiction_index_count": 1,\n        "full_cohesion_index_mean": -0.7536585365853659,\n        "full_cohesion_index_std": null,\n        "full_cohesion_index_median": -0.7536585365853659,\n        "full_cohesion_index_count": 1\n      },\n      "Media Interview": {\n        "tribal_dominance_raw_score_mean": 0.7,\n        "tribal_dominance_raw_score_std": null,\n        "tribal_dominance_raw_score_median": 0.7,\n        "tribal_dominance_raw_score_count": 1,\n        "enmity_raw_score_mean": 0.8,\n        "enmity_raw_score_std": null,\n        "enmity_raw_score_median": 0.8,\n        "enmity_raw_score_count": 1,\n        "strategic_contradiction_index_mean": 0.006,\n        "strategic_contradiction_index_std": null,\n        "strategic_contradiction_index_median": 0.006,\n        "strategic_contradiction_index_count": 1,\n        "full_cohesion_index_mean": -0.38461538461538464,\n        "full_cohesion_index_std": null,\n        "full_cohesion_index_median": -0.38461538461538464,\n        "full_cohesion_index_count": 1\n      },\n      "Politicon Debate": {\n        "tribal_dominance_raw_score_mean": 0.9,\n        "tribal_dominance_raw_score_std": null,\n        "tribal_dominance_raw_score_median": 0.9,\n        "tribal_dominance_raw_score_count": 1,\n        "enmity_raw_score_mean": 0.9,\n        "enmity_raw_score_std": null,\n        "enmity_raw_score_median": 0.9,\n        "enmity_raw_score_count": 1,\n        "strategic_contradiction_index_mean": 0.0,\n        "strategic_contradiction_index_std": null,\n        "strategic_contradiction_index_median": 0.0,\n        "strategic_contradiction_index_count": 1,\n        "full_cohesion_index_mean": 0.0,\n        "full_cohesion_index_std": null,\n        "full_cohesion_index_median": 0.0,\n        "full_cohesion_index_count": 1\n      },\n      "RNC": {\n        "tribal_dominance_raw_score_mean": 0.9,\n        "tribal_dominance_raw_score_std": 0.0,\n        "tribal_dominance_raw_score_median": 0.9,\n        "tribal_dominance_raw_score_count": 2,\n        "enmity_raw_score_mean": 0.9,\n        "enmity_raw_score_std": 0.0,\n        "enmity_raw_score_median": 0.9,\n        "enmity_raw_score_count": 2,\n        "strategic_contradiction_index_mean": 0.017,\n        "strategic_contradiction_index_std": 0.0,\n        "strategic_contradiction_index_median": 0.017,\n        "strategic_contradiction_index_count": 2,\n        "full_cohesion_index_mean": -0.428479375,\n        "full_cohesion_index_std": 0.8227653240242137,\n        "full_cohesion_index_median": -0.428479375,\n        "full_cohesion_index_count": 2\n      },\n      "Student Action Summit": {\n        "tribal_dominance_raw_score_mean": 0.8,\n        "tribal_dominance_raw_score_std": 0.0,\n        "tribal_dominance_raw_score_median": 0.8,\n        "tribal_dominance_raw_score_count": 2,\n        "enmity_raw_score_mean": 0.8,\n        "enmity_raw_score_std": 0.0,\n        "enmity_raw_score_median": 0.8,\n        "enmity_raw_score_count": 2,\n        "strategic_contradiction_index_mean": 0.158,\n        "strategic_contradiction_index_std": 0.0,\n        "strategic_contradiction_index_median": 0.158,\n        "strategic_contradiction_index_count": 2,\n        "full_cohesion_index_mean": -0.18615384615384612,\n        "full_cohesion_index_std": 0.0,\n        "full_cohesion_index_median": -0.18615384615384612,\n        "full_cohesion_index_count": 2\n      },\n      "Western Conservative Summit": {\n        "tribal_dominance_raw_score_mean": 0.9,\n        "tribal_dominance_raw_score_std": 0.0,\n        "tribal_dominance_raw_score_median": 0.9,\n        "tribal_dominance_raw_score_count": 2,\n        "enmity_raw_score_mean": 0.9,\n        "enmity_raw_score_std": 0.0,\n        "enmity_raw_score_median": 0.9,\n        "enmity_raw_score_count": 2,\n        "strategic_contradiction_index_mean": 0.0,\n        "strategic_contradiction_index_std": 0.0,\n        "strategic_contradiction_index_median": 0.0,\n        "strategic_contradiction_index_count": 2,\n        "full_cohesion_index_mean": -0.4786,\n        "full_cohesion_index_std": 0.0,\n        "full_cohesion_index_median": -0.4786,\n        "full_cohesion_index_count": 2\n      }\n    },\n    "group_analysis_by_audience": {\n      "college_students": {\n        "tribal_dominance_raw_score_mean": 0.7666666666666666,\n        "tribal_dominance_raw_score_std": 0.05773502691896257,\n        "tribal_dominance_raw_score_median": 0.8,\n        "tribal_dominance_raw_score_count": 3,\n        "enmity_raw_score_mean": 0.8333333333333334,\n        "enmity_raw_score_std": 0.05773502691896257,\n        "enmity_raw_score_median": 0.8,\n        "enmity_raw_score_count": 3,\n        "strategic_contradiction_index_mean": 0.10466666666666668,\n        "strategic_contradiction_index_std": 0.05740508115797379,\n        "strategic_contradiction_index_median": 0.158,\n        "strategic_contradiction_index_count": 3,\n        "full_cohesion_index_mean": -0.3753230696464058,\n        "full_cohesion_index_std": 0.3204900593685458,\n        "full_cohesion_index_median": -0.18615384615384612,\n        "full_cohesion_index_count": 3\n      },\n      "conservative_activists": {\n        "tribal_dominance_raw_score_mean": 0.86,\n        "tribal_dominance_raw_score_std": 0.05477225575051661,\n        "tribal_dominance_raw_score_median": 0.85,\n        "tribal_dominance_raw_score_count": 5,\n        "enmity_raw_score_mean": 0.9,\n        "enmity_raw_score_std": 0.0,\n        "enmity_raw_score_median": 0.9,\n        "enmity_raw_score_count": 5,\n        "strategic_contradiction_index_mean": 0.0355,\n        "strategic_contradiction_index_std": 0.0163355058564032,\n        "strategic_contradiction_index_median": 0.043,\n        "strategic_contradiction_index_count": 5,\n        "full_cohesion_index_mean": -0.3440737333333333,\n        "full_cohesion_index_std": 0.1764619472659635,\n        "full_cohesion_index_median": -0.3562,\n        "full_cohesion_index_count": 5\n      },\n      "general_public": {\n        "tribal_dominance_raw_score_mean": 0.8,\n        "tribal_dominance_raw_score_std": 0.1414213562373095,\n        "tribal_dominance_raw_score_median": 0.8,\n        "tribal_dominance_raw_score_count": 2,\n        "enmity_raw_score_mean": 0.85,\n        "enmity_raw_score_std": 0.07071067811865476,\n        "enmity_raw_score_median": 0.85,\n        "enmity_raw_score_count": 2,\n        "strategic_contradiction_index_mean": 0.003,\n        "strategic_contradiction_index_std": 0.004242640687119285,\n        "strategic_contradiction_index_median": 0.003,\n        "strategic_contradiction_index_count": 2,\n        "full_cohesion_index_mean": -0.19230769230769232,\n        "full_cohesion_index_std": 0.2719688461715014,\n        "full_cohesion_index_median": -0.19230769230769232,\n        "full_cohesion_index_count": 2\n      },\n      "republican_delegates": {\n        "tribal_dominance_raw_score_mean": 0.9,\n        "tribal_dominance_raw_score_std": 0.0,\n        "tribal_dominance_raw_score_median": 0.9,\n        "tribal_dominance_raw_score_count": 2,\n        "enmity_raw_score_mean": 0.9,\n        "enmity_raw_score_std": 0.0,\n        "enmity_raw_score_median": 0.9,\n        "enmity_raw_score_count": 2,\n        "strategic_contradiction_index_mean": 0.017,\n        "strategic_contradiction_index_std": 0.0,\n        "strategic_contradiction_index_median": 0.017,\n        "strategic_contradiction_index_count": 2,\n        "full_cohesion_index_mean": -0.428479375,\n        "full_cohesion_index_std": 0.8227653240242137,\n        "full_cohesion_index_median": -0.428479375,\n        "full_cohesion_index_count": 2\n      },\n      "tpusa_supporters": {\n        "tribal_dominance_raw_score_mean": 0.85,\n        "tribal_dominance_raw_score_std": 0.0,\n        "tribal_dominance_raw_score_median": 0.85,\n        "tribal_dominance_raw_score_count": 2,\n        "enmity_raw_score_mean": 0.9,\n        "enmity_raw_score_std": 0.0,\n        "enmity_raw_score_median": 0.9,\n        "enmity_raw_score_count": 2,\n        "strategic_contradiction_index_mean": 0.038,\n        "strategic_contradiction_index_std": 0.0007071067811865476,\n        "strategic_contradiction_index_median": 0.038,\n        "strategic_contradiction_index_count": 2,\n        "full_cohesion_index_mean": -0.4835333333333333,\n        "full_cohesion_index_std": 0.2590013969717088,\n        "full_cohesion_index_median": -0.4835333333333333,\n        "full_cohesion_index_count": 2\n      }\n    },\n    "hypothesis_H3_test": {\n      "tribal_dominance_raw_score": {\n        "comparison_stats": {\n          "college_students": {\n            "count": 3.0,\n            "mean": 0.7666666666666666,\n            "std": 0.05773502691896257,\n            "min": 0.7,\n            "25%": 0.75,\n            "50%": 0.8,\n            "75%": 0.8,\n            "max": 0.8\n          },\n          "conservative_activists": {\n            "count": 5.0,\n            "mean": 0.86,\n            "std": 0.05477225575051661,\n            "min": 0.8,\n            "25%": 0.8,\n            "50%": 0.9,\n            "75%": 0.9,\n            "max": 0.9\n          }\n        },\n        "cohens_d": -1.6563380083204193\n      },\n      "enmity_raw_score": {\n        "comparison_stats": {\n          "college_students": {\n            "count": 3.0,\n            "mean": 0.8333333333333334,\n            "std": 0.05773502691896257,\n            "min": 0.8,\n            "25%": 0.8,\n            "50%": 0.8,\n            "75%": 0.85,\n            "max": 0.9\n          },\n          "conservative_activists": {\n            "count": 5.0,\n            "mean": 0.9,\n            "std": 0.0,\n            "min": 0.9,\n            "25%": 0.9,\n            "50%": 0.9,\n            "75%": 0.9,\n            "max": 0.9\n          }\n        },\n        "cohens_d": -1.8257418583505538\n      }\n    },\n    "hypothesis_summary": {\n      "H1_career_evolution": "Evidence suggests a trend of decreasing cohesion over time. Mean Full Cohesion Index shifted from -0.246 (early_career) to -0.609 (late_career). This supports H1.",\n      "H2_context_adaptation": "Rhetoric varies by event. Mean Tribal Dominance was higher in campus speeches (nan) compared to conference speeches (nan), supporting H2.",\n      "H3_audience_targeting": "Evidence supports H3. The effect size (Cohen\'s d) for Tribal Dominance between college students and activists was -1.656, and for Enmity was -1.826, indicating higher scores for student audiences.",\n      "H5_democratic_health": "H5 is supported. The mean Full Cohesion Index across the corpus is negative (-0.353), indicating Kirk\'s rhetoric is, on average, more fragmentative than cohesive.",\n      "H4_strategic_contradiction": "H4 is partially supported. The mean Strategic Contradiction Index was 0.087 (range: 0.000 to 0.264), suggesting the presence of some mixed messaging, though not consistently high across all speeches."\n    }\n  }\n}\n```', 'verification_status': 'verified', 'csv_files': [], 'total_cost': 0.0}, 'status': 'success_with_data', 'validation_passed': True}