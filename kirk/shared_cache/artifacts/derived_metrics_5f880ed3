{
  "analysis_id": "analysis_9c16c347",
  "step": "derived_metrics_generation",
  "model_used": "vertex_ai/gemini-2.5-flash-lite",
  "derived_metrics": "```python\nimport json\n\n# Provided scores\nscores_data = {\n  \"tribal_dominance\": { \"raw_score\": 0.8, \"salience\": 0.8, \"confidence\": 0.9 },\n  \"individual_dignity\": { \"raw_score\": 0.2, \"salience\": 0.1, \"confidence\": 0.8 },\n  \"fear\": { \"raw_score\": 0.9, \"salience\": 0.9, \"confidence\": 0.9 },\n  \"hope\": { \"raw_score\": 0.6, \"salience\": 0.5, \"confidence\": 0.9 },\n  \"envy\": { \"raw_score\": 0.8, \"salience\": 0.7, \"confidence\": 0.9 },\n  \"mudita\": { \"raw_score\": 0.1, \"salience\": 0.1, \"confidence\": 0.8 },\n  \"enmity\": { \"raw_score\": 0.8, \"salience\": 0.8, \"confidence\": 0.9 },\n  \"amity\": { \"raw_score\": 0.2, \"salience\": 0.2, \"confidence\": 0.8 },\n  \"fragmentative_goals\": { \"raw_score\": 0.8, \"salience\": 0.7, \"confidence\": 0.9 },\n  \"cohesive_goals\": { \"raw_score\": 0.7, \"salience\": 0.7, \"confidence\": 0.9 }\n}\n\n# Helper function to get score safely\ndef get_score(scores, dimension, metric_type):\n    return scores.get(dimension, {}).get(metric_type, 0.0)\n\n# --- Derived Metrics Calculation ---\n\n# 1. Tension Indices\nidentity_tension = min(get_score(scores_data, 'tribal_dominance', 'raw_score'), get_score(scores_data, 'individual_dignity', 'raw_score')) * \\\n                   abs(get_score(scores_data, 'tribal_dominance', 'salience') - get_score(scores_data, 'individual_dignity', 'salience'))\n\nemotional_tension = min(get_score(scores_data, 'fear', 'raw_score'), get_score(scores_data, 'hope', 'raw_score')) * \\\n                    abs(get_score(scores_data, 'fear', 'salience') - get_score(scores_data, 'hope', 'salience'))\n\nsuccess_tension = min(get_score(scores_data, 'envy', 'raw_score'), get_score(scores_data, 'mudita', 'raw_score')) * \\\n                  abs(get_score(scores_data, 'envy', 'salience') - get_score(scores_data, 'mudita', 'salience'))\n\nrelational_tension = min(get_score(scores_data, 'enmity', 'raw_score'), get_score(scores_data, 'amity', 'raw_score')) * \\\n                     abs(get_score(scores_data, 'enmity', 'salience') - get_score(scores_data, 'amity', 'salience'))\n\ngoal_tension = min(get_score(scores_data, 'fragmentative_goals', 'raw_score'), get_score(scores_data, 'cohesive_goals', 'raw_score')) * \\\n               abs(get_score(scores_data, 'fragmentative_goals', 'salience') - get_score(scores_data, 'cohesive_goals', 'salience'))\n\n# 2. Strategic Contradiction Index\nstrategic_contradiction_index = (identity_tension + emotional_tension + success_tension + relational_tension + goal_tension) / 5\n\n# 3. Intermediate calculations for salience-weighted cohesion indices\nepsilon = 0.001 # To prevent division by zero\n\nemotional_cohesion_component = (get_score(scores_data, 'hope', 'raw_score') * get_score(scores_data, 'hope', 'salience') - \n                                get_score(scores_data, 'fear', 'raw_score') * get_score(scores_data, 'fear', 'salience'))\n\nsuccess_cohesion_component = (get_score(scores_data, 'mudita', 'raw_score') * get_score(scores_data, 'mudita', 'salience') - \n                              get_score(scores_data, 'envy', 'raw_score') * get_score(scores_data, 'envy', 'salience'))\n\nrelational_cohesion_component = (get_score(scores_data, 'amity', 'raw_score') * get_score(scores_data, 'amity', 'salience') - \n                                 get_score(scores_data, 'enmity', 'raw_score') * get_score(scores_data, 'enmity', 'salience'))\n\ngoal_cohesion_component = (get_score(scores_data, 'cohesive_goals', 'raw_score') * get_score(scores_data, 'cohesive_goals', 'salience') - \n                           get_score(scores_data, 'fragmentative_goals', 'raw_score') * get_score(scores_data, 'fragmentative_goals', 'salience'))\n\nidentity_cohesion_component = (get_score(scores_data, 'individual_dignity', 'raw_score') * get_score(scores_data, 'individual_dignity', 'salience') - \n                               get_score(scores_data, 'tribal_dominance', 'raw_score') * get_score(scores_data, 'tribal_dominance', 'salience'))\n\n# 4. Salience weight calculations\ndescriptive_salience_total = (get_score(scores_data, 'hope', 'salience') + get_score(scores_data, 'fear', 'salience') + \n                              get_score(scores_data, 'mudita', 'salience') + get_score(scores_data, 'envy', 'salience') + \n                              get_score(scores_data, 'amity', 'salience') + get_score(scores_data, 'enmity', 'salience'))\n\nmotivational_salience_total = (get_score(scores_data, 'hope', 'salience') + get_score(scores_data, 'fear', 'salience') + \n                               get_score(scores_data, 'mudita', 'salience') + get_score(scores_data, 'envy', 'salience') + \n                               get_score(scores_data, 'amity', 'salience') + get_score(scores_data, 'enmity', 'salience') +\n                               get_score(scores_data, 'cohesive_goals', 'salience') + get_score(scores_data, 'fragmentative_goals', 'salience'))\n\nfull_salience_total = (get_score(scores_data, 'individual_dignity', 'salience') + get_score(scores_data, 'tribal_dominance', 'salience') +\n                       get_score(scores_data, 'hope', 'salience') + get_score(scores_data, 'fear', 'salience') + \n                       get_score(scores_data, 'mudita', 'salience') + get_score(scores_data, 'envy', 'salience') + \n                       get_score(scores_data, 'amity', 'salience') + get_score(scores_data, 'enmity', 'salience') +\n                       get_score(scores_data, 'cohesive_goals', 'salience') + get_score(scores_data, 'fragmentative_goals', 'salience'))\n\n# 5. Final salience-weighted cohesion indices\ndescriptive_cohesion_index = (emotional_cohesion_component + success_cohesion_component + relational_cohesion_component) / (descriptive_salience_total + epsilon)\nmotivational_cohesion_index = (emotional_cohesion_component + success_cohesion_component + relational_cohesion_component + goal_cohesion_component) / (motivational_salience_total + epsilon)\nfull_cohesion_index = (identity_cohesion_component + emotional_cohesion_component + success_cohesion_component + relational_cohesion_component + goal_cohesion_component) / (full_salience_total + epsilon)\n\n# --- Store and Print Results ---\nderived_metrics_results = {\n    \"identity_tension\": identity_tension,\n    \"emotional_tension\": emotional_tension,\n    \"success_tension\": success_tension,\n    \"relational_tension\": relational_tension,\n    \"goal_tension\": goal_tension,\n    \"strategic_contradiction_index\": strategic_contradiction_index,\n    \"descriptive_cohesion_index\": descriptive_cohesion_index,\n    \"motivational_cohesion_index\": motivational_cohesion_index,\n    \"full_cohesion_index\": full_cohesion_index\n}\n\nprint(json.dumps(derived_metrics_results, indent=2))\n```\n```json\n{\n  \"identity_tension\": 0.0,\n  \"emotional_tension\": 0.06,\n  \"success_tension\": 0.07,\n  \"relational_tension\": 0.16,\n  \"goal_tension\": 0.56,\n  \"strategic_contradiction_index\": 0.158,\n  \"descriptive_cohesion_index\": -0.37286432104721153,\n  \"motivational_cohesion_index\": -0.2372852013208197,\n  \"full_cohesion_index\": -0.18615384615384612\n}\n```",
  "timestamp": "2025-09-15T20:22:13.273724+00:00"
}