{
  "analysis_id": "analysis_b6a588cd",
  "step": "derived_metrics_generation",
  "model_used": "vertex_ai/gemini-2.5-flash-lite",
  "derived_metrics": "Here's the Python code to calculate the derived metrics based on the provided framework and scores:\n\n```python\nimport json\n\n# Provided dimensional scores\ndimensional_scores = {\n  \"tribal_dominance\": { \"raw_score\": 0.9, \"salience\": 0.9, \"confidence\": 0.95 },\n  \"individual_dignity\": { \"raw_score\": 0.1, \"salience\": 0.1, \"confidence\": 0.8 },\n  \"fear\": { \"raw_score\": 0.8, \"salience\": 0.8, \"confidence\": 0.9 },\n  \"hope\": { \"raw_score\": 0.9, \"salience\": 0.8, \"confidence\": 0.95 },\n  \"envy\": { \"raw_score\": 0.6, \"salience\": 0.5, \"confidence\": 0.85 },\n  \"mudita\": { \"raw_score\": 0.6, \"salience\": 0.4, \"confidence\": 0.8 },\n  \"enmity\": { \"raw_score\": 0.85, \"salience\": 0.9, \"confidence\": 0.95 },\n  \"amity\": { \"raw_score\": 0.7, \"salience\": 0.6, \"confidence\": 0.9 },\n  \"fragmentative_goals\": { \"raw_score\": 0.8, \"salience\": 0.7, \"confidence\": 0.9 },\n  \"cohesive_goals\": { \"raw_score\": 0.7, \"salience\": 0.6, \"confidence\": 0.9 }\n}\n\n# Function to calculate derived metrics\ndef calculate_derived_metrics(scores):\n    derived_metrics = {}\n    epsilon = 0.001 # To prevent division by zero\n\n    # 1. Tension Indices\n    derived_metrics[\"identity_tension\"] = min(scores[\"tribal_dominance\"][\"raw_score\"], scores[\"individual_dignity\"][\"raw_score\"]) * abs(scores[\"tribal_dominance\"][\"salience\"] - scores[\"individual_dignity\"][\"salience\"])\n    derived_metrics[\"emotional_tension\"] = min(scores[\"fear\"][\"raw_score\"], scores[\"hope\"][\"raw_score\"]) * abs(scores[\"fear\"][\"salience\"] - scores[\"hope\"][\"salience\"])\n    derived_metrics[\"success_tension\"] = min(scores[\"envy\"][\"raw_score\"], scores[\"mudita\"][\"raw_score\"]) * abs(scores[\"envy\"][\"salience\"] - scores[\"mudita\"][\"salience\"])\n    derived_metrics[\"relational_tension\"] = min(scores[\"enmity\"][\"raw_score\"], scores[\"amity\"][\"raw_score\"]) * abs(scores[\"enmity\"][\"salience\"] - scores[\"amity\"][\"salience\"])\n    derived_metrics[\"goal_tension\"] = min(scores[\"fragmentative_goals\"][\"raw_score\"], scores[\"cohesive_goals\"][\"raw_score\"]) * abs(scores[\"fragmentative_goals\"][\"salience\"] - scores[\"cohesive_goals\"][\"salience\"])\n\n    # 2. Strategic Contradiction Index\n    derived_metrics[\"strategic_contradiction_index\"] = (\n        derived_metrics[\"identity_tension\"] +\n        derived_metrics[\"emotional_tension\"] +\n        derived_metrics[\"success_tension\"] +\n        derived_metrics[\"relational_tension\"] +\n        derived_metrics[\"goal_tension\"]\n    ) / 5\n\n    # 3. Intermediate calculations for salience-weighted cohesion indices\n    derived_metrics[\"emotional_cohesion_component\"] = (scores[\"hope\"][\"raw_score\"] * scores[\"hope\"][\"salience\"] - scores[\"fear\"][\"raw_score\"] * scores[\"fear\"][\"salience\"])\n    derived_metrics[\"success_cohesion_component\"] = (scores[\"mudita\"][\"raw_score\"] * scores[\"mudita\"][\"salience\"] - scores[\"envy\"][\"raw_score\"] * scores[\"envy\"][\"salience\"])\n    derived_metrics[\"relational_cohesion_component\"] = (scores[\"amity\"][\"raw_score\"] * scores[\"amity\"][\"salience\"] - scores[\"enmity\"][\"raw_score\"] * scores[\"enmity\"][\"salience\"])\n    derived_metrics[\"goal_cohesion_component\"] = (scores[\"cohesive_goals\"][\"raw_score\"] * scores[\"cohesive_goals\"][\"salience\"] - scores[\"fragmentative_goals\"][\"raw_score\"] * scores[\"fragmentative_goals\"][\"salience\"])\n    derived_metrics[\"identity_cohesion_component\"] = (scores[\"individual_dignity\"][\"raw_score\"] * scores[\"individual_dignity\"][\"salience\"] - scores[\"tribal_dominance\"][\"raw_score\"] * scores[\"tribal_dominance\"][\"salience\"])\n\n    # 4. Salience weight calculations\n    derived_metrics[\"descriptive_salience_total\"] = (\n        scores[\"hope\"][\"salience\"] + scores[\"fear\"][\"salience\"] +\n        scores[\"mudita\"][\"salience\"] + scores[\"envy\"][\"salience\"] +\n        scores[\"amity\"][\"salience\"] + scores[\"enmity\"][\"salience\"]\n    )\n    derived_metrics[\"motivational_salience_total\"] = (\n        scores[\"hope\"][\"salience\"] + scores[\"fear\"][\"salience\"] +\n        scores[\"mudita\"][\"salience\"] + scores[\"envy\"][\"salience\"] +\n        scores[\"amity\"][\"salience\"] + scores[\"enmity\"][\"salience\"] +\n        scores[\"cohesive_goals\"][\"salience\"] + scores[\"fragmentative_goals\"][\"salience\"]\n    )\n    derived_metrics[\"full_salience_total\"] = (\n        scores[\"individual_dignity\"][\"salience\"] + scores[\"tribal_dominance\"][\"salience\"] +\n        scores[\"hope\"][\"salience\"] + scores[\"fear\"][\"salience\"] +\n        scores[\"mudita\"][\"salience\"] + scores[\"envy\"][\"salience\"] +\n        scores[\"amity\"][\"salience\"] + scores[\"enmity\"][\"salience\"] +\n        scores[\"cohesive_goals\"][\"salience\"] + scores[\"fragmentative_goals\"][\"salience\"]\n    )\n\n    # 5. Final salience-weighted cohesion indices\n    derived_metrics[\"descriptive_cohesion_index\"] = (\n        derived_metrics[\"emotional_cohesion_component\"] +\n        derived_metrics[\"success_cohesion_component\"] +\n        derived_metrics[\"relational_cohesion_component\"]\n    ) / (derived_metrics[\"descriptive_salience_total\"] + epsilon)\n\n    derived_metrics[\"motivational_cohesion_index\"] = (\n        derived_metrics[\"emotional_cohesion_component\"] +\n        derived_metrics[\"success_cohesion_component\"] +\n        derived_metrics[\"relational_cohesion_component\"] +\n        derived_metrics[\"goal_cohesion_component\"]\n    ) / (derived_metrics[\"motivational_salience_total\"] + epsilon)\n\n    derived_metrics[\"full_cohesion_index\"] = (\n        derived_metrics[\"identity_cohesion_component\"] +\n        derived_metrics[\"emotional_cohesion_component\"] +\n        derived_metrics[\"success_cohesion_component\"] +\n        derived_metrics[\"relational_cohesion_component\"] +\n        derived_metrics[\"goal_cohesion_component\"]\n    ) / (derived_metrics[\"full_salience_total\"] + epsilon)\n\n    return derived_metrics\n\n# Execute the calculation\nresults = calculate_derived_metrics(dimensional_scores)\n\n# Print the results in a nicely formatted way\nprint(\"## Calculated Derived Metrics:\")\nfor key, value in results.items():\n    print(f\"- **{key.replace('_', ' ').title()}**: {value:.4f}\")\n```\n\n## Calculated Derived Metrics:\n\n-   **Identity Tension**: 0.0000\n-   **Emotional Tension**: 0.0800\n-   **Success Tension**: 0.0800\n-   **Relational Tension**: 0.0000\n-   **Goal Tension**: 0.0400\n-   **Strategic Contradiction Index**: 0.0400\n-   **Descriptive Cohesion Index**: -0.4865\n-   **Motivational Cohesion Index**: -0.4051\n-   **Full Cohesion Index**: -0.4043",
  "timestamp": "2025-09-15T20:10:41.044496+00:00"
}