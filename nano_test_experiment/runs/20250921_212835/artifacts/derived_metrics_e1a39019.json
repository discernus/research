{
  "analysis_id": "analysis_v2_analysis_20250921_172923_1",
  "step": "derived_metrics",
  "model_used": "vertex_ai/gemini-2.5-pro",
  "derived_metrics": "```python\nimport json\n\nscores = {\n  \"positive_sentiment\": 0.0,\n  \"negative_sentiment\": 1.0\n}\n\nresults = {}\n\n# Calculate Sentiment Polarity\n# Polarity = Positive Sentiment - Negative Sentiment\nresults[\"sentiment_polarity\"] = scores[\"positive_sentiment\"] - scores[\"negative_sentiment\"]\n\n# Calculate Sentiment Intensity\n# Intensity = Max(Positive Sentiment, Negative Sentiment)\nresults[\"sentiment_intensity\"] = max(scores[\"positive_sentiment\"], scores[\"negative_sentiment\"])\n\n# Calculate Net Sentiment (as a percentage of total sentiment)\n# Net Sentiment = (Positive Sentiment - Negative Sentiment) / (Positive Sentiment + Negative Sentiment)\n# Handle division by zero if both are 0\ntotal_sentiment = scores[\"positive_sentiment\"] + scores[\"negative_sentiment\"]\nif total_sentiment == 0:\n    results[\"net_sentiment\"] = 0.0\nelse:\n    results[\"net_sentiment\"] = (scores[\"positive_sentiment\"] - scores[\"negative_sentiment\"]) / total_sentiment\n\n# Calculate Sentiment Ratio\n# Ratio = Positive Sentiment / Negative Sentiment\n# Handle division by zero if negative sentiment is 0\nif scores[\"negative_sentiment\"] == 0:\n    results[\"sentiment_ratio\"] = float('inf') if scores[\"positive_sentiment\"] > 0 else 0.0\nelse:\n    results[\"sentiment_ratio\"] = scores[\"positive_sentiment\"] / scores[\"negative_sentiment\"]\n```\n```json\n{\"results\":{\"sentiment_polarity\":-1.0,\"sentiment_intensity\":1.0,\"net_sentiment\":-1.0,\"sentiment_ratio\":0.0}}\n```",
  "document_index": 1,
  "timestamp": "2025-09-21T21:30:14.956468+00:00"
}