{
  "analysis_id": "analysis_v2_analysis_20250921_165553_0",
  "step": "derived_metrics",
  "model_used": "vertex_ai/gemini-2.5-pro",
  "derived_metrics": "```python\nimport json\n\nscores = {\n  \"positive_sentiment\": {\n    \"raw_score\": 0.97,\n    \"salience\": 0.95,\n    \"confidence\": 0.97\n  },\n  \"negative_sentiment\": {\n    \"raw_score\": 0.0,\n    \"salience\": 0.05,\n    \"confidence\": 0.95\n  }\n}\n\npositive_score = scores[\"positive_sentiment\"][\"raw_score\"]\nnegative_score = scores[\"negative_sentiment\"][\"raw_score\"]\n\n# Derived Metric 1: Overall Sentiment (Positive - Negative)\n# This metric captures the net sentiment. A higher value indicates more positive sentiment.\noverall_sentiment = positive_score - negative_score\n\n# Derived Metric 2: Sentiment Intensity (Average of Positive and Negative)\n# This metric captures the overall emotional intensity, regardless of valence.\nsentiment_intensity = (positive_score + negative_score) / 2.0\n\n# Derived Metric 3: Valence-Aware Sentiment Intensity\n# This metric weights the intensity by the dominant sentiment.\n# If positive sentiment is dominant, it amplifies the intensity.\n# If negative sentiment is dominant, it also amplifies the intensity (absolute difference).\nif positive_score > negative_score:\n    valence_aware_intensity = sentiment_intensity * (1 + (positive_score - negative_score) / 2.0)\nelse:\n    valence_aware_intensity = sentiment_intensity * (1 + (negative_score - positive_score) / 2.0)\n\n\n# Derived Metric 4: Sentiment Balance Ratio\n# This metric indicates the ratio of positive to negative sentiment.\n# Avoid division by zero if negative_score is 0.\nif negative_score > 0:\n    sentiment_balance_ratio = positive_score / negative_score\nelse:\n    # If negative score is 0, and positive score is > 0, balance is infinite (highly positive)\n    # If both are 0, balance is undefined or can be treated as 0 or 1 depending on interpretation.\n    # Here, we'll represent a strongly positive balance.\n    sentiment_balance_ratio = float('inf') if positive_score > 0 else 1.0\n\n# Derived Metric 5: Dominant Sentiment (Categorical or Score)\n# This metric identifies which sentiment is more prominent.\n# We can represent this as a score where +1 is purely positive, -1 is purely negative.\ndominant_sentiment_score = (positive_score - negative_score) / max(positive_score, negative_score) if max(positive_score, negative_score) > 0 else 0.0\n\n\nresults = {\n    \"overall_sentiment\": overall_sentiment,\n    \"sentiment_intensity\": sentiment_intensity,\n    \"valence_aware_sentiment_intensity\": valence_aware_intensity,\n    \"sentiment_balance_ratio\": sentiment_balance_ratio,\n    \"dominant_sentiment_score\": dominant_sentiment_score\n}\n\nprint(json.dumps({\"results\": results}, separators=(\",\", \":\")))\n```\n```json\n{\"results\":{\"overall_sentiment\":0.97,\"sentiment_intensity\":0.485,\"valence_aware_sentiment_intensity\":0.95545,\"sentiment_balance_ratio\":97.0,\"dominant_sentiment_score\":1.0}}\n```",
  "document_index": 0,
  "timestamp": "2025-09-21T20:56:13.759610+00:00"
}