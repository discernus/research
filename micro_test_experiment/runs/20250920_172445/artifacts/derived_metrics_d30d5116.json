{
  "analysis_id": "analysis_3c4f1392",
  "step": "derived_metrics_generation",
  "model_used": "vertex_ai/gemini-2.5-flash-lite",
  "raw_metrics_response": "```python\nimport json\n\n# Provided dimensional scores for document_1\ndocument_scores = {\n  \"document_1\": {\n    \"positive_sentiment\": {\n      \"raw_score\": 1.0,\n      \"salience\": 1.0,\n      \"confidence\": 0.95\n    },\n    \"negative_sentiment\": {\n      \"raw_score\": 0.0,\n      \"salience\": 0.0,\n      \"confidence\": 1.0\n    }\n  }\n}\n\n# Derived metrics calculations\nresults = {}\nfor doc_id, scores in document_scores.items():\n    positive_sentiment = scores[\"positive_sentiment\"][\"raw_score\"]\n    negative_sentiment = scores[\"negative_sentiment\"][\"raw_score\"]\n\n    # Net Sentiment: positive - negative\n    net_sentiment = positive_sentiment - negative_sentiment\n\n    # Sentiment Magnitude: (positive + negative) / 2\n    sentiment_magnitude = (positive_sentiment + negative_sentiment) / 2\n\n    results[doc_id] = {\n        \"net_sentiment\": net_sentiment,\n        \"sentiment_magnitude\": sentiment_magnitude\n    }\n\n# Output the results\nprint(json.dumps(results, indent=2))\n```\n\n```json\n{\n  \"document_1\": {\n    \"net_sentiment\": 1.0,\n    \"sentiment_magnitude\": 0.5\n  }\n}\n```",
  "document_index": 1,
  "document_name": "document_1",
  "timestamp": "2025-09-20T17:25:48.323880+00:00"
}