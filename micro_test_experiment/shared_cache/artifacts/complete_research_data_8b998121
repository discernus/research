{
  "raw_analysis_results": [
    {
      "analysis_id": "analysis_10abeb033cb9",
      "result_hash": "4c0a680d86940f669c2383b7387bb50385fde27db87392c6416a6c05b0814904",
      "result_content": {
        "analysis_id": "analysis_10abeb033cb9",
        "agent_name": "EnhancedAnalysisAgent",
        "agent_version": "enhanced_v2.1_raw_output",
        "experiment_name": "micro_test_experiment",
        "model_used": "vertex_ai/gemini-2.5-flash",
        "raw_analysis_response": "<<<DISCERNUS_ANALYSIS_JSON_v6>>>\n{\n  \"analysis_metadata\": {\n    \"framework_name\": \"sentiment_binary_v1\",\n    \"framework_version\": \"1.0.0\",\n    \"analyst_confidence\": 0.98,\n    \"analysis_notes\": \"Applied three independent analytical approaches with median aggregation to assess binary sentiment.\",\n    \"internal_consistency_approach\": \"3-run median aggregation\"\n  },\n  \"document_analyses\": [\n    {\n      \"document_id\": \"{{artifact_id}}\",\n      \"document_name\": \"positive_test_1.txt\",\n      \"dimensional_scores\": {\n        \"positive_sentiment\": {\n          \"raw_score\": 0.95,\n          \"salience\": 0.98,\n          \"confidence\": 0.98\n        },\n        \"negative_sentiment\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.0,\n          \"confidence\": 0.98\n        }\n      },\n      \"evidence\": [\n        {\n          \"dimension\": \"positive_sentiment\",\n          \"quote_text\": \"This is a wonderful day! Everything is going perfectly.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"direct_statement\"\n        },\n        {\n          \"dimension\": \"negative_sentiment\",\n          \"quote_text\": \"\",\n          \"confidence\": 0.98,\n          \"context_type\": \"absence\"\n        }\n      ]\n    }\n  ]\n}\n<<<END_DISCERNUS_ANALYSIS_JSON_v6>>>",
        "evidence_hash": "980d53eb53f16da531f8804d870264f0b040b44c2518622f838be5e5996f7662",
        "execution_metadata": {
          "start_time": "2025-09-09T17:49:05.176490+00:00",
          "end_time": "2025-09-09T17:49:17.070354+00:00",
          "duration_seconds": 11.893839
        },
        "input_artifacts": {
          "framework_hash": "178020617d567968935db724ea6eeb1f4debda637043ba96a1cd8859fcf9dc22",
          "document_hashes": [
            "26c27e1e47385f483ab2ef36e82b95f807d9fa48154395bcf45f9489ef3ed1ba"
          ],
          "num_documents": 1
        },
        "provenance": {
          "security_boundary": {
            "experiment_name": "micro_test_experiment",
            "experiment_root": "/Volumes/code/discernus/projects/micro_test_experiment",
            "boundary_type": "filesystem",
            "security_level": "experiment_scoped"
          },
          "audit_session_id": "20250909T174905Z_5e93418b"
        }
      },
      "cached": true
    },
    {
      "analysis_id": "analysis_c59f132cd433",
      "result_hash": "9937f469997ad5845b250ab75c64639d96f5a4f68df78f4b9e30f86a4779a00b",
      "result_content": {
        "analysis_id": "analysis_c59f132cd433",
        "agent_name": "EnhancedAnalysisAgent",
        "agent_version": "enhanced_v2.1_raw_output",
        "experiment_name": "micro_test_experiment",
        "model_used": "vertex_ai/gemini-2.5-flash",
        "raw_analysis_response": "<<<DISCERNUS_ANALYSIS_JSON_v6>>>\n{\n  \"analysis_metadata\": {\n    \"framework_name\": \"sentiment_binary_v1\",\n    \"framework_version\": \"1.0.0\",\n    \"analyst_confidence\": 0.9,\n    \"analysis_notes\": \"Applied three independent analytical approaches with median aggregation\",\n    \"internal_consistency_approach\": \"3-run median aggregation\"\n  },\n  \"document_analyses\": [\n    {\n      \"document_id\": \"3671de4a6c31\",\n      \"document_name\": \"positive_test_2.txt\",\n      \"dimensional_scores\": {\n        \"positive_sentiment\": {\n          \"raw_score\": 0.9,\n          \"salience\": 0.9,\n          \"confidence\": 0.9\n        },\n        \"negative_sentiment\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.0,\n          \"confidence\": 0.9\n        }\n      },\n      \"evidence\": [\n        {\n          \"dimension\": \"positive_sentiment\",\n          \"quote_text\": \"What a superb morning! All systems are operating flawlessly. I'm excited about what's coming next. Achievement surrounds us. The group performed outstandingly. We're reaching incredible goals. Hopefulness permeates everything. Such a marvelous chance! I'm delighted by the advancement. Everything appears glowing and encouraging.\",\n          \"confidence\": 0.95,\n          \"context_type\": \"direct_statement\"\n        },\n        {\n          \"dimension\": \"negative_sentiment\",\n          \"quote_text\": \"\",\n          \"confidence\": 0.9,\n          \"context_type\": \"absence_of_evidence\"\n        }\n      ]\n    }\n  ]\n}\n<<<END_DISCERNUS_ANALYSIS_JSON_v6>>>",
        "evidence_hash": "36f82740e79c2e3824383fb8abe16108bba19c5e193dbcd34a845bf12d01d999",
        "execution_metadata": {
          "start_time": "2025-09-09T17:49:17.072227+00:00",
          "end_time": "2025-09-09T17:49:42.316470+00:00",
          "duration_seconds": 25.244227
        },
        "input_artifacts": {
          "framework_hash": "178020617d567968935db724ea6eeb1f4debda637043ba96a1cd8859fcf9dc22",
          "document_hashes": [
            "3671de4a6c31fc2bb356ceed5589d1b4bb2288df674bf0d827dc973872b462a3"
          ],
          "num_documents": 1
        },
        "provenance": {
          "security_boundary": {
            "experiment_name": "micro_test_experiment",
            "experiment_root": "/Volumes/code/discernus/projects/micro_test_experiment",
            "boundary_type": "filesystem",
            "security_level": "experiment_scoped"
          },
          "audit_session_id": "20250909T174905Z_5e93418b"
        }
      },
      "cached": true
    },
    {
      "analysis_id": "analysis_ceae493876a6",
      "result_hash": "85723cf56c0e0c9daf0133ba780b055057f7e6017509bbc362a152bc791800de",
      "result_content": {
        "analysis_id": "analysis_ceae493876a6",
        "agent_name": "EnhancedAnalysisAgent",
        "agent_version": "enhanced_v2.1_raw_output",
        "experiment_name": "micro_test_experiment",
        "model_used": "vertex_ai/gemini-2.5-flash",
        "raw_analysis_response": "<<<DISCERNUS_ANALYSIS_JSON_v6>>>\n{\n  \"analysis_metadata\": {\n    \"framework_name\": \"sentiment_binary_v1\",\n    \"framework_version\": \"1.0.0\",\n    \"analyst_confidence\": 1.0,\n    \"analysis_notes\": \"Applied three independent analytical approaches with median aggregation. Document contains exclusively negative sentiment.\",\n    \"internal_consistency_approach\": \"3-run median aggregation\"\n  },\n  \"document_analyses\": [\n    {\n      \"document_id\": \"{{artifact_id}}\",\n      \"document_name\": \"negative_test_1.txt\",\n      \"dimensional_scores\": {\n        \"positive_sentiment\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.0,\n          \"confidence\": 1.0\n        },\n        \"negative_sentiment\": {\n          \"raw_score\": 1.0,\n          \"salience\": 1.0,\n          \"confidence\": 1.0\n        }\n      },\n      \"evidence\": [\n        {\n          \"dimension\": \"positive_sentiment\",\n          \"quote_text\": \"\",\n          \"confidence\": 1.0,\n          \"context_type\": \"absence_of_evidence\"\n        },\n        {\n          \"dimension\": \"negative_sentiment\",\n          \"quote_text\": \"This is a terrible situation. Everything is going wrong. I feel awful about the future. Failure surrounds us. The team did a horrible job. We're facing disaster. Pessimism fills the air. What a disastrous outcome! I'm devastated by the results. Everything looks dark and hopeless.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"direct_statement\"\n        }\n      ]\n    }\n  ]\n}\n<<<END_DISCERNUS_ANALYSIS_JSON_v6>>>",
        "evidence_hash": "de7f03f1c323cbfe067b588ca35d824b903495c6c9fe506b38a17b71837c6670",
        "execution_metadata": {
          "start_time": "2025-09-09T17:49:42.317470+00:00",
          "end_time": "2025-09-09T17:49:55.582450+00:00",
          "duration_seconds": 13.264949
        },
        "input_artifacts": {
          "framework_hash": "178020617d567968935db724ea6eeb1f4debda637043ba96a1cd8859fcf9dc22",
          "document_hashes": [
            "123e5c9fe4425f26d19c815d8f4b304e6c211e38014847dc087f108396aa6134"
          ],
          "num_documents": 1
        },
        "provenance": {
          "security_boundary": {
            "experiment_name": "micro_test_experiment",
            "experiment_root": "/Volumes/code/discernus/projects/micro_test_experiment",
            "boundary_type": "filesystem",
            "security_level": "experiment_scoped"
          },
          "audit_session_id": "20250909T174905Z_5e93418b"
        }
      },
      "cached": true
    },
    {
      "analysis_id": "analysis_39d66267a094",
      "result_hash": "73c6436c3c267cfa75d51f87ee33de2087486a6f3e8cfcfa6228ac9a9f6d9115",
      "result_content": {
        "analysis_id": "analysis_39d66267a094",
        "agent_name": "EnhancedAnalysisAgent",
        "agent_version": "enhanced_v2.1_raw_output",
        "experiment_name": "micro_test_experiment",
        "model_used": "vertex_ai/gemini-2.5-flash",
        "raw_analysis_response": "<<<DISCERNUS_ANALYSIS_JSON_v6>>>\n{\n  \"analysis_metadata\": {\n    \"framework_name\": \"sentiment_binary_v1\",\n    \"framework_version\": \"1.0.0\",\n    \"analyst_confidence\": 0.95,\n    \"analysis_notes\": \"Applied three independent analytical approaches with median aggregation to a clearly negative test document.\",\n    \"internal_consistency_approach\": \"3-run median aggregation\"\n  },\n  \"document_analyses\": [\n    {\n      \"document_id\": \"{{artifact_id}}\",\n      \"document_name\": \"negative_test_2.txt\",\n      \"dimensional_scores\": {\n        \"positive_sentiment\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.0,\n          \"confidence\": 1.0\n        },\n        \"negative_sentiment\": {\n          \"raw_score\": 1.0,\n          \"salience\": 1.0,\n          \"confidence\": 1.0\n        }\n      },\n      \"evidence\": [\n        {\n          \"dimension\": \"positive_sentiment\",\n          \"quote_text\": \"\",\n          \"confidence\": 1.0,\n          \"context_type\": \"absence_of_evidence\"\n        },\n        {\n          \"dimension\": \"negative_sentiment\",\n          \"quote_text\": \"What an awful predicament. All plans are failing miserably. I'm dreading what's to come. Defeat engulfs us. The group performed dreadfully. We're encountering catastrophe. Despair saturates everything. Such a calamitous result! I'm crushed by the setbacks. Everything appears bleak and discouraging.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"direct_statement_and_pervasive_theme\"\n        }\n      ]\n    }\n  ]\n}\n<<<END_DISCERNUS_ANALYSIS_JSON_v6>>>",
        "evidence_hash": "7a913833b9b2a6ecd57e89cf738b79fba0b453999d215ce29751ba7966093532",
        "execution_metadata": {
          "start_time": "2025-09-09T17:49:55.585896+00:00",
          "end_time": "2025-09-09T17:50:10.994912+00:00",
          "duration_seconds": 15.409003
        },
        "input_artifacts": {
          "framework_hash": "178020617d567968935db724ea6eeb1f4debda637043ba96a1cd8859fcf9dc22",
          "document_hashes": [
            "68b092892a2216aa8ebd70a470a361c86d2bf3ceb23469275acd0fb85d9367a9"
          ],
          "num_documents": 1
        },
        "provenance": {
          "security_boundary": {
            "experiment_name": "micro_test_experiment",
            "experiment_root": "/Volumes/code/discernus/projects/micro_test_experiment",
            "boundary_type": "filesystem",
            "security_level": "experiment_scoped"
          },
          "audit_session_id": "20250909T174905Z_5e93418b"
        }
      },
      "cached": true
    }
  ],
  "derived_metrics_results": {
    "status": "completed",
    "derived_metrics_hash": "d63a74ec1b4cbc3a6fcebe46ec9345ad02a27f825d917ee233566186c97ba22f",
    "functions_generated": 6,
    "derived_metrics_results": {
      "generation_metadata": {
        "status": "success",
        "functions_generated": 6,
        "output_file": "automatedderivedmetricsagent_functions.py",
        "module_size": 12048,
        "function_code_content": "\"\"\"\nAutomated Derived Metrics Functions\n===================================\n\nGenerated by AutomatedDerivedMetricsAgent for experiment: Test Experiment\nDescription: Test experiment for derived metrics\nGenerated: 2025-09-09T17:54:16.135053+00:00\n\nThis module contains automatically generated calculation functions for derived metrics\nas specified in the framework's natural language descriptions.\n\"\"\"\n\nimport pandas as pd\nimport numpy as np\nfrom typing import Optional, Dict, Any\n\n\ndef calculate_identity_tension(data, **kwargs):\n    \"\"\"\n    Calculate identity_tension: Conflict between tribal dominance and individual dignity dimensions\n    \n    Formula: abs(tribal_dominance - individual_dignity)\n    \n    Args:\n        data (pd.Series): A single row of data containing dimension scores.\n        **kwargs: Additional keyword arguments (not used).\n        \n    Returns:\n        float: The calculated identity tension, or None if input data is missing or invalid.\n    \"\"\"\n    import pandas as pd\n    \n    try:\n        # The calculation requires 'tribal_dominance' and 'individual_dignity' dimensions.\n        # These are not present in the provided \"ACTUAL DATA STRUCTURE\" sample,\n        # so this function is designed to fail gracefully by returning None.\n        tribal_dominance = data.get('tribal_dominance')\n        individual_dignity = data.get('individual_dignity')\n\n        # Check if the necessary columns exist and have non-null values\n        if tribal_dominance is None or individual_dignity is None or pd.isna(tribal_dominance) or pd.isna(individual_dignity):\n            return None\n\n        # Ensure values are floats for calculation\n        tribal_dominance = float(tribal_dominance)\n        individual_dignity = float(individual_dignity)\n\n        # The formula calculates the absolute difference, representing the 'tension' or 'conflict'.\n        # A higher value indicates greater divergence between the two dimensions.\n        tension = abs(tribal_dominance - individual_dignity)\n        \n        return tension\n\n    except (TypeError, ValueError):\n        # This handles cases where data might not be numeric\n        return None\n    except Exception:\n        # A general catch-all for any other unexpected errors\n        return None\n\ndef calculate_emotional_balance(data, **kwargs):\n    \"\"\"\n    Calculate emotional_balance: Difference between hope and fear scores\n\n    Formula: hope - fear\n    \n    Args:\n        data (pd.Series): A row of data from a pandas DataFrame.\n        **kwargs: Additional parameters (unused).\n        \n    Returns:\n        float: Calculated result or None if insufficient data.\n    \"\"\"\n    import pandas as pd\n    import numpy as np\n    \n    try:\n        # This calculation requires 'hope' and 'fear' scores.\n        hope_score = data['hope']\n        fear_score = data['fear']\n        \n        # Check for missing data in the required columns.\n        if pd.isna(hope_score) or pd.isna(fear_score):\n            return None\n            \n        # Calculate the difference and ensure the result is a standard float.\n        return float(hope_score) - float(fear_score)\n\n    except (KeyError, TypeError, ValueError):\n        # Handles cases where columns are missing or data is not numeric.\n        return None\n\ndef calculate_success_climate(data, **kwargs):\n    \"\"\"\n    Calculate success_climate: Difference between compersion and envy scores\n\n    Formula: success_climate = compersion - envy\n    \n    Args:\n        data: pandas DataFrame with dimension scores (expected as a Series for a single row).\n        **kwargs: Additional parameters (unused).\n        \n    Returns:\n        float: Calculated result or None if insufficient data.\n    \"\"\"\n    import pandas as pd\n    \n    try:\n        # The calculation is explicitly defined as the difference between 'compersion' and 'envy'.\n        # We use pd.to_numeric to safely convert values, coercing errors to Not a Number (NaN).\n        # The .get() method safely handles cases where the keys might be missing from the data.\n        compersion_score = pd.to_numeric(data.get('compersion'), errors='coerce')\n        envy_score = pd.to_numeric(data.get('envy'), errors='coerce')\n\n        # Check if either score is NaN (which occurs if key was missing, value was None,\n        # or value was non-numeric). If so, we cannot calculate and return None.\n        if pd.isna(compersion_score) or pd.isna(envy_score):\n            return None\n        \n        # If both scores are valid numbers, perform the calculation and return as a float.\n        return float(compersion_score - envy_score)\n\n    except Exception:\n        # Broad exception handler to ensure stability in production, returning None on any error.\n        return None\n\ndef calculate_relational_climate(data, **kwargs):\n    \"\"\"\n    Calculate relational_climate: Difference between amity and enmity scores\n\n    Formula: amity - enmity\n    \n    Args:\n        data: pandas DataFrame with dimension scores (passed as a single row or Series)\n        **kwargs: Additional parameters\n        \n    Returns:\n        float: Calculated result or None if insufficient data\n    \"\"\"\n    import pandas as pd\n    import numpy as np\n    \n    try:\n        # The calculation is \"Difference between amity and enmity scores\".\n        # We therefore require 'amity' and 'enmity' columns. This function design\n        # prioritizes the explicit calculation description.\n        amity_col = 'amity'\n        enmity_col = 'enmity'\n\n        # Use .get() for safe access to columns that might be missing.\n        amity_score = data.get(amity_col)\n        enmity_score = data.get(enmity_col)\n        \n        # Check for missing data (None, NaN, etc.) before calculation.\n        if pd.isna(amity_score) or pd.isna(enmity_score):\n            return None\n            \n        # Cast to float to ensure numeric operation and return the difference.\n        result = float(amity_score) - float(enmity_score)\n        \n        return result\n\n    except Exception:\n        # Catch all other errors during execution (e.g., non-numeric values\n        # that cause float conversion to fail) and return None for robustness.\n        return None\n\ndef calculate_goal_orientation(data, **kwargs):\n    \"\"\"\n    Calculate goal_orientation: Difference between cohesive goals and fragmentative goals\n\n    Formula: goal_orientation = cohesive_goals - fragmentative_goals\n    \n    Args:\n        data (pd.Series): A row of data from a DataFrame.\n        **kwargs: Additional parameters (unused).\n        \n    Returns:\n        float: Calculated result or None if insufficient data. The function\n               requires 'cohesive_goals' and 'fragmentative_goals' columns.\n    \"\"\"\n    import pandas as pd\n    import numpy as np\n    \n    try:\n        cohesive_goals = data['cohesive_goals']\n        fragmentative_goals = data['fragmentative_goals']\n\n        # Check for missing values before calculation\n        if pd.isna(cohesive_goals) or pd.isna(fragmentative_goals):\n            return None\n\n        # Perform the calculation and ensure the result is a standard float\n        result = float(cohesive_goals) - float(fragmentative_goals)\n\n        # A final sanity check for NaN results from unusual float arithmetic\n        if np.isnan(result):\n            return None\n        \n        return result\n\n    except (KeyError, TypeError, ValueError):\n        # KeyError: If 'cohesive_goals' or 'fragmentative_goals' columns do not exist.\n        # TypeError: If data is not subscriptable or values are of an incorrect type for subtraction.\n        # ValueError: If values cannot be cast to float.\n        return None\n\ndef calculate_overall_cohesion_index(data, **kwargs):\n    \"\"\"\n    Calculate overall_cohesion_index: Comprehensive measure combining all dimensions.\n\n    This index measures the balance between positive and negative sentiment scores.\n    A value of 1.0 indicates perfect balance (e.g., positive=0.5, negative=0.5),\n    while a value of 0.0 indicates complete dominance by one sentiment\n    (e.g., positive=1.0, negative=0.0).\n\n    Formula: 1 - abs(positive_sentiment - negative_sentiment)\n    \n    Args:\n        data (pd.Series or pd.DataFrame): A single row of data containing the dimension scores.\n            It is expected to have 'positive_sentiment' and 'negative_sentiment' columns\n            as inferred from the framework's dimensions.\n        **kwargs: Additional parameters (not used).\n        \n    Returns:\n        float: The calculated overall cohesion index, or None if necessary data is missing or invalid.\n    \"\"\"\n    import pandas as pd\n    import numpy as np\n    \n    try:\n        # The framework dimensions are \"Positive Sentiment\" and \"Negative Sentiment\".\n        # We infer the required column names as 'positive_sentiment' and 'negative_sentiment'.\n        # The broad exception handling will return None if these columns do not exist\n        # or if data is otherwise invalid, fulfilling the requirements.\n\n        # Handle both pd.Series (single row) and pd.DataFrame (first row) input\n        if isinstance(data, pd.DataFrame):\n            if data.empty:\n                return None\n            row = data.iloc[0]\n        elif isinstance(data, pd.Series):\n            row = data\n        else:\n            return None # Invalid input type\n\n        positive_score = row['positive_sentiment']\n        negative_score = row['negative_sentiment']\n        \n        # Check for non-numeric or missing values which cannot be calculated\n        if pd.isna(positive_score) or pd.isna(negative_score):\n            return None\n\n        # Calculate the cohesion index based on the absolute difference\n        cohesion_index = 1.0 - abs(float(positive_score) - float(negative_score))\n        \n        # The dimension scores are specified to be between 0.0 and 1.0.\n        # The result of the formula will also be in this range.\n        # We clip for extra safety against potential floating point inaccuracies or invalid inputs.\n        return np.clip(cohesion_index, 0.0, 1.0)\n        \n    except Exception:\n        # Catch any exceptions from missing columns, invalid data types, etc.\n        return None\n\ndef calculate_all_derived_metrics(data: pd.DataFrame) -> Dict[str, Optional[float]]:\n    \"\"\"\n    Calculate all derived metrics for the given dataset.\n    \n    Args:\n        data: pandas DataFrame with dimension scores\n        \n    Returns:\n        Dictionary mapping metric names to calculated values\n    \"\"\"\n    results = {}\n    \n    # Get all calculation functions from this module\n    import inspect\n    current_module = inspect.getmodule(inspect.currentframe())\n    \n    for name, obj in inspect.getmembers(current_module):\n        if (inspect.isfunction(obj) and \n            name.startswith('calculate_') and \n            name not in ['calculate_all_derived_metrics', 'calculate_derived_metrics']):\n            try:\n                results[name.replace('calculate_', '')] = obj(data)\n            except Exception as e:\n                results[name.replace('calculate_', '')] = None\n                \n    return results\n\n\ndef calculate_derived_metrics(data: pd.DataFrame) -> pd.DataFrame:\n    \"\"\"\n    Template-compatible wrapper function for derived metrics calculation.\n    \n    This function is called by the universal notebook template and returns\n    the original data with additional derived metric columns.\n    \n    Args:\n        data: pandas DataFrame with dimension scores\n        \n    Returns:\n        DataFrame with original data plus derived metric columns\n    \"\"\"\n    # Calculate all derived metrics\n    derived_metrics = calculate_all_derived_metrics(data)\n    \n    # Create a copy of the original data\n    result = data.copy()\n    \n    # Add derived metrics as new columns\n    for metric_name, metric_value in derived_metrics.items():\n        if metric_value is not None:\n            # For scalar metrics, broadcast to all rows\n            result[metric_name] = metric_value\n        else:\n            # For failed calculations, use NaN\n            result[metric_name] = np.nan\n    \n    return result\n",
        "cached_with_code": true
      },
      "derived_metrics_data": {
        "status": "success",
        "original_count": 4,
        "derived_count": 4,
        "derived_metrics": [
          {
            "analysis_id": "analysis_10abeb033cb9",
            "result_hash": "4c0a680d86940f669c2383b7387bb50385fde27db87392c6416a6c05b0814904",
            "result_content": {
              "analysis_id": "analysis_10abeb033cb9",
              "agent_name": "EnhancedAnalysisAgent",
              "agent_version": "enhanced_v2.1_raw_output",
              "experiment_name": "micro_test_experiment",
              "model_used": "vertex_ai/gemini-2.5-flash",
              "raw_analysis_response": "<<<DISCERNUS_ANALYSIS_JSON_v6>>>\n{\n  \"analysis_metadata\": {\n    \"framework_name\": \"sentiment_binary_v1\",\n    \"framework_version\": \"1.0.0\",\n    \"analyst_confidence\": 0.98,\n    \"analysis_notes\": \"Applied three independent analytical approaches with median aggregation to assess binary sentiment.\",\n    \"internal_consistency_approach\": \"3-run median aggregation\"\n  },\n  \"document_analyses\": [\n    {\n      \"document_id\": \"{{artifact_id}}\",\n      \"document_name\": \"positive_test_1.txt\",\n      \"dimensional_scores\": {\n        \"positive_sentiment\": {\n          \"raw_score\": 0.95,\n          \"salience\": 0.98,\n          \"confidence\": 0.98\n        },\n        \"negative_sentiment\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.0,\n          \"confidence\": 0.98\n        }\n      },\n      \"evidence\": [\n        {\n          \"dimension\": \"positive_sentiment\",\n          \"quote_text\": \"This is a wonderful day! Everything is going perfectly.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"direct_statement\"\n        },\n        {\n          \"dimension\": \"negative_sentiment\",\n          \"quote_text\": \"\",\n          \"confidence\": 0.98,\n          \"context_type\": \"absence\"\n        }\n      ]\n    }\n  ]\n}\n<<<END_DISCERNUS_ANALYSIS_JSON_v6>>>",
              "evidence_hash": "980d53eb53f16da531f8804d870264f0b040b44c2518622f838be5e5996f7662",
              "execution_metadata": {
                "start_time": "2025-09-09T17:49:05.176490+00:00",
                "end_time": "2025-09-09T17:49:17.070354+00:00",
                "duration_seconds": 11.893839
              },
              "input_artifacts": {
                "framework_hash": "178020617d567968935db724ea6eeb1f4debda637043ba96a1cd8859fcf9dc22",
                "document_hashes": [
                  "26c27e1e47385f483ab2ef36e82b95f807d9fa48154395bcf45f9489ef3ed1ba"
                ],
                "num_documents": 1
              },
              "provenance": {
                "security_boundary": {
                  "experiment_name": "micro_test_experiment",
                  "experiment_root": "/Volumes/code/discernus/projects/micro_test_experiment",
                  "boundary_type": "filesystem",
                  "security_level": "experiment_scoped"
                },
                "audit_session_id": "20250909T174905Z_5e93418b"
              }
            },
            "cached": true
          },
          {
            "analysis_id": "analysis_c59f132cd433",
            "result_hash": "9937f469997ad5845b250ab75c64639d96f5a4f68df78f4b9e30f86a4779a00b",
            "result_content": {
              "analysis_id": "analysis_c59f132cd433",
              "agent_name": "EnhancedAnalysisAgent",
              "agent_version": "enhanced_v2.1_raw_output",
              "experiment_name": "micro_test_experiment",
              "model_used": "vertex_ai/gemini-2.5-flash",
              "raw_analysis_response": "<<<DISCERNUS_ANALYSIS_JSON_v6>>>\n{\n  \"analysis_metadata\": {\n    \"framework_name\": \"sentiment_binary_v1\",\n    \"framework_version\": \"1.0.0\",\n    \"analyst_confidence\": 0.9,\n    \"analysis_notes\": \"Applied three independent analytical approaches with median aggregation\",\n    \"internal_consistency_approach\": \"3-run median aggregation\"\n  },\n  \"document_analyses\": [\n    {\n      \"document_id\": \"3671de4a6c31\",\n      \"document_name\": \"positive_test_2.txt\",\n      \"dimensional_scores\": {\n        \"positive_sentiment\": {\n          \"raw_score\": 0.9,\n          \"salience\": 0.9,\n          \"confidence\": 0.9\n        },\n        \"negative_sentiment\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.0,\n          \"confidence\": 0.9\n        }\n      },\n      \"evidence\": [\n        {\n          \"dimension\": \"positive_sentiment\",\n          \"quote_text\": \"What a superb morning! All systems are operating flawlessly. I'm excited about what's coming next. Achievement surrounds us. The group performed outstandingly. We're reaching incredible goals. Hopefulness permeates everything. Such a marvelous chance! I'm delighted by the advancement. Everything appears glowing and encouraging.\",\n          \"confidence\": 0.95,\n          \"context_type\": \"direct_statement\"\n        },\n        {\n          \"dimension\": \"negative_sentiment\",\n          \"quote_text\": \"\",\n          \"confidence\": 0.9,\n          \"context_type\": \"absence_of_evidence\"\n        }\n      ]\n    }\n  ]\n}\n<<<END_DISCERNUS_ANALYSIS_JSON_v6>>>",
              "evidence_hash": "36f82740e79c2e3824383fb8abe16108bba19c5e193dbcd34a845bf12d01d999",
              "execution_metadata": {
                "start_time": "2025-09-09T17:49:17.072227+00:00",
                "end_time": "2025-09-09T17:49:42.316470+00:00",
                "duration_seconds": 25.244227
              },
              "input_artifacts": {
                "framework_hash": "178020617d567968935db724ea6eeb1f4debda637043ba96a1cd8859fcf9dc22",
                "document_hashes": [
                  "3671de4a6c31fc2bb356ceed5589d1b4bb2288df674bf0d827dc973872b462a3"
                ],
                "num_documents": 1
              },
              "provenance": {
                "security_boundary": {
                  "experiment_name": "micro_test_experiment",
                  "experiment_root": "/Volumes/code/discernus/projects/micro_test_experiment",
                  "boundary_type": "filesystem",
                  "security_level": "experiment_scoped"
                },
                "audit_session_id": "20250909T174905Z_5e93418b"
              }
            },
            "cached": true
          },
          {
            "analysis_id": "analysis_ceae493876a6",
            "result_hash": "85723cf56c0e0c9daf0133ba780b055057f7e6017509bbc362a152bc791800de",
            "result_content": {
              "analysis_id": "analysis_ceae493876a6",
              "agent_name": "EnhancedAnalysisAgent",
              "agent_version": "enhanced_v2.1_raw_output",
              "experiment_name": "micro_test_experiment",
              "model_used": "vertex_ai/gemini-2.5-flash",
              "raw_analysis_response": "<<<DISCERNUS_ANALYSIS_JSON_v6>>>\n{\n  \"analysis_metadata\": {\n    \"framework_name\": \"sentiment_binary_v1\",\n    \"framework_version\": \"1.0.0\",\n    \"analyst_confidence\": 1.0,\n    \"analysis_notes\": \"Applied three independent analytical approaches with median aggregation. Document contains exclusively negative sentiment.\",\n    \"internal_consistency_approach\": \"3-run median aggregation\"\n  },\n  \"document_analyses\": [\n    {\n      \"document_id\": \"{{artifact_id}}\",\n      \"document_name\": \"negative_test_1.txt\",\n      \"dimensional_scores\": {\n        \"positive_sentiment\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.0,\n          \"confidence\": 1.0\n        },\n        \"negative_sentiment\": {\n          \"raw_score\": 1.0,\n          \"salience\": 1.0,\n          \"confidence\": 1.0\n        }\n      },\n      \"evidence\": [\n        {\n          \"dimension\": \"positive_sentiment\",\n          \"quote_text\": \"\",\n          \"confidence\": 1.0,\n          \"context_type\": \"absence_of_evidence\"\n        },\n        {\n          \"dimension\": \"negative_sentiment\",\n          \"quote_text\": \"This is a terrible situation. Everything is going wrong. I feel awful about the future. Failure surrounds us. The team did a horrible job. We're facing disaster. Pessimism fills the air. What a disastrous outcome! I'm devastated by the results. Everything looks dark and hopeless.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"direct_statement\"\n        }\n      ]\n    }\n  ]\n}\n<<<END_DISCERNUS_ANALYSIS_JSON_v6>>>",
              "evidence_hash": "de7f03f1c323cbfe067b588ca35d824b903495c6c9fe506b38a17b71837c6670",
              "execution_metadata": {
                "start_time": "2025-09-09T17:49:42.317470+00:00",
                "end_time": "2025-09-09T17:49:55.582450+00:00",
                "duration_seconds": 13.264949
              },
              "input_artifacts": {
                "framework_hash": "178020617d567968935db724ea6eeb1f4debda637043ba96a1cd8859fcf9dc22",
                "document_hashes": [
                  "123e5c9fe4425f26d19c815d8f4b304e6c211e38014847dc087f108396aa6134"
                ],
                "num_documents": 1
              },
              "provenance": {
                "security_boundary": {
                  "experiment_name": "micro_test_experiment",
                  "experiment_root": "/Volumes/code/discernus/projects/micro_test_experiment",
                  "boundary_type": "filesystem",
                  "security_level": "experiment_scoped"
                },
                "audit_session_id": "20250909T174905Z_5e93418b"
              }
            },
            "cached": true
          },
          {
            "analysis_id": "analysis_39d66267a094",
            "result_hash": "73c6436c3c267cfa75d51f87ee33de2087486a6f3e8cfcfa6228ac9a9f6d9115",
            "result_content": {
              "analysis_id": "analysis_39d66267a094",
              "agent_name": "EnhancedAnalysisAgent",
              "agent_version": "enhanced_v2.1_raw_output",
              "experiment_name": "micro_test_experiment",
              "model_used": "vertex_ai/gemini-2.5-flash",
              "raw_analysis_response": "<<<DISCERNUS_ANALYSIS_JSON_v6>>>\n{\n  \"analysis_metadata\": {\n    \"framework_name\": \"sentiment_binary_v1\",\n    \"framework_version\": \"1.0.0\",\n    \"analyst_confidence\": 0.95,\n    \"analysis_notes\": \"Applied three independent analytical approaches with median aggregation to a clearly negative test document.\",\n    \"internal_consistency_approach\": \"3-run median aggregation\"\n  },\n  \"document_analyses\": [\n    {\n      \"document_id\": \"{{artifact_id}}\",\n      \"document_name\": \"negative_test_2.txt\",\n      \"dimensional_scores\": {\n        \"positive_sentiment\": {\n          \"raw_score\": 0.0,\n          \"salience\": 0.0,\n          \"confidence\": 1.0\n        },\n        \"negative_sentiment\": {\n          \"raw_score\": 1.0,\n          \"salience\": 1.0,\n          \"confidence\": 1.0\n        }\n      },\n      \"evidence\": [\n        {\n          \"dimension\": \"positive_sentiment\",\n          \"quote_text\": \"\",\n          \"confidence\": 1.0,\n          \"context_type\": \"absence_of_evidence\"\n        },\n        {\n          \"dimension\": \"negative_sentiment\",\n          \"quote_text\": \"What an awful predicament. All plans are failing miserably. I'm dreading what's to come. Defeat engulfs us. The group performed dreadfully. We're encountering catastrophe. Despair saturates everything. Such a calamitous result! I'm crushed by the setbacks. Everything appears bleak and discouraging.\",\n          \"confidence\": 1.0,\n          \"context_type\": \"direct_statement_and_pervasive_theme\"\n        }\n      ]\n    }\n  ]\n}\n<<<END_DISCERNUS_ANALYSIS_JSON_v6>>>",
              "evidence_hash": "7a913833b9b2a6ecd57e89cf738b79fba0b453999d215ce29751ba7966093532",
              "execution_metadata": {
                "start_time": "2025-09-09T17:49:55.585896+00:00",
                "end_time": "2025-09-09T17:50:10.994912+00:00",
                "duration_seconds": 15.409003
              },
              "input_artifacts": {
                "framework_hash": "178020617d567968935db724ea6eeb1f4debda637043ba96a1cd8859fcf9dc22",
                "document_hashes": [
                  "68b092892a2216aa8ebd70a470a361c86d2bf3ceb23469275acd0fb85d9367a9"
                ],
                "num_documents": 1
              },
              "provenance": {
                "security_boundary": {
                  "experiment_name": "micro_test_experiment",
                  "experiment_root": "/Volumes/code/discernus/projects/micro_test_experiment",
                  "boundary_type": "filesystem",
                  "security_level": "experiment_scoped"
                },
                "audit_session_id": "20250909T174905Z_5e93418b"
              }
            },
            "cached": true
          }
        ],
        "columns_added": []
      },
      "status": "success_with_data",
      "validation_passed": true
    }
  },
  "statistical_results": {
    "generation_metadata": {
      "status": "success",
      "functions_generated": 5,
      "output_file": "automatedstatisticalanalysisagent_functions.py",
      "module_size": 19385
    },
    "statistical_data": {
      "calculate_derived_metrics": {
        "type": "dataframe",
        "data": [
          {
            "document_name": "positive_test_1.txt",
            "positive_sentiment_raw": 0.95,
            "positive_sentiment_salience": 0.98,
            "positive_sentiment_confidence": 0.98,
            "negative_sentiment_raw": 0.0,
            "negative_sentiment_salience": 0.0,
            "negative_sentiment_confidence": 0.98,
            "net_sentiment": 0.95,
            "sentiment_magnitude": 0.475
          },
          {
            "document_name": "positive_test_2.txt",
            "positive_sentiment_raw": 0.9,
            "positive_sentiment_salience": 0.9,
            "positive_sentiment_confidence": 0.9,
            "negative_sentiment_raw": 0.0,
            "negative_sentiment_salience": 0.0,
            "negative_sentiment_confidence": 0.9,
            "net_sentiment": 0.9,
            "sentiment_magnitude": 0.45
          },
          {
            "document_name": "negative_test_1.txt",
            "positive_sentiment_raw": 0.0,
            "positive_sentiment_salience": 0.0,
            "positive_sentiment_confidence": 1.0,
            "negative_sentiment_raw": 1.0,
            "negative_sentiment_salience": 1.0,
            "negative_sentiment_confidence": 1.0,
            "net_sentiment": -1.0,
            "sentiment_magnitude": 0.5
          },
          {
            "document_name": "negative_test_2.txt",
            "positive_sentiment_raw": 0.0,
            "positive_sentiment_salience": 0.0,
            "positive_sentiment_confidence": 1.0,
            "negative_sentiment_raw": 1.0,
            "negative_sentiment_salience": 1.0,
            "negative_sentiment_confidence": 1.0,
            "net_sentiment": -1.0,
            "sentiment_magnitude": 0.5
          }
        ],
        "columns": [
          "document_name",
          "positive_sentiment_raw",
          "positive_sentiment_salience",
          "positive_sentiment_confidence",
          "negative_sentiment_raw",
          "negative_sentiment_salience",
          "negative_sentiment_confidence",
          "net_sentiment",
          "sentiment_magnitude"
        ],
        "index": [
          0,
          1,
          2,
          3
        ],
        "shape": [
          4,
          9
        ]
      },
      "calculate_descriptive_statistics": null,
      "calculate_reliability_analysis": null,
      "generate_statistical_summary_report": "STATISTICAL ANALYSIS SUMMARY REPORT\n==================================================\nAnalysis Timestamp: Unknown\nSample Size: Unknown\nAlpha Level: Unknown\nVariables: 0\n",
      "perform_anova_analysis": {
        "analysis_type": "One-Way ANOVA",
        "power_assessment": "Tier 3 (Exploratory): N < 15, n < 5 per group. Results are not statistically valid.",
        "results": {
          "positive_sentiment_raw": {
            "f_statistic": 1368.9999999999075,
            "p_value": 0.000729660804925113,
            "eta_squared": 0.9985412107950403,
            "interpretation_caveat": "p-value is uninterpretable due to extremely small sample size."
          },
          "negative_sentiment_raw": {
            "f_statistic": Infinity,
            "p_value": 0.0,
            "eta_squared": 1.0,
            "interpretation_caveat": "p-value is uninterpretable due to extremely small sample size."
          },
          "net_sentiment": {
            "f_statistic": 5928.999999999073,
            "p_value": 0.00016861984775464449,
            "eta_squared": 0.9996627887371439,
            "interpretation_caveat": "p-value is uninterpretable due to extremely small sample size."
          },
          "sentiment_magnitude": {
            "f_statistic": 9.00000000000002,
            "p_value": 0.09546596626670897,
            "eta_squared": 0.8181818181818175,
            "interpretation_caveat": "p-value is uninterpretable due to extremely small sample size."
          }
        }
      },
      "perform_correlation_analysis": {
        "analysis_type": "Pearson Correlation Matrix",
        "power_assessment": "Tier 3 (Exploratory): N < 15. Coefficients are unstable and not generalizable.",
        "correlation_matrix": {
          "positive_sentiment_raw": {
            "positive_sentiment_raw": 1.0,
            "negative_sentiment_raw": -0.999270339195075,
            "net_sentiment": 0.9998032125773368,
            "sentiment_magnitude": -0.8875880121309447,
            "positive_sentiment_salience": 0.9997601297041886,
            "negative_sentiment_salience": -0.999270339195075,
            "positive_sentiment_confidence": -0.7008750330749526,
            "negative_sentiment_confidence": -0.7008750330749526
          },
          "negative_sentiment_raw": {
            "positive_sentiment_raw": -0.999270339195075,
            "negative_sentiment_raw": 1.0,
            "net_sentiment": -0.9998313801522454,
            "sentiment_magnitude": 0.9045340337332908,
            "positive_sentiment_salience": -0.9981941294518665,
            "negative_sentiment_salience": 1.0,
            "positive_sentiment_confidence": 0.7276068751089996,
            "negative_sentiment_confidence": 0.7276068751089996
          },
          "net_sentiment": {
            "positive_sentiment_raw": 0.9998032125773368,
            "negative_sentiment_raw": -0.9998313801522454,
            "net_sentiment": 1.0,
            "sentiment_magnitude": -0.8965513683868898,
            "positive_sentiment_salience": 0.9991289097871089,
            "negative_sentiment_salience": -0.9998313801522454,
            "positive_sentiment_confidence": -0.7148870573840175,
            "negative_sentiment_confidence": -0.7148870573840175
          },
          "sentiment_magnitude": {
            "positive_sentiment_raw": -0.8875880121309447,
            "negative_sentiment_raw": 0.9045340337332908,
            "net_sentiment": -0.8965513683868898,
            "sentiment_magnitude": 1.0,
            "positive_sentiment_salience": -0.8772863620112928,
            "negative_sentiment_salience": 0.904534033733291,
            "positive_sentiment_confidence": 0.9506541513652698,
            "negative_sentiment_confidence": 0.9506541513652698
          },
          "positive_sentiment_salience": {
            "positive_sentiment_raw": 0.9997601297041886,
            "negative_sentiment_raw": -0.9981941294518665,
            "net_sentiment": 0.9991289097871089,
            "sentiment_magnitude": -0.8772863620112928,
            "positive_sentiment_salience": 1.0,
            "negative_sentiment_salience": -0.9981941294518665,
            "positive_sentiment_confidence": -0.6850848028410538,
            "negative_sentiment_confidence": -0.6850848028410538
          },
          "negative_sentiment_salience": {
            "positive_sentiment_raw": -0.999270339195075,
            "negative_sentiment_raw": 1.0,
            "net_sentiment": -0.9998313801522454,
            "sentiment_magnitude": 0.904534033733291,
            "positive_sentiment_salience": -0.9981941294518665,
            "negative_sentiment_salience": 1.0,
            "positive_sentiment_confidence": 0.7276068751089996,
            "negative_sentiment_confidence": 0.7276068751089996
          },
          "positive_sentiment_confidence": {
            "positive_sentiment_raw": -0.7008750330749526,
            "negative_sentiment_raw": 0.7276068751089996,
            "net_sentiment": -0.7148870573840175,
            "sentiment_magnitude": 0.9506541513652698,
            "positive_sentiment_salience": -0.6850848028410538,
            "negative_sentiment_salience": 0.7276068751089996,
            "positive_sentiment_confidence": 1.0,
            "negative_sentiment_confidence": 1.0
          },
          "negative_sentiment_confidence": {
            "positive_sentiment_raw": -0.7008750330749526,
            "negative_sentiment_raw": 0.7276068751089996,
            "net_sentiment": -0.7148870573840175,
            "sentiment_magnitude": 0.9506541513652698,
            "positive_sentiment_salience": -0.6850848028410538,
            "negative_sentiment_salience": 0.7276068751089996,
            "positive_sentiment_confidence": 1.0,
            "negative_sentiment_confidence": 1.0
          }
        }
      },
      "perform_statistical_analysis": {
        "analysis_metadata": {
          "timestamp": "2025-09-09T14:01:56.611299",
          "sample_size": 4,
          "alpha_level": 0.05,
          "variables_analyzed": [
            "positive_sentiment_raw",
            "positive_sentiment_salience",
            "positive_sentiment_confidence",
            "negative_sentiment_raw",
            "negative_sentiment_salience",
            "negative_sentiment_confidence"
          ]
        }
      },
      "run_complete_statistical_analysis": {
        "analysis_metadata": {
          "timestamp": "2025-09-09T14:01:56.637976",
          "sample_size": 4,
          "alpha_level": 0.05,
          "variables_analyzed": [
            "positive_sentiment_raw",
            "positive_sentiment_salience",
            "positive_sentiment_confidence",
            "negative_sentiment_raw",
            "negative_sentiment_salience",
            "negative_sentiment_confidence"
          ]
        }
      }
    },
    "status": "success_with_data",
    "validation_passed": true
  }
}