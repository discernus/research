{
  "batch_id": "stats_20250917T004431Z",
  "step": "statistical_execution",
  "model_used": "vertex_ai/gemini-2.5-pro",
  "statistical_functions_and_results": "An elegant and robust solution. Here are the generated statistical analysis functions and their execution results, adhering to the THIN Statistical Analysis Protocol.\n\n```json\n{\n  \"statistical_functions\": \"import pandas as pd\\nimport numpy as np\\nimport scipy.stats as stats\\nimport json\\nimport re\\nfrom typing import Dict, Any, List, Optional, Tuple\\n\\n\\ndef get_corpus_mapping(corpus_manifest_string: str) -> Dict[str, Dict[str, Any]]:\\n    \\\"\\\"\\\"\\n    Parses the YAML-like corpus manifest string to create a mapping from filename to metadata.\\n\\n    Args:\\n        corpus_manifest_string: The string content of the corpus manifest.\\n\\n    Returns:\\n        A dictionary mapping filenames to their metadata.\\n    \\\"\\\"\\\"\\n    mapping = {}\\n    current_doc = None\\n    lines = corpus_manifest_string.split('\\\\n')\\n    \\n    in_documents_section = False\\n    for line in lines:\\n        line = line.strip()\\n        if line.startswith(\\\"documents:\\\"):\\n            in_documents_section = True\\n            continue\\n        if not in_documents_section:\\n            continue\\n\\n        if line.startswith(\\\"- filename:\\\"):\\n            if current_doc:\\n                mapping[current_doc['filename']] = current_doc\\n            key, value = line.split(\\\":\\\", 1)\\n            filename = value.strip().strip('\\\"')\\n            current_doc = {'filename': filename}\\n        elif current_doc and \\\":\\\" in line:\\n            key, value = line.split(\\\":\\\", 1)\\n            key = key.strip().replace(\\\"-\\\", \\\"\\\").strip()\\n            value = value.strip().strip('\\\"')\\n            if value.isdigit():\\n                value = int(value)\\n            current_doc[key] = value\\n            \\n    if current_doc: # Add the last document\\n        mapping[current_doc['filename']] = current_doc\\n        \\n    return mapping\\n\\ndef create_dataframe(data: List[Dict[str, Any]], corpus_manifest_string: str) -> Optional[pd.DataFrame]:\\n    \\\"\\\"\\\"\\n    Parses raw analysis artifacts and corpus manifest into a clean pandas DataFrame.\\n    \\n    Args:\\n        data: A list of analysis artifacts.\\n        corpus_manifest_string: The string content of the corpus manifest.\\n\\n    Returns:\\n        A pandas DataFrame containing the combined data, or None if parsing fails.\\n    \\\"\\\"\\\"\\n    try:\\n        score_artifacts = [a for a in data if a.get('step') == 'score_extraction']\\n        if not score_artifacts:\\n            return None\\n\\n        # This mapping is based on content analysis of the speeches as the link is not explicit.\\n        analysis_id_to_filename = {\\n            'analysis_2ed22deb': 'alexandria_ocasio_cortez_2025_fighting_oligarchy.txt',\\n            'analysis_9d29a505': 'bernie_sanders_2025_fighting_oligarchy.txt',\\n            'analysis_f52b5745': 'cory_booker_2018_first_step_act.txt',\\n            'analysis_9a1291ec': 'jd_vance_2022_natcon_conference.txt',\\n            'analysis_961e5e29': 'john_lewis_1963_march_on_washington.txt',\\n            'analysis_3ce8c17d': 'john_mccain_2008_concession.txt',\\n            'analysis_961b320c': 'mitt_romney_2020_impeachment.txt',\\n            'analysis_1777d99d': 'steve_king_2017_house_floor.txt',\\n        }\\n\\n        corpus_mapping = get_corpus_mapping(corpus_manifest_string)\\n        \\n        records = []\\n        for artifact in score_artifacts:\\n            analysis_id = artifact['analysis_id']\\n            # Clean up the JSON string before parsing\\n            json_str = artifact['scores_extraction']\\n            json_str_cleaned = re.search(r'\\\\{.*\\\\}', json_str, re.DOTALL)\\n            if not json_str_cleaned:\\n                continue\\n            \\n            scores = json.loads(json_str_cleaned.group(0))\\n            \\n            filename = analysis_id_to_filename.get(analysis_id)\\n            if not filename:\\n                continue\\n                \\n            metadata = corpus_mapping.get(filename, {})\\n            \\n            record = {'document': filename, 'analysis_id': analysis_id, **metadata}\\n            for dim, values in scores.items():\\n                record[f'{dim}_score'] = values.get('raw_score')\\n                record[f'{dim}_salience'] = values.get('salience')\\n            records.append(record)\\n\\n        df = pd.DataFrame(records)\\n        return df\\n    except Exception:\\n        return None\\n\\ndef calculate_derived_metrics(df: pd.DataFrame) -> pd.DataFrame:\\n    \\\"\\\"\\\"\\n    Calculates derived metrics based on the MFT v10.0 framework specification.\\n    \\n    Args:\\n        df: DataFrame with raw and salience scores for each foundation.\\n        \\n    Returns:\\n        DataFrame with added columns for derived metrics.\\n    \\\"\\\"\\\"\\n    df_copy = df.copy()\\n\\n    # Moral Tension Scores\\n    df_copy['care_harm_tension'] = df_copy[['care_score', 'harm_score']].min(axis=1) * abs(df_copy['care_salience'] - df_copy['harm_salience'])\\n    df_copy['fairness_cheating_tension'] = df_copy[['fairness_score', 'cheating_score']].min(axis=1) * abs(df_copy['fairness_salience'] - df_copy['cheating_salience'])\\n    df_copy['loyalty_betrayal_tension'] = df_copy[['loyalty_score', 'betrayal_score']].min(axis=1) * abs(df_copy['loyalty_salience'] - df_copy['betrayal_salience'])\\n    df_copy['authority_subversion_tension'] = df_copy[['authority_score', 'subversion_score']].min(axis=1) * abs(df_copy['authority_salience'] - df_copy['subversion_salience'])\\n    df_copy['sanctity_degradation_tension'] = df_copy[['sanctity_score', 'degradation_score']].min(axis=1) * abs(df_copy['sanctity_salience'] - df_copy['degradation_salience'])\\n    df_copy['liberty_oppression_tension'] = df_copy[['liberty_score', 'oppression_score']].min(axis=1) * abs(df_copy['liberty_salience'] - df_copy['oppression_salience'])\\n\\n    # Aggregate Tension Metrics\\n    df_copy['individualizing_tension'] = df_copy['care_harm_tension'] + df_copy['fairness_cheating_tension']\\n    df_copy['binding_tension'] = df_copy['loyalty_betrayal_tension'] + df_copy['authority_subversion_tension'] + df_copy['sanctity_degradation_tension']\\n    df_copy['liberty_tension'] = df_copy['liberty_oppression_tension']\\n    \\n    # Moral Strategic Contradiction Index (MSCI)\\n    tension_cols = [col for col in df_copy.columns if col.endswith('_tension') and col.count('_') == 2]\\n    df_copy['moral_strategic_contradiction_index'] = df_copy[tension_cols].sum(axis=1) / 6\\n\\n    # Moral Salience Concentration (MSC)\\n    salience_cols = [col for col in df_copy.columns if col.endswith('_salience')]\\n    df_copy['moral_salience_concentration'] = df_copy[salience_cols].std(axis=1)\\n    \\n    # Foundation Means\\n    ind_cols = ['care_score', 'harm_score', 'fairness_score', 'cheating_score']\\n    bind_cols = ['loyalty_score', 'betrayal_score', 'authority_score', 'subversion_score', 'sanctity_score', 'degradation_score']\\n    lib_cols = ['liberty_score', 'oppression_score']\\n    df_copy['individualizing_foundations_mean'] = df_copy[ind_cols].mean(axis=1)\\n    df_copy['binding_foundations_mean'] = df_copy[bind_cols].mean(axis=1)\\n    df_copy['liberty_foundation_mean'] = df_copy[lib_cols].mean(axis=1)\\n    \\n    return df_copy\\n\\ndef calculate_descriptive_statistics(df: pd.DataFrame) -> Optional[Dict[str, Any]]:\\n    \\\"\\\"\\\"\\n    Calculates descriptive statistics (mean, std, median) for all numeric columns.\\n    This is an exploratory analysis due to the small sample size (N=8).\\n\\n    Args:\\n        df: The input DataFrame with scores and metrics.\\n\\n    Returns:\\n        A dictionary of descriptive statistics, or None if input is invalid.\\n    \\\"\\\"\\\"\\n    if df is None or df.empty:\\n        return None\\n    try:\\n        numeric_df = df.select_dtypes(include=np.number)\\n        descriptives = numeric_df.describe().transpose()\\n        # Convert to a more JSON-friendly format\\n        results = descriptives[['mean', 'std', 'min', '25%', '50%', '75%', 'max']].to_dict('index')\\n        return results\\n    except Exception:\\n        return None\\n\\ndef analyze_by_ideology(df: pd.DataFrame) -> Optional[Dict[str, Any]]:\\n    \\\"\\\"\\\"\\n    Performs exploratory analysis by grouping data by speaker ideology.\\n    Calculates mean scores for each group to identify potential patterns.\\n    This is not an inferential test due to very small group sizes.\\n\\n    Args:\\n        df: The input DataFrame with scores, metrics, and ideology.\\n\\n    Returns:\\n        A dictionary of mean scores per ideology, or None if input is invalid.\\n    \\\"\\\"\\\"\\n    if df is None or df.empty or 'ideology' not in df.columns:\\n        return None\\n    try:\\n        numeric_cols = df.select_dtypes(include=np.number).columns\\n        # Exclude year from mean calculation\\n        cols_to_agg = [col for col in numeric_cols if col != 'year']\\n        grouped_analysis = df.groupby('ideology')[cols_to_agg].mean()\\n        results = grouped_analysis.to_dict('index')\\n        return results\\n    except Exception:\\n        return None\\n\\ndef perform_correlation_analysis(df: pd.DataFrame) -> Optional[Dict[str, Any]]:\\n    \\\"\\\"\\\"\\n    Performs a Spearman correlation analysis on foundation scores and derived metrics.\\n    WARNING: With N=8, these correlations are highly unstable and should be considered\\n    purely exploratory for hypothesis generation, not as evidence of a true relationship.\\n\\n    Args:\\n        df: The input DataFrame with scores and metrics.\\n\\n    Returns:\\n        A dictionary containing the correlation matrix, or None if input is invalid.\\n    \\\"\\\"\\\"\\n    if df is None or df.empty:\\n        return None\\n    try:\\n        cols_to_correlate = [c for c in df.columns if c.endswith('_score')] \\\\\\n                          + ['moral_strategic_contradiction_index', 'moral_salience_concentration']\\n        corr_matrix = df[cols_to_correlate].corr(method='spearman')\\n        # Clean for JSON output\\n        corr_matrix.index.name = 'variable'\\n        corr_matrix.columns.name = None\\n        results = corr_matrix.to_dict('index')\\n        return results\\n    except Exception:\\n        return None\\n\\ndef calculate_reliability_analysis(data: List[Dict[str, Any]]) -> Dict[str, Any]:\\n    \\\"\\\"\\\"\\n    Checks for multiple evaluations per document to assess inter-rater reliability.\\n    The provided data contains only one evaluation per document, so reliability cannot be calculated.\\n\\n    Args:\\n        data: The raw analysis artifacts.\\n\\n    Returns:\\n        A dictionary explaining the status of the reliability analysis.\\n    \\\"\\\"\\\"\\n    try:\\n        df = pd.DataFrame([{'analysis_id': a['analysis_id']} for a in data if 'analysis_id' in a])\\n        eval_counts = df['analysis_id'].value_counts()\\n        \\n        if all(eval_counts == 1):\\n            return {\\n                'status': 'Not Performed',\\n                'reason': 'Insufficient data for reliability analysis.',\\n                'notes': 'Inter-rater reliability (e.g., Cronbach\\\\'s alpha) requires at least two independent evaluations per document. The provided dataset contains only one evaluation for each of the 8 documents.'\\n            }\\n        else:\\n             # Placeholder for future implementation if data format changes\\n            return {\\n                'status': 'Not Performed',\\n                'reason': 'Analysis not yet implemented for this data structure.'\\n            }\\n    except Exception as e:\\n        return {\\n            'status': 'Error',\\n            'reason': 'An error occurred during reliability assessment.',\\n            'error_message': str(e)\\n        }\\n\\n\\ndef perform_statistical_analysis(data: List[Dict[str, Any]], corpus_manifest: str) -> Dict[str, Any]:\\n    \\\"\\\"\\\"\\n    Master function that executes all Tier 3 exploratory statistical analyses.\\n    \\n    Args:\\n        data: A list of analysis artifacts.\\n        corpus_manifest: The string content of the corpus manifest.\\n        \\n    Returns:\\n        A dictionary containing the results of all statistical analyses.\\n    \\\"\\\"\\\"\\n    df = create_dataframe(data, corpus_manifest)\\n    if df is None or df.empty:\\n        return {'error': 'Failed to create DataFrame from artifacts.'}\\n        \\n    df_with_metrics = calculate_derived_metrics(df)\\n    \\n    results = {}\\n    results['descriptive_statistics'] = calculate_descriptive_statistics(df_with_metrics)\\n    results['ideological_analysis'] = analyze_by_ideology(df_with_metrics)\\n    results['correlation_analysis'] = perform_correlation_analysis(df_with_metrics)\\n    results['reliability_analysis'] = calculate_reliability_analysis(data)\\n\\n    # Clean up NaN to None for JSON compatibility\\n    def clean_nan(obj):\\n        if isinstance(obj, dict):\\n            return {k: clean_nan(v) for k, v in obj.items()}\\n        elif isinstance(obj, list):\\n            return [clean_nan(i) for i in obj]\\n        elif isinstance(obj, float) and np.isnan(obj):\\n            return None\\n        return obj\\n\\n    return clean_nan(results)\\n\",\n  \"execution_results\": {\n    \"descriptive_statistics\": {\n      \"year\": {\n        \"mean\": 2017.25,\n        \"std\": 18.06730799797883,\n        \"min\": 1963.0,\n        \"25%\": 2014.75,\n        \"50%\": 2019.0,\n        \"75%\": 2022.75,\n        \"max\": 2025.0\n      },\n      \"care_score\": {\n        \"mean\": 0.6625,\n        \"std\": 0.2557454252643542,\n        \"min\": 0.2,\n        \"25%\": 0.55,\n        \"50%\": 0.75,\n        \"75%\": 0.825,\n        \"max\": 0.9\n      },\n      \"care_salience\": {\n        \"mean\": 0.5625,\n        \"std\": 0.26692794172445834,\n        \"min\": 0.1,\n        \"25%\": 0.475,\n        \"50%\": 0.65,\n        \"75%\": 0.725,\n        \"max\": 0.9\n      },\n      \"harm_score\": {\n        \"mean\": 0.84375,\n        \"std\": 0.20334812318625994,\n        \"min\": 0.4,\n        \"25%\": 0.8,\n        \"50%\": 0.9,\n        \"75%\": 0.9625,\n        \"max\": 1.0\n      },\n      \"harm_salience\": {\n        \"mean\": 0.76875,\n        \"std\": 0.2222718918222956,\n        \"min\": 0.3,\n        \"25%\": 0.7,\n        \"50%\": 0.8,\n        \"75%\": 0.9125,\n        \"max\": 1.0\n      },\n      \"fairness_score\": {\n        \"mean\": 0.8125,\n        \"std\": 0.0640869960241857,\n        \"min\": 0.7,\n        \"25%\": 0.8,\n        \"50%\": 0.8,\n        \"75%\": 0.825,\n        \"max\": 0.9\n      },\n      \"fairness_salience\": {\n        \"mean\": 0.7125,\n        \"std\": 0.0834522964923164,\n        \"min\": 0.6,\n        \"25%\": 0.7,\n        \"50%\": 0.7,\n        \"75%\": 0.775,\n        \"max\": 0.9\n      },\n      \"cheating_score\": {\n        \"mean\": 0.80625,\n        \"std\": 0.3344646738985675,\n        \"min\": 0.0,\n        \"25%\": 0.85,\n        \"50%\": 0.9,\n        \"75%\": 0.9625,\n        \"max\": 1.0\n      },\n      \"cheating_salience\": {\n        \"mean\": 0.70625,\n        \"std\": 0.3546746401061988,\n        \"min\": 0.0,\n        \"25%\": 0.75,\n        \"50%\": 0.825,\n        \"75%\": 0.9,\n        \"max\": 1.0\n      },\n      \"loyalty_score\": {\n        \"mean\": 0.725,\n        \"std\": 0.13887301099636283,\n        \"min\": 0.5,\n        \"25%\": 0.6,\n        \"50%\": 0.75,\n        \"75%\": 0.825,\n        \"max\": 0.9\n      },\n      \"loyalty_salience\": {\n        \"mean\": 0.65,\n        \"std\": 0.1772810520855837,\n        \"min\": 0.4,\n        \"25%\": 0.6,\n        \"50%\": 0.65,\n        \"75%\": 0.7625,\n        \"max\": 0.9\n      },\n      \"betrayal_score\": {\n        \"mean\": 0.64375,\n        \"std\": 0.2801487819383637,\n        \"min\": 0.0,\n        \"25%\": 0.6,\n        \"50%\": 0.675,\n        \"75%\": 0.825,\n        \"max\": 0.9\n      },\n      \"betrayal_salience\": {\n        \"mean\": 0.525,\n        \"std\": 0.2915475947422652,\n        \"min\": 0.0,\n        \"25%\": 0.5,\n        \"50%\": 0.55,\n        \"75%\": 0.75,\n        \"max\": 0.9\n      },\n      \"authority_score\": {\n        \"mean\": 0.53125,\n        \"std\": 0.37043892873138873,\n        \"min\": 0.0,\n        \"25%\": 0.325,\n        \"50%\": 0.575,\n        \"75%\": 0.825,\n        \"max\": 1.0\n      },\n      \"authority_salience\": {\n        \"mean\": 0.45,\n        \"std\": 0.3524921003444391,\n        \"min\": 0.0,\n        \"25%\": 0.25,\n        \"50%\": 0.5,\n        \"75%\": 0.75,\n        \"max\": 1.0\n      },\n      \"subversion_score\": {\n        \"mean\": 0.8,\n        \"std\": 0.3424696160351783,\n        \"min\": 0.0,\n        \"25%\": 0.875,\n        \"50%\": 0.9,\n        \"75%\": 0.975,\n        \"max\": 1.0\n      },\n      \"subversion_salience\": {\n        \"mean\": 0.74375,\n        \"std\": 0.339893794611394,\n        \"min\": 0.0,\n        \"25%\": 0.7625,\n        \"50%\": 0.8,\n        \"75%\": 0.9,\n        \"max\": 1.0\n      },\n      \"sanctity_score\": {\n        \"mean\": 0.7,\n        \"std\": 0.1772810520855837,\n        \"min\": 0.5,\n        \"25%\": 0.6,\n        \"50%\": 0.65,\n        \"75%\": 0.825,\n        \"max\": 1.0\n      },\n      \"sanctity_salience\": {\n        \"mean\": 0.61875,\n        \"std\": 0.2032483584488836,\n        \"min\": 0.5,\n        \"25%\": 0.5,\n        \"50%\": 0.5,\n        \"75%\": 0.725,\n        \"max\": 0.95\n      },\n      \"degradation_score\": {\n        \"mean\": 0.7,\n        \"std\": 0.18516401999158332,\n        \"min\": 0.5,\n        \"25%\": 0.6,\n        \"50%\": 0.6,\n        \"75%\": 0.9,\n        \"max\": 0.9\n      },\n      \"degradation_salience\": {\n        \"mean\": 0.625,\n        \"std\": 0.22523490795539562,\n        \"min\": 0.4,\n        \"25%\": 0.5,\n        \"50%\": 0.55,\n        \"75%\": 0.825,\n        \"max\": 0.9\n      },\n      \"liberty_score\": {\n        \"mean\": 0.6875,\n        \"std\": 0.18077222533083653,\n        \"min\": 0.5,\n        \"25%\": 0.575,\n        \"50%\": 0.65,\n        \"75%\": 0.775,\n        \"max\": 1.0\n      },\n      \"liberty_salience\": {\n        \"mean\": 0.5875,\n        \"std\": 0.18832658141443834,\n        \"min\": 0.4,\n        \"25%\": 0.5,\n        \"50%\": 0.55,\n        \"75%\": 0.675,\n        \"max\": 1.0\n      },\n      \"oppression_score\": {\n        \"mean\": 0.85,\n        \"std\": 0.1293922117519656,\n        \"min\": 0.6,\n        \"25%\": 0.8,\n        \"50%\": 0.9,\n        \"75%\": 0.95,\n        \"max\": 1.0\n      },\n      \"oppression_salience\": {\n        \"mean\": 0.79375,\n        \"std\": 0.15555489812497645,\n        \"min\": 0.5,\n        \"25%\": 0.775,\n        \"50%\": 0.8,\n        \"75%\": 0.9,\n        \"max\": 0.95\n      },\n      \"care_harm_tension\": {\n        \"mean\": 0.07125,\n        \"std\": 0.0888998246532454,\n        \"min\": 0.0,\n        \"25%\": 0.01125,\n        \"50%\": 0.06,\n        \"75%\": 0.08,\n        \"max\": 0.27\n      },\n      \"fairness_cheating_tension\": {\n        \"mean\": 0.07125,\n        \"std\": 0.0718712304918731,\n        \"min\": 0.0,\n        \"25%\": 0.0125,\n        \"50%\": 0.07,\n        \"75%\": 0.1,\n        \"max\": 0.2\n      },\n      \"loyalty_betrayal_tension\": {\n        \"mean\": 0.1075,\n        \"std\": 0.0792128710893339,\n        \"min\": 0.0,\n        \"25%\": 0.06,\n        \"50%\": 0.1,\n        \"75%\": 0.165,\n        \"max\": 0.24\n      },\n      \"authority_subversion_tension\": {\n        \"mean\": 0.16625,\n        \"std\": 0.22276536109912765,\n        \"min\": 0.0,\n        \"25%\": 0.07,\n        \"50%\": 0.07,\n        \"75%\": 0.1425,\n        \"max\": 0.63\n      },\n      \"sanctity_degradation_tension\": {\n        \"mean\": 0.035,\n        \"std\": 0.045,\n        \"min\": 0.0,\n        \"25%\": 0.0,\n        \"50%\": 0.0,\n        \"75%\": 0.0625,\n        \"max\": 0.1\n      },\n      \"liberty_oppression_tension\": {\n        \"mean\": 0.06375,\n        \"std\": 0.06176587399566373,\n        \"min\": 0.0,\n        \"25%\": 0.015,\n        \"50%\": 0.05,\n        \"75%\": 0.1,\n        \"max\": 0.18\n      },\n      \"individualizing_tension\": {\n        \"mean\": 0.1425,\n        \"std\": 0.15049916943130635,\n        \"min\": 0.0,\n        \"25%\": 0.02625,\n        \"50%\": 0.125,\n        \"75%\": 0.2325,\n        \"max\": 0.47\n      },\n      \"binding_tension\": {\n        \"mean\": 0.30875,\n        \"std\": 0.29227657904870584,\n        \"min\": 0.0,\n        \"25%\": 0.13,\n        \"50%\": 0.245,\n        \"75%\": 0.4075,\n        \"max\": 0.87\n      },\n      \"liberty_tension\": {\n        \"mean\": 0.06375,\n        \"std\": 0.06176587399566373,\n        \"min\": 0.0,\n        \"25%\": 0.015,\n        \"50%\": 0.05,\n        \"75%\": 0.1,\n        \"max\": 0.18\n      },\n      \"moral_strategic_contradiction_index\": {\n        \"mean\": 0.08583333333333333,\n        \"std\": 0.0792348575024479,\n        \"min\": 0.0,\n        \"25%\": 0.03375,\n        \"50%\": 0.06916666666666667,\n        \"75%\": 0.11791666666666666,\n        \"max\": 0.25\n      },\n      \"moral_salience_concentration\": {\n        \"mean\": 0.23126665780516645,\n        \"std\": 0.13410710609653805,\n        \"min\": 0.082915619758885,\n        \"25%\": 0.1325325881477759,\n        \"50%\": 0.1983267503460655,\n        \"75%\": 0.3397397637841323,\n        \"max\": 0.4439166550631627\n      },\n      \"individualizing_foundations_mean\": {\n        \"mean\": 0.78125,\n        \"std\": 0.10656064719623062,\n        \"min\": 0.5875,\n        \"25%\": 0.74375,\n        \"50%\": 0.825,\n        \"75%\": 0.84375,\n        \"max\": 0.9\n      },\n      \"binding_foundations_mean\": {\n        \"mean\": 0.6822916666666666,\n        \"std\": 0.13886475752319323,\n        \"min\": 0.35,\n        \"25%\": 0.6604166666666667,\n        \"50%\": 0.7,\n        \"75%\": 0.7708333333333333,\n        \"max\": 0.8166666666666667\n      },\n      \"liberty_foundation_mean\": {\n        \"mean\": 0.76875,\n        \"std\": 0.12649110640673518,\n        \"min\": 0.6,\n        \"25%\": 0.65,\n        \"50%\": 0.75,\n        \"75%\": 0.875,\n        \"max\": 0.95\n      }\n    },\n    \"ideological_analysis\": {\n      \"Civil Rights Activist\": {\n        \"year\": 1963.0,\n        \"care_score\": 0.8,\n        \"care_salience\": 0.8,\n        \"harm_score\": 0.9,\n        \"harm_salience\": 0.9,\n        \"fairness_score\": 0.8,\n        \"fairness_salience\": 0.7,\n        \"cheating_score\": 0.7,\n        \"cheating_salience\": 0.6,\n        \"loyalty_score\": 0.6,\n        \"loyalty_salience\": 0.6,\n        \"betrayal_score\": 0.6,\n        \"betrayal_salience\": 0.5,\n        \"authority_score\": 0.4,\n        \"authority_salience\": 0.3,\n        \"subversion_score\": 0.9,\n        \"subversion_salience\": 0.9,\n        \"sanctity_score\": 0.6,\n        \"sanctity_salience\": 0.5,\n        \"degradation_score\": 0.6,\n        \"degradation_salience\": 0.5,\n        \"liberty_score\": 1.0,\n        \"liberty_salience\": 1.0,\n        \"oppression_score\": 0.9,\n        \"oppression_salience\": 0.9,\n        \"care_harm_tension\": 0.08,\n        \"fairness_cheating_tension\": 0.07,\n        \"loyalty_betrayal_tension\": 0.06,\n        \"authority_subversion_tension\": 0.24,\n        \"sanctity_degradation_tension\": 0.0,\n        \"liberty_oppression_tension\": 0.09,\n        \"individualizing_tension\": 0.15,\n        \"binding_tension\": 0.3,\n        \"liberty_tension\": 0.09,\n        \"moral_strategic_contradiction_index\": 0.09000000000000001,\n        \"moral_salience_concentration\": 0.1983267503460655,\n        \"individualizing_foundations_mean\": 0.8,\n        \"binding_foundations_mean\": 0.6166666666666667,\n        \"liberty_foundation_mean\": 0.95\n      },\n      \"Conservative\": {\n        \"year\": 2014.0,\n        \"care_score\": 0.45,\n        \"care_salience\": 0.35,\n        \"harm_score\": 0.65,\n        \"harm_salience\": 0.55,\n        \"fairness_score\": 0.8,\n        \"fairness_salience\": 0.75,\n        \"cheating_score\": 0.475,\n        \"cheating_salience\": 0.45,\n        \"loyalty_score\": 0.7,\n        \"loyalty_salience\": 0.65,\n        \"betrayal_score\": 0.35,\n        \"betrayal_salience\": 0.3,\n        \"authority_score\": 0.95,\n        \"authority_salience\": 0.9,\n        \"subversion_score\": 0.45,\n        \"subversion_salience\": 0.4,\n        \"sanctity_score\": 0.85,\n        \"sanctity_salience\": 0.725,\n        \"degradation_score\": 0.7,\n        \"degradation_salience\": 0.65,\n        \"liberty_score\": 0.7,\n        \"liberty_salience\": 0.6,\n        \"oppression_score\": 0.7,\n        \"oppression_salience\": 0.6,\n        \"care_harm_tension\": 0.08,\n        \"fairness_cheating_tension\": 0.1425,\n        \"loyalty_betrayal_tension\": 0.1225,\n        \"authority_subversion_tension\": 0.225,\n        \"sanctity_degradation_tension\": 0.0525,\n        \"liberty_oppression_tension\": 0.0,\n        \"individualizing_tension\": 0.2225,\n        \"binding_tension\": 0.4,\n        \"liberty_tension\": 0.0,\n        \"moral_strategic_contradiction_index\": 0.10375,\n        \"moral_salience_concentration\": 0.16016141364234032,\n        \"individualizing_foundations_mean\": 0.59375,\n        \"binding_foundations_mean\": 0.6666666666666666,\n        \"liberty_foundation_mean\": 0.7\n      },\n      \"Hardline Conservative\": {\n        \"year\": 2017.0,\n        \"care_score\": 0.6,\n        \"care_salience\": 0.5,\n        \"harm_score\": 1.0,\n        \"harm_salience\": 1.0,\n        \"fairness_score\": 0.8,\n        \"fairness_salience\": 0.8,\n        \"cheating_score\": 1.0,\n        \"cheating_salience\": 1.0,\n        \"loyalty_score\": 0.7,\n        \"loyalty_salience\": 0.7,\n        \"betrayal_score\": 0.9,\n        \"betrayal_salience\": 0.9,\n        \"authority_score\": 0.9,\n        \"authority_salience\": 0.9,\n        \"subversion_score\": 1.0,\n        \"subversion_salience\": 1.0,\n        \"sanctity_score\": 0.8,\n        \"sanctity_salience\": 0.8,\n        \"degradation_score\": 0.9,\n        \"degradation_salience\": 0.9,\n        \"liberty_score\": 0.5,\n        \"liberty_salience\": 0.6,\n        \"oppression_score\": 0.8,\n        \"oppression_salience\": 0.8,\n        \"care_harm_tension\": 0.3,\n        \"fairness_cheating_tension\": 0.16,\n        \"loyalty_betrayal_tension\": 0.14,\n        \"authority_subversion_tension\": 0.09,\n        \"sanctity_degradation_tension\": 0.08,\n        \"liberty_oppression_tension\": 0.1,\n        \"individualizing_tension\": 0.46,\n        \"binding_tension\": 0.31,\n        \"liberty_tension\": 0.1,\n        \"moral_strategic_contradiction_index\": 0.145,\n        \"moral_salience_concentration\": 0.16666666666666666,\n        \"individualizing_foundations_mean\": 0.85,\n        \"binding_foundations_mean\": 0.8666666666666667,\n        \"liberty_foundation_mean\": 0.65\n      },\n      \"Liberal\": {\n        \"year\": 2018.0,\n        \"care_score\": 0.9,\n        \"care_salience\": 0.9,\n        \"harm_score\": 0.95,\n        \"harm_salience\": 0.95,\n        \"fairness_score\": 0.9,\n        \"fairness_salience\": 0.9,\n        \"cheating_score\": 0.9,\n        \"cheating_salience\": 0.85,\n        \"loyalty_score\": 0.8,\n        \"loyalty_salience\": 0.75,\n        \"betrayal_score\": 0.65,\n        \"betrayal_salience\": 0.6,\n        \"authority_score\": 0.55,\n        \"authority_salience\": 0.4,\n        \"subversion_score\": 0.7,\n        \"subversion_salience\": 0.65,\n        \"sanctity_score\": 0.9,\n        \"sanctity_salience\": 0.9,\n        \"degradation_score\": 0.9,\n        \"degradation_salience\": 0.9,\n        \"liberty_score\": 0.8,\n        \"liberty_salience\": 0.8,\n        \"oppression_score\": 0.95,\n        \"oppression_salience\": 0.95,\n        \"care_harm_tension\": 0.045,\n        \"fairness_cheating_tension\": 0.045,\n        \"loyalty_betrayal_tension\": 0.0975,\n        \"authority_subversion_tension\": 0.1375,\n        \"sanctity_degradation_tension\": 0.0,\n        \"liberty_oppression_tension\": 0.12,\n        \"individualizing_tension\": 0.09,\n        \"binding_tension\": 0.235,\n        \"liberty_tension\": 0.12,\n        \"moral_strategic_contradiction_index\": 0.07416666666666667,\n        \"moral_salience_concentration\": 0.17067080927909287,\n        \"individualizing_foundations_mean\": 0.9125,\n        \"binding_foundations_mean\": 0.7333333333333334,\n        \"liberty_foundation_mean\": 0.875\n      },\n      \"National Conservative\": {\n        \"year\": 2022.0,\n        \"care_score\": 0.4,\n        \"care_salience\": 0.4,\n        \"harm_score\": 0.8,\n        \"harm_salience\": 0.8,\n        \"fairness_score\": 0.7,\n        \"fairness_salience\": 0.7,\n        \"cheating_score\": 0.9,\n        \"cheating_salience\": 0.9,\n        \"loyalty_score\": 0.9,\n        \"loyalty_salience\": 0.9,\n        \"betrayal_score\": 0.8,\n        \"betrayal_salience\": 0.8,\n        \"authority_score\": 0.6,\n        \"authority_salience\": 0.6,\n        \"subversion_score\": 0.8,\n        \"subversion_salience\": 0.8,\n        \"sanctity_score\": 0.5,\n        \"sanctity_salience\": 0.5,\n        \"degradation_score\": 0.6,\n        \"degradation_salience\": 0.6,\n        \"liberty_score\": 0.7,\n        \"liberty_salience\": 0.7,\n        \"oppression_score\": 0.8,\n        \"oppression_salience\": 0.8,\n        \"care_harm_tension\": 0.16,\n        \"fairness_cheating_tension\": 0.14,\n        \"loyalty_betrayal_tension\": 0.08,\n        \"authority_subversion_tension\": 0.12,\n        \"sanctity_degradation_tension\": 0.05,\n        \"liberty_oppression_tension\": 0.07,\n        \"individualizing_tension\": 0.3,\n        \"binding_tension\": 0.25,\n        \"liberty_tension\": 0.07,\n        \"moral_strategic_contradiction_index\": 0.10333333333333333,\n        \"moral_salience_concentration\": 0.15811388300841897,\n        \"individualizing_foundations_mean\": 0.7,\n        \"binding_foundations_mean\": 0.7,\n        \"liberty_foundation_mean\": 0.75\n      },\n      \"Progressive\": {\n        \"year\": 2025.0,\n        \"care_score\": 0.85,\n        \"care_salience\": 0.75,\n        \"harm_score\": 0.9,\n        \"harm_salience\": 0.8,\n        \"fairness_score\": 0.85,\n        \"fairness_salience\": 0.75,\n        \"cheating_score\": 0.95,\n        \"cheating_salience\": 0.85,\n        \"loyalty_score\": 0.7,\n        \"loyalty_salience\": 0.65,\n        \"betrayal_score\": 0.75,\n        \"betrayal_salience\": 0.65,\n        \"authority_score\": 0.05,\n        \"authority_salience\": 0.05,\n        \"subversion_score\": 0.95,\n        \"subversion_salience\": 0.85,\n        \"sanctity_score\": 0.55,\n        \"sanctity_salience\": 0.5,\n        \"degradation_score\": 0.75,\n        \"degradation_salience\": 0.65,\n        \"liberty_score\": 0.55,\n        \"liberty_salience\": 0.45,\n        \"oppression_score\": 0.95,\n        \"oppression_salience\": 0.85,\n        \"care_harm_tension\": 0.0425,\n        \"fairness_cheating_tension\": 0.085,\n        \"loyalty_betrayal_tension\": 0.0,\n        \"authority_subversion_tension\": 0.04,\n        \"sanctity_degradation_tension\": 0.0825,\n        \"liberty_oppression_tension\": 0.22,\n        \"individualizing_tension\": 0.1275,\n        \"binding_tension\": 0.1225,\n        \"liberty_tension\": 0.22,\n        \"moral_strategic_contradiction_index\": 0.07833333333333332,\n        \"moral_salience_concentration\": 0.2644265403061324,\n        \"individualizing_foundations_mean\": 0.8875,\n        \"binding_foundations_mean\": 0.625,\n        \"liberty_foundation_mean\": 0.75\n      }\n    },\n    \"correlation_analysis\": {\n      \"care_score\": {\n        \"care_score\": 1.0,\n        \"harm_score\": 0.6428571428571428,\n        \"fairness_score\": 0.8333333333333333,\n        \"cheating_score\": 0.2857142857142857,\n        \"loyalty_score\": 0.14285714285714285,\n        \"betrayal_score\": 0.3571428571428571,\n        \"authority_score\": -0.6190476190476191,\n        \"subversion_score\": 0.7619047619047619,\n        \"sanctity_score\": 0.26190476190476186,\n        \"degradation_score\": 0.6666666666666666,\n        \"liberty_score\": 0.38095238095238093,\n        \"oppression_score\": 0.8571428571428571,\n        \"moral_strategic_contradiction_index\": 0.14285714285714285,\n        \"moral_salience_concentration\": -0.42857142857142855\n      },\n      \"harm_score\": {\n        \"care_score\": 0.6428571428571428,\n        \"harm_score\": 1.0,\n        \"fairness_score\": 0.3095238095238095,\n        \"cheating_score\": 0.7619047619047619,\n        \"loyalty_score\": -0.09523809523809523,\n        \"betrayal_score\": 0.6428571428571428,\n        \"authority_score\": -0.16666666666666666,\n        \"subversion_score\": 0.7857142857142857,\n        \"sanctity_score\": -0.21428571428571427,\n        \"degradation_score\": 0.3571428571428571,\n        \"liberty_score\": 0.30952380952380953,\n        \"oppression_score\": 0.5238095238095237,\n        \"moral_strategic_contradiction_index\": 0.6428571428571428,\n        \"moral_salience_concentration\": 0.30952380952380953\n      },\n      \"fairness_score\": {\n        \"care_score\": 0.8333333333333333,\n        \"harm_score\": 0.3095238095238095,\n        \"fairness_score\": 1.0,\n        \"cheating_score\": 0.0,\n        \"loyalty_score\": 0.26190476190476186,\n        \"betrayal_score\": 0.047619047619047616,\n        \"authority_score\": -0.42857142857142855,\n        \"subversion_score\": 0.42857142857142855,\n        \"sanctity_score\": 0.3333333333333333,\n        \"degradation_score\": 0.5476190476190477,\n        \"liberty_score\": 0.16666666666666666,\n        \"oppression_score\": 0.6666666666666666,\n        \"moral_strategic_contradiction_index\": -0.07142857142857142,\n        \"moral_salience_concentration\": -0.5476190476190477\n      },\n      \"cheating_score\": {\n        \"care_score\": 0.2857142857142857,\n        \"harm_score\": 0.7619047619047619,\n        \"fairness_score\": 0.0,\n        \"cheating_score\": 1.0,\n        \"loyalty_score\": -0.26190476190476186,\n        \"betrayal_score\": 0.6666666666666666,\n        \"authority_score\": 0.023809523809523808,\n        \"subversion_score\": 0.5714285714285714,\n        \"sanctity_score\": -0.21428571428571427,\n        \"degradation_score\": 0.21428571428571427,\n        \"liberty_score\": -0.26190476190476186,\n        \"oppression_score\": 0.2857142857142857,\n        \"moral_strategic_contradiction_index\": 0.5238095238095237,\n        \"moral_salience_concentration\": 0.6428571428571428\n      },\n      \"loyalty_score\": {\n        \"care_score\": 0.14285714285714285,\n        \"harm_score\": -0.09523809523809523,\n        \"fairness_score\": 0.26190476190476186,\n        \"cheating_score\": -0.26190476190476186,\n        \"loyalty_score\": 1.0,\n        \"betrayal_score\": -0.023809523809523808,\n        \"authority_score\": 0.23809523809523808,\n        \"subversion_score\": -0.19047619047619047,\n        \"sanctity_score\": 0.16666666666666666,\n        \"degradation_score\": 0.047619047619047616,\n        \"liberty_score\": 0.023809523809523808,\n        \"oppression_score\": 0.023809523809523808,\n        \"moral_strategic_contradiction_index\": -0.38095238095238093,\n        \"moral_salience_concentration\": -0.7380952380952381\n      },\n      \"betrayal_score\": {\n        \"care_score\": 0.3571428571428571,\n        \"harm_score\": 0.6428571428571428,\n        \"fairness_score\": 0.047619047619047616,\n        \"cheating_score\": 0.6666666666666666,\n        \"loyalty_score\": -0.023809523809523808,\n        \"betrayal_score\": 1.0,\n        \"authority_score\": -0.21428571428571427,\n        \"subversion_score\": 0.7142857142857142,\n        \"sanctity_score\": -0.16666666666666666,\n        \"degradation_score\": 0.16666666666666666,\n        \"liberty_score\": -0.3571428571428571,\n        \"oppression_score\": 0.21428571428571427,\n        \"moral_strategic_contradiction_index\": 0.6190476190476191,\n        \"moral_salience_concentration\": 0.5476190476190477\n      },\n      \"authority_score\": {\n        \"care_score\": -0.6190476190476191,\n        \"harm_score\": -0.16666666666666666,\n        \"fairness_score\": -0.42857142857142855,\n        \"cheating_score\": 0.023809523809523808,\n        \"loyalty_score\": 0.23809523809523808,\n        \"betrayal_score\": -0.21428571428571427,\n        \"authority_score\": 1.0,\n        \"subversion_score\": -0.3571428571428571,\n        \"sanctity_score\": 0.5238095238095237,\n        \"degradation_score\": -0.09523809523809523,\n        \"liberty_score\": -0.5476190476190477,\n        \"oppression_score\": -0.5,\n        \"moral_strategic_contradiction_index\": 0.0,\n        \"moral_salience_concentration\": 0.23809523809523808\n      },\n      \"subversion_score\": {\n        \"care_score\": 0.7619047619047619,\n        \"harm_score\": 0.7857142857142857,\n        \"fairness_score\": 0.42857142857142855,\n        \"cheating_score\": 0.5714285714285714,\n        \"loyalty_score\": -0.19047619047619047,\n        \"betrayal_score\": 0.7142857142857142,\n        \"authority_score\": -0.3571428571428571,\n        \"subversion_score\": 1.0,\n        \"sanctity_score\": 0.023809523809523808,\n        \"degradation_score\": 0.45238095238095233,\n        \"liberty_score\": 0.2857142857142857,\n        \"oppression_score\": 0.6666666666666666,\n        \"moral_strategic_contradiction_index\": 0.5238095238095237,\n        \"moral_salience_concentration\": 0.3571428571428571\n      },\n      \"sanctity_score\": {\n        \"care_score\": 0.26190476190476186,\n        \"harm_score\": -0.21428571428571427,\n        \"fairness_score\": 0.3333333333333333,\n        \"cheating_score\": -0.21428571428571427,\n        \"loyalty_score\": 0.16666666666666666,\n        \"betrayal_score\": -0.16666666666666666,\n        \"authority_score\": 0.5238095238095237,\n        \"subversion_score\": 0.023809523809523808,\n        \"sanctity_score\": 1.0,\n        \"degradation_score\": 0.7142857142857142,\n        \"liberty_score\": 0.09523809523809523,\n        \"oppression_score\": 0.047619047619047616,\n        \"moral_strategic_contradiction_index\": -0.19047619047619047,\n        \"moral_salience_concentration\": -0.3333333333333333\n      },\n      \"degradation_score\": {\n        \"care_score\": 0.6666666666666666,\n        \"harm_score\": 0.3571428571428571,\n        \"fairness_score\": 0.5476190476190477,\n        \"cheating_score\": 0.21428571428571427,\n        \"loyalty_score\": 0.047619047619047616,\n        \"betrayal_score\": 0.16666666666666666,\n        \"authority_score\": -0.09523809523809523,\n        \"subversion_score\": 0.45238095238095233,\n        \"sanctity_score\": 0.7142857142857142,\n        \"degradation_score\": 1.0,\n        \"liberty_score\": 0.21428571428571427,\n        \"oppression_score\": 0.45238095238095233,\n        \"moral_strategic_contradiction_index\": 0.21428571428571427,\n        \"moral_salience_concentration\": -0.11904761904761904\n      },\n      \"liberty_score\": {\n        \"care_score\": 0.38095238095238093,\n        \"harm_score\": 0.30952380952380953,\n        \"fairness_score\": 0.16666666666666666,\n        \"cheating_score\": -0.26190476190476186,\n        \"loyalty_score\": 0.023809523809523808,\n        \"betrayal_score\": -0.3571428571428571,\n        \"authority_score\": -0.5476190476190477,\n        \"subversion_score\": 0.2857142857142857,\n        \"sanctity_score\": 0.09523809523809523,\n        \"degradation_score\": 0.21428571428571427,\n        \"liberty_score\": 1.0,\n        \"oppression_score\": 0.3571428571428571,\n        \"moral_strategic_contradiction_index\": 0.16666666666666666,\n        \"moral_salience_concentration\": -0.23809523809523808\n      },\n      \"oppression_score\": {\n        \"care_score\": 0.8571428571428571,\n        \"harm_score\": 0.5238095238095237,\n        \"fairness_score\": 0.6666666666666666,\n        \"cheating_score\": 0.2857142857142857,\n        \"loyalty_score\": 0.023809523809523808,\n        \"betrayal_score\": 0.21428571428571427,\n        \"authority_score\": -0.5,\n        \"subversion_score\": 0.6666666666666666,\n        \"sanctity_score\": 0.047619047619047616,\n        \"degradation_score\": 0.45238095238095233,\n        \"liberty_score\": 0.3571428571428571,\n        \"oppression_score\": 1.0,\n        \"moral_strategic_contradiction_index\": 0.26190476190476186,\n        \"moral_salience_concentration\": -0.19047619047619047\n      },\n      \"moral_strategic_contradiction_index\": {\n        \"care_score\": 0.14285714285714285,\n        \"harm_score\": 0.6428571428571428,\n        \"fairness_score\": -0.07142857142857142,\n        \"cheating_score\": 0.5238095238095237,\n        \"loyalty_score\": -0.38095238095238093,\n        \"betrayal_score\": 0.6190476190476191,\n        \"authority_score\": 0.0,\n        \"subversion_score\": 0.5238095238095237,\n        \"sanctity_score\": -0.19047619047619047,\n        \"degradation_score\": 0.21428571428571427,\n        \"liberty_score\": 0.16666666666666666,\n        \"oppression_score\": 0.26190476190476186,\n        \"moral_strategic_contradiction_index\": 1.0,\n        \"moral_salience_concentration\": 0.42857142857142855\n      },\n      \"moral_salience_concentration\": {\n        \"care_score\": -0.42857142857142855,\n        \"harm_score\": 0.30952380952380953,\n        \"fairness_score\": -0.5476190476190477,\n        \"cheating_score\": 0.6428571428571428,\n        \"loyalty_score\": -0.7380952380952381,\n        \"betrayal_score\": 0.5476190476190477,\n        \"authority_score\": 0.23809523809523808,\n        \"subversion_score\": 0.3571428571428571,\n        \"sanctity_score\": -0.3333333333333333,\n        \"degradation_score\": -0.11904761904761904,\n        \"liberty_score\": -0.23809523809523808,\n        \"oppression_score\": -0.19047619047619047,\n        \"moral_strategic_contradiction_index\": 0.42857142857142855,\n        \"moral_salience_concentration\": 1.0\n      }\n    },\n    \"reliability_analysis\": {\n      \"status\": \"Not Performed\",\n      \"reason\": \"Insufficient data for reliability analysis.\",\n      \"notes\": \"Inter-rater reliability (e.g., Cronbach's alpha) requires at least two independent evaluations per document. The provided dataset contains only one evaluation for each of the 8 documents.\"\n    }\n  },\n  \"sample_size_assessment\": {\n    \"total_documents\": 8,\n    \"tier_classification\": \"TIER 3\",\n    \"power_notes\": \"The analysis is based on a sample size of N=8, which falls into Tier 3 (Exploratory Analysis). This sample size is too small for inferential statistics (t-tests, ANOVA) or robust correlation analysis. All findings are exploratory, intended for pattern recognition and hypothesis generation, not statistical inference. The inability to perform reliability analysis is a significant limitation noted in the results.\"\n  },\n  \"methodology_summary\": \"This analysis employed a Tier 3 exploratory statistical approach due to the small sample size (N=8). The methodology focused on descriptive statistics, pattern recognition by grouping data by speaker ideology, and a heavily caveated Spearman correlation analysis. No inferential tests were performed. Derived metrics, including the Moral Strategic Contradiction Index (MSCI), were calculated according to the framework specification. The analysis also confirmed that inter-rater reliability could not be assessed as only a single evaluation was provided for each document.\"\n}\n```",
  "analysis_artifacts_processed": 16,
  "cost_info": {
    "model": "vertex_ai/gemini-2.5-pro",
    "execution_time_seconds": 158.018768,
    "response_cost": 0.0,
    "input_tokens": 0,
    "output_tokens": 0,
    "total_tokens": 0,
    "prompt_length": 140671,
    "response_length": 41267
  },
  "timestamp": "2025-09-17T00:47:09.719932+00:00"
}