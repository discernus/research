{
  "analysis_id": "analysis_f52225ca",
  "step": "derived_metrics_generation",
  "model_used": "vertex_ai/gemini-2.5-flash-lite",
  "derived_metrics": "```python\nimport json\n\n# Provided dimensional scores\ndimensional_scores = {\n  \"tribal_dominance\": { \"raw_score\": 0.9, \"salience\": 0.9, \"confidence\": 0.95 },\n  \"individual_dignity\": { \"raw_score\": 0.1, \"salience\": 0.1, \"confidence\": 0.9 },\n  \"fear\": { \"raw_score\": 0.9, \"salience\": 0.9, \"confidence\": 0.95 },\n  \"hope\": { \"raw_score\": 0.8, \"salience\": 0.8, \"confidence\": 0.9 },\n  \"envy\": { \"raw_score\": 0.3, \"salience\": 0.2, \"confidence\": 0.8 },\n  \"compersion\": { \"raw_score\": 0.0, \"salience\": 0.0, \"confidence\": 0.9 },\n  \"enmity\": { \"raw_score\": 0.9, \"salience\": 0.9, \"confidence\": 0.95 },\n  \"amity\": { \"raw_score\": 0.4, \"salience\": 0.3, \"confidence\": 0.85 },\n  \"fragmentative_goals\": { \"raw_score\": 0.9, \"salience\": 0.85, \"confidence\": 0.95 },\n  \"cohesive_goals\": { \"raw_score\": 0.8, \"salience\": 0.75, \"confidence\": 0.9 }\n}\n\n# Derived Metrics Calculation Functions based on the framework\n\ndef calculate_tension_indices(scores):\n    derived_metrics = {}\n\n    # Identity Tension\n    td_score = scores.get(\"tribal_dominance\", {}).get(\"raw_score\", 0)\n    td_salience = scores.get(\"tribal_dominance\", {}).get(\"salience\", 0)\n    id_score = scores.get(\"individual_dignity\", {}).get(\"raw_score\", 0)\n    id_salience = scores.get(\"individual_dignity\", {}).get(\"salience\", 0)\n    derived_metrics[\"identity_tension\"] = min(td_score, id_score) * abs(td_salience - id_salience)\n\n    # Emotional Tension\n    fear_score = scores.get(\"fear\", {}).get(\"raw_score\", 0)\n    fear_salience = scores.get(\"fear\", {}).get(\"salience\", 0)\n    hope_score = scores.get(\"hope\", {}).get(\"raw_score\", 0)\n    hope_salience = scores.get(\"hope\", {}).get(\"salience\", 0)\n    derived_metrics[\"emotional_tension\"] = min(fear_score, hope_score) * abs(fear_salience - hope_salience)\n\n    # Success Tension\n    envy_score = scores.get(\"envy\", {}).get(\"raw_score\", 0)\n    envy_salience = scores.get(\"envy\", {}).get(\"salience\", 0)\n    compersion_score = scores.get(\"compersion\", {}).get(\"raw_score\", 0)\n    compersion_salience = scores.get(\"compersion\", {}).get(\"salience\", 0)\n    derived_metrics[\"success_tension\"] = min(envy_score, compersion_score) * abs(envy_salience - compersion_salience)\n\n    # Relational Tension\n    enmity_score = scores.get(\"enmity\", {}).get(\"raw_score\", 0)\n    enmity_salience = scores.get(\"enmity\", {}).get(\"salience\", 0)\n    amity_score = scores.get(\"amity\", {}).get(\"raw_score\", 0)\n    amity_salience = scores.get(\"amity\", {}).get(\"salience\", 0)\n    derived_metrics[\"relational_tension\"] = min(enmity_score, amity_score) * abs(enmity_salience - amity_salience)\n\n    # Goal Tension\n    frag_goals_score = scores.get(\"fragmentative_goals\", {}).get(\"raw_score\", 0)\n    frag_goals_salience = scores.get(\"fragmentative_goals\", {}).get(\"salience\", 0)\n    coh_goals_score = scores.get(\"cohesive_goals\", {}).get(\"raw_score\", 0)\n    coh_goals_salience = scores.get(\"cohesive_goals\", {}).get(\"salience\", 0)\n    derived_metrics[\"goal_tension\"] = min(frag_goals_score, coh_goals_score) * abs(frag_goals_salience - coh_goals_salience)\n\n    return derived_metrics\n\ndef calculate_strategic_contradiction_index(tension_indices):\n    total_tension = sum(tension_indices.values())\n    return total_tension / 5\n\ndef calculate_cohesion_indices(scores):\n    derived_metrics = {}\n    epsilon = 0.001\n\n    # Intermediate calculations for salience-weighted components\n    emotional_cohesion_component = (scores.get(\"hope\", {}).get(\"raw_score\", 0) * scores.get(\"hope\", {}).get(\"salience\", 0) -\n                                    scores.get(\"fear\", {}).get(\"raw_score\", 0) * scores.get(\"fear\", {}).get(\"salience\", 0))\n    success_cohesion_component = (scores.get(\"compersion\", {}).get(\"raw_score\", 0) * scores.get(\"compersion\", {}).get(\"salience\", 0) -\n                                  scores.get(\"envy\", {}).get(\"raw_score\", 0) * scores.get(\"envy\", {}).get(\"salience\", 0))\n    relational_cohesion_component = (scores.get(\"amity\", {}).get(\"raw_score\", 0) * scores.get(\"amity\", {}).get(\"salience\", 0) -\n                                     scores.get(\"enmity\", {}).get(\"raw_score\", 0) * scores.get(\"enmity\", {}).get(\"salience\", 0))\n    goal_cohesion_component = (scores.get(\"cohesive_goals\", {}).get(\"raw_score\", 0) * scores.get(\"cohesive_goals\", {}).get(\"salience\", 0) -\n                               scores.get(\"fragmentative_goals\", {}).get(\"raw_score\", 0) * scores.get(\"fragmentative_goals\", {}).get(\"salience\", 0))\n    identity_cohesion_component = (scores.get(\"individual_dignity\", {}).get(\"raw_score\", 0) * scores.get(\"individual_dignity\", {}).get(\"salience\", 0) -\n                                   scores.get(\"tribal_dominance\", {}).get(\"raw_score\", 0) * scores.get(\"tribal_dominance\", {}).get(\"salience\", 0))\n\n    # Salience totals\n    descriptive_salience_total = (scores.get(\"hope\", {}).get(\"salience\", 0) + scores.get(\"fear\", {}).get(\"salience\", 0) +\n                                   scores.get(\"compersion\", {}).get(\"salience\", 0) + scores.get(\"envy\", {}).get(\"salience\", 0) +\n                                   scores.get(\"amity\", {}).get(\"salience\", 0) + scores.get(\"enmity\", {}).get(\"salience\", 0))\n    motivational_salience_total = (descriptive_salience_total +\n                                     scores.get(\"cohesive_goals\", {}).get(\"salience\", 0) + scores.get(\"fragmentative_goals\", {}).get(\"salience\", 0))\n    full_salience_total = (scores.get(\"individual_dignity\", {}).get(\"salience\", 0) + scores.get(\"tribal_dominance\", {}).get(\"salience\", 0) +\n                                 motivational_salience_total)\n\n\n    # Descriptive Cohesion Index\n    derived_metrics[\"descriptive_cohesion_index\"] = (emotional_cohesion_component + success_cohesion_component + relational_cohesion_component) / (descriptive_salience_total + epsilon)\n\n    # Motivational Cohesion Index\n    derived_metrics[\"motivational_cohesion_index\"] = (emotional_cohesion_component + success_cohesion_component + relational_cohesion_component + goal_cohesion_component) / (motivational_salience_total + epsilon)\n\n    # Full Cohesion Index\n    derived_metrics[\"full_cohesion_index\"] = (identity_cohesion_component + emotional_cohesion_component + success_cohesion_component + relational_cohesion_component + goal_cohesion_component) / (full_salience_total + epsilon)\n\n    return derived_metrics\n\n# Execute calculations\ntension_indices = calculate_tension_indices(dimensional_scores)\nstrategic_contradiction_index = calculate_strategic_contradiction_index(tension_indices)\ncohesion_indices = calculate_cohesion_indices(dimensional_scores)\n\n# Combine all derived metrics\nall_derived_metrics = {\n    **tension_indices,\n    \"strategic_contradiction_index\": strategic_contradiction_index,\n    **cohesion_indices\n}\n\n# Print the results\nprint(json.dumps(all_derived_metrics, indent=2))\n```\n\n```json\n{\n  \"identity_tension\": 0.0,\n  \"emotional_tension\": 0.09000000000000001,\n  \"success_tension\": 0.0,\n  \"relational_tension\": 0.0,\n  \"goal_tension\": 0.07500000000000001,\n  \"strategic_contradiction_index\": 0.033,\n  \"descriptive_cohesion_index\": -0.18994614729996343,\n  \"motivational_cohesion_index\": -0.13365001824568312,\n  \"full_cohesion_index\": -0.19470588235294117\n}\n```",
  "timestamp": "2025-09-16T21:40:51.548618+00:00"
}