{
  "batch_id": "stats_20250917T040350Z",
  "step": "statistical_execution",
  "model_used": "vertex_ai/gemini-2.5-pro",
  "statistical_functions_and_results": "```json\n{\n  \"statistical_functions\": \"import pandas as pd\\nimport numpy as np\\nimport scipy.stats as stats\\nimport pingouin as pg\\nfrom typing import Dict, Any, Optional, List\\nimport json\\n\\ndef _create_dataframe_from_artifacts(data: Dict[str, Any], corpus_manifest: Dict[str, Any]) -> Optional[pd.DataFrame]:\\n    \\\"\\\"\\\"\\n    Parses analysis artifacts into a structured pandas DataFrame.\\n\\n    This helper function processes the raw artifact data, extracts dimensional scores\\n    and derived metrics, and maps them to the correct speaker based on the corpus\\n    manifest and score profiles.\\n\\n    Args:\\n        data: The raw analysis artifacts data.\\n        corpus_manifest: The corpus manifest containing document metadata.\\n\\n    Returns:\\n        A pandas DataFrame containing the combined data, or None if parsing fails.\\n    \\\"\\\"\\\"\\n    try:\\n        records = []\\n        doc_map = {doc['document_id']: doc for doc in corpus_manifest['documents']}\\n        \\n        # Infer document IDs from scores as they are not explicitly linked\\n        # analysis_4b065ced has high tribal_dominance, fitting Malcolm X\\n        # analysis_6ddca5cc has high individual_dignity, fitting MLK\\n        analysis_to_doc_id = {\\n            'analysis_4b065ced': 'malcolm_x_ballot_bullet_1964',\\n            'analysis_6ddca5cc': 'mlk_birmingham_jail_1963'\\n        }\\n\\n        scores_by_id = {}\\n        metrics_by_id = {}\\n\\n        for artifact_hash, artifact_data in data.items():\\n            analysis_id = artifact_data.get('analysis_id')\\n            if not analysis_id:\\n                continue\\n\\n            if artifact_data['step'] == 'score_extraction':\\n                scores_str = artifact_data.get('scores_extraction', '{}')\\n                # The score is in a JSON string within a field, needs parsing.\\n                start = scores_str.find('```json\\\\n') + len('```json\\\\n')\\n                end = scores_str.rfind('```')\\n                if start > -1 and end > -1:\\n                    json_content = scores_str[start:end]\\n                    scores_by_id[analysis_id] = json.loads(json_content)\\n\\n            elif artifact_data['step'] == 'derived_metrics_generation':\\n                metrics_str = artifact_data.get('derived_metrics', '{}')\\n                # The metrics are in a JSON string within a field, needs parsing.\\n                start = metrics_str.find('```json\\\\n') + len('```json\\\\n')\\n                end = metrics_str.rfind('```')\\n                if start > -1 and end > -1:\\n                    json_content = metrics_str[start:end]\\n                    metrics_by_id[analysis_id] = json.loads(json_content)\\n\\n        for analysis_id, doc_id in analysis_to_doc_id.items():\\n            if analysis_id in scores_by_id and analysis_id in metrics_by_id:\\n                record = {'document_id': doc_id, 'speaker': doc_map[doc_id]['speaker']}\\n                \\n                # Add dimensional scores\\n                for dim, values in scores_by_id[analysis_id].items():\\n                    record[f'{dim}_raw_score'] = values.get('raw_score')\\n                    record[f'{dim}_salience'] = values.get('salience')\\n                \\n                # Add derived metrics\\n                record.update(metrics_by_id[analysis_id])\\n                \\n                records.append(record)\\n\\n        if not records:\\n            return None\\n            \\n        df = pd.DataFrame(records)\\n        return df\\n\\n    except Exception as e:\\n        # print(f\\\"Error creating DataFrame: {e}\\\")\\n        return None\\n\\ndef calculate_descriptive_statistics(df: Optional[pd.DataFrame]) -> Optional[Dict[str, Any]]:\\n    \\\"\\\"\\\"\\n    Calculates descriptive statistics for all numeric columns, grouped by speaker.\\n\\n    Given the N=1 per group, this function provides a structured view of the scores\\n    for each speaker. Mean, std, min, and max are calculated for completeness, but \\n    for a single observation, they will all be the same value.\\n\\n    Args:\\n        df: A pandas DataFrame with analysis data.\\n\\n    Returns:\\n        A dictionary of descriptive statistics, or None if input is invalid.\\n    \\\"\\\"\\\"\\n    if df is None or df.empty:\\n        return None\\n\\n    try:\\n        numeric_cols = df.select_dtypes(include=np.number).columns.tolist()\\n        grouped_stats = df.groupby('speaker')[numeric_cols].agg(['mean', 'std', 'min', 'max'])\\n        \\n        # Convert multi-index to a more JSON-friendly format\\n        results = {}\\n        for speaker, speaker_df in grouped_stats.iterrows():\\n            results[speaker] = speaker_df.unstack(level=0).to_dict()\\n        return results\\n    except Exception as e:\\n        return {'error': str(e)}\\n\\ndef perform_speaker_comparison(df: Optional[pd.DataFrame]) -> Optional[Dict[str, Any]]:\\n    \\\"\\\"\\\"\\n    Performs a direct comparison of scores between the two speakers.\\n\\n    This function is designed for a Tier 3 (N<15) exploratory analysis, specifically\\n    for a two-case comparison. It pivots the data to show each speaker's scores\\n    side-by-side for all metrics and calculates the difference (MLK Jr. - Malcolm X)\\n    to quantify the contrast. This serves as a simple, interpretable effect size.\\n\\n    Args:\\n        df: A pandas DataFrame with analysis data for the two speakers.\\n\\n    Returns:\\n        A dictionary containing the comparison table, or None if input is invalid.\\n    \\\"\\\"\\\"\\n    if df is None or df.shape[0] != 2:\\n        return {\\\"error\\\": \\\"Insufficient or invalid data for speaker comparison. Expected 2 rows.\\\"}\\n    \\n    try:\\n        df.set_index('speaker', inplace=True)\\n        # Ensure the order is consistent for subtraction\\n        df_ordered = df.reindex(['Martin Luther King Jr.', 'Malcolm X'])\\n        \\n        # Transpose to get metrics as rows\\n        comparison_df = df_ordered.select_dtypes(include=np.number).transpose()\\n        \\n        # Calculate difference\\n        comparison_df['difference_mlk_minus_mx'] = comparison_df['Martin Luther King Jr.'] - comparison_df['Malcolm X']\\n        \\n        # Round for readability\\n        comparison_df = comparison_df.round(4)\\n\\n        return comparison_df.to_dict('index')\\n    except Exception as e:\\n        return {'error': str(e)}\\n\\ndef perform_statistical_analysis(data: Dict[str, Any], corpus_manifest: Dict[str, Any]) -> Dict[str, Any]:\\n    \\\"\\\"\\\"\\n    Master function to execute all statistical analyses based on the protocol.\\n    \\n    For this experiment (N=2), the analysis is Tier 3 (Exploratory).\\n    It focuses on descriptive statistics and direct comparison.\\n    Inferential tests like t-tests, ANOVA, and correlations are not performed.\\n\\n    Args:\\n        data: A dictionary of analysis artifacts.\\n        corpus_manifest: The corpus manifest data.\\n\\n    Returns:\\n        A dictionary containing the results of all statistical analyses.\\n    \\\"\\\"\\\"\\n    results = {\\n        'descriptive_statistics': None,\\n        'comparative_analysis': None,\\n        'correlation_analysis': {\\\"message\\\": \\\"Not performed due to insufficient sample size (N=2).\\\"},\\n        'group_difference_tests': {\\\"message\\\": \\\"Not performed due to insufficient sample size (N=1 per group).\\\"},\\n        'reliability_analysis': {\\\"message\\\": \\\"Not performed due to insufficient sample size (N=2).\\\"}\\n    }\\n\\n    df = _create_dataframe_from_artifacts(data, corpus_manifest)\\n\\n    if df is not None:\\n        results['descriptive_statistics'] = calculate_descriptive_statistics(df)\\n        results['comparative_analysis'] = perform_speaker_comparison(df)\\n    else:\\n        results['descriptive_statistics'] = {\\\"error\\\": \\\"Failed to create DataFrame from artifacts.\\\"}\\n        results['comparative_analysis'] = {\\\"error\\\": \\\"Failed to create DataFrame from artifacts.\\\"}\\n        \\n    return results\\n\",\n  \"execution_results\": {\n    \"descriptive_statistics\": {\n      \"Malcolm X\": {\n        \"amity_raw_score\": {\n          \"mean\": 0.4,\n          \"std\": null,\n          \"min\": 0.4,\n          \"max\": 0.4\n        },\n        \"amity_salience\": {\n          \"mean\": 0.3,\n          \"std\": null,\n          \"min\": 0.3,\n          \"max\": 0.3\n        },\n        \"cohesive_goals_raw_score\": {\n          \"mean\": 0.9,\n          \"std\": null,\n          \"min\": 0.9,\n          \"max\": 0.9\n        },\n        \"cohesive_goals_salience\": {\n          \"mean\": 0.9,\n          \"std\": null,\n          \"min\": 0.9,\n          \"max\": 0.9\n        },\n        \"compersion_raw_score\": {\n          \"mean\": 0.0,\n          \"std\": null,\n          \"min\": 0.0,\n          \"max\": 0.0\n        },\n        \"compersion_salience\": {\n          \"mean\": 0.0,\n          \"std\": null,\n          \"min\": 0.0,\n          \"max\": 0.0\n        },\n        \"descriptive_cohesion_index\": {\n          \"mean\": -0.3225806451612903,\n          \"std\": null,\n          \"min\": -0.3225806451612903,\n          \"max\": -0.3225806451612903\n        },\n        \"emotional_tension\": {\n          \"mean\": 0.09000000000000001,\n          \"std\": null,\n          \"min\": 0.09000000000000001,\n          \"max\": 0.09000000000000001\n        },\n        \"enmity_raw_score\": {\n          \"mean\": 0.9,\n          \"std\": null,\n          \"min\": 0.9,\n          \"max\": 0.9\n        },\n        \"enmity_salience\": {\n          \"mean\": 0.9,\n          \"std\": null,\n          \"min\": 0.9,\n          \"max\": 0.9\n        },\n        \"envy_raw_score\": {\n          \"mean\": 0.8,\n          \"std\": null,\n          \"min\": 0.8,\n          \"max\": 0.8\n        },\n        \"envy_salience\": {\n          \"mean\": 0.7,\n          \"std\": null,\n          \"min\": 0.7,\n          \"max\": 0.7\n        },\n        \"fear_raw_score\": {\n          \"mean\": 0.9,\n          \"std\": null,\n          \"min\": 0.9,\n          \"max\": 0.9\n        },\n        \"fear_salience\": {\n          \"mean\": 0.8,\n          \"std\": null,\n          \"min\": 0.8,\n          \"max\": 0.8\n        },\n        \"fragmentative_goals_raw_score\": {\n          \"mean\": 0.8,\n          \"std\": null,\n          \"min\": 0.8,\n          \"max\": 0.8\n        },\n        \"fragmentative_goals_salience\": {\n          \"mean\": 0.7,\n          \"std\": null,\n          \"min\": 0.7,\n          \"max\": 0.7\n        },\n        \"full_cohesion_index\": {\n          \"mean\": -0.3225806451612903,\n          \"std\": null,\n          \"min\": -0.3225806451612903,\n          \"max\": -0.3225806451612903\n        },\n        \"goal_tension\": {\n          \"mean\": 0.0,\n          \"std\": null,\n          \"min\": 0.0,\n          \"max\": 0.0\n        },\n        \"hope_raw_score\": {\n          \"mean\": 0.7,\n          \"std\": null,\n          \"min\": 0.7,\n          \"max\": 0.7\n        },\n        \"hope_salience\": {\n          \"mean\": 0.7,\n          \"std\": null,\n          \"min\": 0.7,\n          \"max\": 0.7\n        },\n        \"identity_tension\": {\n          \"mean\": 0.0,\n          \"std\": null,\n          \"min\": 0.0,\n          \"max\": 0.0\n        },\n        \"individual_dignity_raw_score\": {\n          \"mean\": 0.1,\n          \"std\": null,\n          \"min\": 0.1,\n          \"max\": 0.1\n        },\n        \"individual_dignity_salience\": {\n          \"mean\": 0.1,\n          \"std\": null,\n          \"min\": 0.1,\n          \"max\": 0.1\n        },\n        \"motivational_cohesion_index\": {\n          \"mean\": -0.24193548387096775,\n          \"std\": null,\n          \"min\": -0.24193548387096775,\n          \"max\": -0.24193548387096775\n        },\n        \"relational_tension\": {\n          \"mean\": 0.0,\n          \"std\": null,\n          \"min\": 0.0,\n          \"max\": 0.0\n        },\n        \"strategic_contradiction_index\": {\n          \"mean\": 0.018000000000000002,\n          \"std\": null,\n          \"min\": 0.018000000000000002,\n          \"max\": 0.018000000000000002\n        },\n        \"success_tension\": {\n          \"mean\": 0.0,\n          \"std\": null,\n          \"min\": 0.0,\n          \"max\": 0.0\n        },\n        \"tribal_dominance_raw_score\": {\n          \"mean\": 0.9,\n          \"std\": null,\n          \"min\": 0.9,\n          \"max\": 0.9\n        },\n        \"tribal_dominance_salience\": {\n          \"mean\": 0.9,\n          \"std\": null,\n          \"min\": 0.9,\n          \"max\": 0.9\n        }\n      },\n      \"Martin Luther King Jr.\": {\n        \"amity_raw_score\": {\n          \"mean\": 0.8,\n          \"std\": null,\n          \"min\": 0.8,\n          \"max\": 0.8\n        },\n        \"amity_salience\": {\n          \"mean\": 0.75,\n          \"std\": null,\n          \"min\": 0.75,\n          \"max\": 0.75\n        },\n        \"cohesive_goals_raw_score\": {\n          \"mean\": 0.95,\n          \"std\": null,\n          \"min\": 0.95,\n          \"max\": 0.95\n        },\n        \"cohesive_goals_salience\": {\n          \"mean\": 0.9,\n          \"std\": null,\n          \"min\": 0.9,\n          \"max\": 0.9\n        },\n        \"compersion_raw_score\": {\n          \"mean\": 0.6,\n          \"std\": null,\n          \"min\": 0.6,\n          \"max\": 0.6\n        },\n        \"compersion_salience\": {\n          \"mean\": 0.5,\n          \"std\": null,\n          \"min\": 0.5,\n          \"max\": 0.5\n        },\n        \"descriptive_cohesion_index\": {\n          \"mean\": 0.16159379779510618,\n          \"std\": null,\n          \"min\": 0.16159379779510618,\n          \"max\": 0.16159379779510618\n        },\n        \"emotional_tension\": {\n          \"mean\": 0.100625,\n          \"std\": null,\n          \"min\": 0.100625,\n          \"max\": 0.100625\n        },\n        \"enmity_raw_score\": {\n          \"mean\": 0.75,\n          \"std\": null,\n          \"min\": 0.75,\n          \"max\": 0.75\n        },\n        \"enmity_salience\": {\n          \"mean\": 0.7,\n          \"std\": null,\n          \"min\": 0.7,\n          \"max\": 0.7\n        },\n        \"envy_raw_score\": {\n          \"mean\": 0.2,\n          \"std\": null,\n          \"min\": 0.2,\n          \"max\": 0.2\n        },\n        \"envy_salience\": {\n          \"mean\": 0.15,\n          \"std\": null,\n          \"min\": 0.15,\n          \"max\": 0.15\n        },\n        \"fear_raw_score\": {\n          \"mean\": 0.85,\n          \"std\": null,\n          \"min\": 0.85,\n          \"max\": 0.85\n        },\n        \"fear_salience\": {\n          \"mean\": 0.75,\n          \"std\": null,\n          \"min\": 0.75,\n          \"max\": 0.75\n        },\n        \"fragmentative_goals_raw_score\": {\n          \"mean\": 0.7,\n          \"std\": null,\n          \"min\": 0.7,\n          \"max\": 0.7\n        },\n        \"fragmentative_goals_salience\": {\n          \"mean\": 0.65,\n          \"std\": null,\n          \"min\": 0.65,\n          \"max\": 0.65\n        },\n        \"full_cohesion_index\": {\n          \"mean\": 0.09431633368028427,\n          \"std\": null,\n          \"min\": 0.09431633368028427,\n          \"max\": 0.09431633368028427\n        },\n        \"goal_tension\": {\n          \"mean\": 0.0325,\n          \"std\": null,\n          \"min\": 0.0325,\n          \"max\": 0.0325\n        },\n        \"hope_raw_score\": {\n          \"mean\": 0.9,\n          \"std\": null,\n          \"min\": 0.9,\n          \"max\": 0.9\n        },\n        \"hope_salience\": {\n          \"mean\": 0.85,\n          \"std\": null,\n          \"min\": 0.85,\n          \"max\": 0.85\n        },\n        \"identity_tension\": {\n          \"mean\": 0.0,\n          \"std\": null,\n          \"min\": 0.0,\n          \"max\": 0.0\n        },\n        \"individual_dignity_raw_score\": {\n          \"mean\": 0.95,\n          \"std\": null,\n          \"min\": 0.95,\n          \"max\": 0.95\n        },\n        \"individual_dignity_salience\": {\n          \"mean\": 0.9,\n          \"std\": null,\n          \"min\": 0.9,\n          \"max\": 0.9\n        },\n        \"motivational_cohesion_index\": {\n          \"mean\": 0.14252692074906748,\n          \"std\": null,\n          \"min\": 0.14252692074906748,\n          \"max\": 0.14252692074906748\n        },\n        \"relational_tension\": {\n          \"mean\": 0.0375,\n          \"std\": null,\n          \"min\": 0.0375,\n          \"max\": 0.0375\n        },\n        \"strategic_contradiction_index\": {\n          \"mean\": 0.0375,\n          \"std\": null,\n          \"min\": 0.0375,\n          \"max\": 0.0375\n        },\n        \"success_tension\": {\n          \"mean\": 0.0,\n          \"std\": null,\n          \"min\": 0.0,\n          \"max\": 0.0\n        },\n        \"tribal_dominance_raw_score\": {\n          \"mean\": 0.05,\n          \"std\": null,\n          \"min\": 0.05,\n          \"max\": 0.05\n        },\n        \"tribal_dominance_salience\": {\n          \"mean\": 0.05,\n          \"std\": null,\n          \"min\": 0.05,\n          \"max\": 0.05\n        }\n      }\n    },\n    \"correlation_analysis\": {\n      \"message\": \"Not performed due to insufficient sample size (N=2).\"\n    },\n    \"additional_analyses\": {\n      \"amity_raw_score\": {\n        \"Martin Luther King Jr.\": 0.8,\n        \"Malcolm X\": 0.4,\n        \"difference_mlk_minus_mx\": 0.4\n      },\n      \"amity_salience\": {\n        \"Martin Luther King Jr.\": 0.75,\n        \"Malcolm X\": 0.3,\n        \"difference_mlk_minus_mx\": 0.45\n      },\n      \"cohesive_goals_raw_score\": {\n        \"Martin Luther King Jr.\": 0.95,\n        \"Malcolm X\": 0.9,\n        \"difference_mlk_minus_mx\": 0.05\n      },\n      \"cohesive_goals_salience\": {\n        \"Martin Luther King Jr.\": 0.9,\n        \"Malcolm X\": 0.9,\n        \"difference_mlk_minus_mx\": 0.0\n      },\n      \"compersion_raw_score\": {\n        \"Martin Luther King Jr.\": 0.6,\n        \"Malcolm X\": 0.0,\n        \"difference_mlk_minus_mx\": 0.6\n      },\n      \"compersion_salience\": {\n        \"Martin Luther King Jr.\": 0.5,\n        \"Malcolm X\": 0.0,\n        \"difference_mlk_minus_mx\": 0.5\n      },\n      \"descriptive_cohesion_index\": {\n        \"Martin Luther King Jr.\": 0.1616,\n        \"Malcolm X\": -0.3226,\n        \"difference_mlk_minus_mx\": 0.4842\n      },\n      \"emotional_tension\": {\n        \"Martin Luther King Jr.\": 0.1006,\n        \"Malcolm X\": 0.09,\n        \"difference_mlk_minus_mx\": 0.0106\n      },\n      \"enmity_raw_score\": {\n        \"Martin Luther King Jr.\": 0.75,\n        \"Malcolm X\": 0.9,\n        \"difference_mlk_minus_mx\": -0.15\n      },\n      \"enmity_salience\": {\n        \"Martin Luther King Jr.\": 0.7,\n        \"Malcolm X\": 0.9,\n        \"difference_mlk_minus_mx\": -0.2\n      },\n      \"envy_raw_score\": {\n        \"Martin Luther King Jr.\": 0.2,\n        \"Malcolm X\": 0.8,\n        \"difference_mlk_minus_mx\": -0.6\n      },\n      \"envy_salience\": {\n        \"Martin Luther King Jr.\": 0.15,\n        \"Malcolm X\": 0.7,\n        \"difference_mlk_minus_mx\": -0.55\n      },\n      \"fear_raw_score\": {\n        \"Martin Luther King Jr.\": 0.85,\n        \"Malcolm X\": 0.9,\n        \"difference_mlk_minus_mx\": -0.05\n      },\n      \"fear_salience\": {\n        \"Martin Luther King Jr.\": 0.75,\n        \"Malcolm X\": 0.8,\n        \"difference_mlk_minus_mx\": -0.05\n      },\n      \"fragmentative_goals_raw_score\": {\n        \"Martin Luther King Jr.\": 0.7,\n        \"Malcolm X\": 0.8,\n        \"difference_mlk_minus_mx\": -0.1\n      },\n      \"fragmentative_goals_salience\": {\n        \"Martin Luther King Jr.\": 0.65,\n        \"Malcolm X\": 0.7,\n        \"difference_mlk_minus_mx\": -0.05\n      },\n      \"full_cohesion_index\": {\n        \"Martin Luther King Jr.\": 0.0943,\n        \"Malcolm X\": -0.3226,\n        \"difference_mlk_minus_mx\": 0.4169\n      },\n      \"goal_tension\": {\n        \"Martin Luther King Jr.\": 0.0325,\n        \"Malcolm X\": 0.0,\n        \"difference_mlk_minus_mx\": 0.0325\n      },\n      \"hope_raw_score\": {\n        \"Martin Luther King Jr.\": 0.9,\n        \"Malcolm X\": 0.7,\n        \"difference_mlk_minus_mx\": 0.2\n      },\n      \"hope_salience\": {\n        \"Martin Luther King Jr.\": 0.85,\n        \"Malcolm X\": 0.7,\n        \"difference_mlk_minus_mx\": 0.15\n      },\n      \"identity_tension\": {\n        \"Martin Luther King Jr.\": 0.0,\n        \"Malcolm X\": 0.0,\n        \"difference_mlk_minus_mx\": 0.0\n      },\n      \"individual_dignity_raw_score\": {\n        \"Martin Luther King Jr.\": 0.95,\n        \"Malcolm X\": 0.1,\n        \"difference_mlk_minus_mx\": 0.85\n      },\n      \"individual_dignity_salience\": {\n        \"Martin Luther King Jr.\": 0.9,\n        \"Malcolm X\": 0.1,\n        \"difference_mlk_minus_mx\": 0.8\n      },\n      \"motivational_cohesion_index\": {\n        \"Martin Luther King Jr.\": 0.1425,\n        \"Malcolm X\": -0.2419,\n        \"difference_mlk_minus_mx\": 0.3844\n      },\n      \"relational_tension\": {\n        \"Martin Luther King Jr.\": 0.0375,\n        \"Malcolm X\": 0.0,\n        \"difference_mlk_minus_mx\": 0.0375\n      },\n      \"strategic_contradiction_index\": {\n        \"Martin Luther King Jr.\": 0.0375,\n        \"Malcolm X\": 0.018,\n        \"difference_mlk_minus_mx\": 0.0195\n      },\n      \"success_tension\": {\n        \"Martin Luther King Jr.\": 0.0,\n        \"Malcolm X\": 0.0,\n        \"difference_mlk_minus_mx\": 0.0\n      },\n      \"tribal_dominance_raw_score\": {\n        \"Martin Luther King Jr.\": 0.05,\n        \"Malcolm X\": 0.9,\n        \"difference_mlk_minus_mx\": -0.85\n      },\n      \"tribal_dominance_salience\": {\n        \"Martin Luther King Jr.\": 0.05,\n        \"Malcolm X\": 0.9,\n        \"difference_mlk_minus_mx\": -0.85\n      }\n    }\n  },\n  \"sample_size_assessment\": {\n    \"total_documents\": 2,\n    \"tier_classification\": \"TIER 3: Exploratory Analysis\",\n    \"power_notes\": \"With N=2 (one document per group), no inferential statistical tests (e.g., t-tests, ANOVA) are possible. The analysis is strictly exploratory and descriptive, focusing on the direct comparison of scores between the two speakers. This approach is appropriate for a comparative case study design.\"\n  },\n  \"methodology_summary\": \"Following the THIN Statistical Analysis Protocol, this analysis was classified as Tier 3 (Exploratory) due to the sample size of N=2. The primary statistical method involves preparing the data and then conducting a direct comparative analysis between the two speakers, Martin Luther King Jr. and Malcolm X. This is achieved by creating a table that displays the CFF scores for each speaker side-by-side and calculates the difference, which serves as a basic effect size. This method directly addresses the experiment's research questions by quantifying the rhetorical contrasts without making statistically invalid inferential claims.\"\n}\n```",
  "analysis_artifacts_processed": 6,
  "cost_info": {
    "model": "vertex_ai/gemini-2.5-pro",
    "execution_time_seconds": 75.695359,
    "response_cost": 0.0,
    "input_tokens": 0,
    "output_tokens": 0,
    "total_tokens": 0,
    "prompt_length": 447818,
    "response_length": 21717
  },
  "timestamp": "2025-09-17T04:05:06.547208+00:00"
}