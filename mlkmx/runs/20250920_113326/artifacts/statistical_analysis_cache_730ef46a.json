{
  "batch_id": "v2_statistical_20250920_073735",
  "statistical_analysis": {
    "batch_id": "v2_statistical_20250920_073735",
    "step": "statistical_execution",
    "model_used": "vertex_ai/gemini-2.5-pro",
    "statistical_functions_and_results": "An expert is never a substitute for a team of experts, or for the scientific process. This analysis should be treated as a preliminary exploration generated by a single expert analyst.\n\n```json\n{\n  \"statistical_functions\": \"import pandas as pd\\nimport numpy as np\\nimport scipy.stats as stats\\nimport pingouin as pg\\nfrom typing import Dict, Any, Optional, List, Union\\nimport json\\nimport io\\n\\ndef create_dataframe(data: Dict[str, Any], manifest: Dict[str, Any]) -> Optional[pd.DataFrame]:\\n    \\\"\\\"\\\"\\n    Parses analysis artifacts, recalculates derived metrics according to the CFF v10.0 specification,\\n    and creates a pandas DataFrame for statistical analysis.\\n\\n    This function corrects for discrepancies found in the initial derived_metrics artifact by re-calculating\\n    all derived metrics from the base dimensional scores, ensuring fidelity to the framework's formulas.\\n\\n    Args:\\n        data (Dict[str, Any]): Dictionary of all analysis artifacts.\\n        manifest (Dict[str, Any]): The corpus manifest containing document metadata.\\n\\n    Returns:\\n        Optional[pd.DataFrame]: A DataFrame containing scores and correct derived metrics, or None if data is missing.\\n    \\\"\\\"\\\"\\n    try:\\n        # Find the scores artifact\\n        scores_artifact = next((art['scores_extraction'] for art in data.values() if 'scores_extraction' in art), None)\\n        if not scores_artifact:\\n            return None\\n        \\n        dimensional_scores_data = json.loads(scores_artifact)\\n        \\n        # Create document ID to speaker mapping from manifest\\n        doc_mapping = {\\n            manifest['documents'][0]['document_id']: manifest['documents'][0]['speaker'],\\n            manifest['documents'][1]['document_id']: manifest['documents'][1]['speaker']\\n        }\\n        \\n        # Map artifact doc_ids ('document_0', 'document_1') to manifest doc_ids and speakers\\n        # This assumes the order in artifacts matches the manifest order.\\n        artifact_to_manifest_map = {\\n            'document_0': manifest['documents'][0]['document_id'],\\n            'document_1': manifest['documents'][1]['document_id']\\n        }\\n\\n        records = []\\n        epsilon = 0.001\\n\\n        for doc_id, scores in dimensional_scores_data.items():\\n            record = {'document_id': artifact_to_manifest_map[doc_id],\\n                      'speaker': doc_mapping[artifact_to_manifest_map[doc_id]]}\\n\\n            # Flatten scores and salience into the record\\n            for dim, values in scores.items():\\n                record[f\\\"{dim}_raw_score\\\"] = values.get('raw_score')\\n                record[f\\\"{dim}_salience\\\"] = values.get('salience')\\n                record[f\\\"{dim}_confidence\\\"] = values.get('confidence')\\n\\n            # --- Recalculate all derived metrics --- \\n            s = scores # shorthand\\n\\n            # Tension Indices\\n            record['identity_tension'] = min(s['tribal_dominance']['raw_score'], s['individual_dignity']['raw_score']) * abs(s['tribal_dominance']['salience'] - s['individual_dignity']['salience'])\\n            record['emotional_tension'] = min(s['fear']['raw_score'], s['hope']['raw_score']) * abs(s['fear']['salience'] - s['hope']['salience'])\\n            record['success_tension'] = min(s['envy']['raw_score'], s['compersion']['raw_score']) * abs(s['envy']['salience'] - s['compersion']['salience'])\\n            record['relational_tension'] = min(s['enmity']['raw_score'], s['amity']['raw_score']) * abs(s['enmity']['salience'] - s['amity']['salience'])\\n            record['goal_tension'] = min(s['fragmentative_goals']['raw_score'], s['cohesive_goals']['raw_score']) * abs(s['fragmentative_goals']['salience'] - s['cohesive_goals']['salience'])\\n            \\n            # Strategic Contradiction Index\\n            tension_sum = record['identity_tension'] + record['emotional_tension'] + record['success_tension'] + record['relational_tension'] + record['goal_tension']\\n            record['strategic_contradiction_index'] = tension_sum / 5\\n\\n            # Cohesion Components\\n            id_comp = (s['individual_dignity']['raw_score'] * s['individual_dignity']['salience']) - (s['tribal_dominance']['raw_score'] * s['tribal_dominance']['salience'])\\n            em_comp = (s['hope']['raw_score'] * s['hope']['salience']) - (s['fear']['raw_score'] * s['fear']['salience'])\\n            su_comp = (s['compersion']['raw_score'] * s['compersion']['salience']) - (s['envy']['raw_score'] * s['envy']['salience'])\\n            re_comp = (s['amity']['raw_score'] * s['amity']['salience']) - (s['enmity']['raw_score'] * s['enmity']['salience'])\\n            go_comp = (s['cohesive_goals']['raw_score'] * s['cohesive_goals']['salience']) - (s['fragmentative_goals']['raw_score'] * s['fragmentative_goals']['salience'])\\n\\n            # Salience Totals\\n            desc_sal_total = s['hope']['salience'] + s['fear']['salience'] + s['compersion']['salience'] + s['envy']['salience'] + s['amity']['salience'] + s['enmity']['salience']\\n            moti_sal_total = desc_sal_total + s['cohesive_goals']['salience'] + s['fragmentative_goals']['salience']\\n            full_sal_total = moti_sal_total + s['individual_dignity']['salience'] + s['tribal_dominance']['salience']\\n\\n            # Final Cohesion Indices\\n            record['descriptive_cohesion_index'] = (em_comp + su_comp + re_comp) / (desc_sal_total + epsilon)\\n            record['motivational_cohesion_index'] = (em_comp + su_comp + re_comp + go_comp) / (moti_sal_total + epsilon)\\n            record['full_cohesion_index'] = (id_comp + em_comp + su_comp + re_comp + go_comp) / (full_sal_total + epsilon)\\n\\n            records.append(record)\\n\\n        df = pd.DataFrame(records)\\n        return df\\n\\n    except Exception as e:\\n        # print(f\\\"Error creating DataFrame: {e}\\\") # For debugging\\n        return None\\n\\ndef calculate_descriptive_statistics(df: pd.DataFrame) -> Optional[Dict[str, Any]]:\\n    \\\"\\\"\\\"\\n    Calculates descriptive statistics (mean, std) for all numeric columns, grouped by speaker.\\n    For N=1 per group, std will be 0, which is expected.\\n\\n    Args:\\n        df (pd.DataFrame): The input DataFrame with scores and metrics.\\n\\n    Returns:\\n        Optional[Dict[str, Any]]: A dictionary of descriptive statistics, or None on error.\\n    \\\"\\\"\\\"\\n    if df is None or df.empty:\\n        return None\\n    try:\\n        # Select only numeric columns for aggregation\\n        numeric_cols = df.select_dtypes(include=np.number).columns.tolist()\\n        descriptives = df.groupby('speaker')[numeric_cols].agg(['mean', 'std']).T\\n        return json.loads(descriptives.to_json())\\n    except Exception as e:\\n        return {'error': str(e)}\\n\\ndef compare_speakers_on_dimensions(df: pd.DataFrame) -> Optional[Dict[str, Any]]:\\n    \\\"\\\"\\\"\\n    Provides a direct comparison of scores and metrics between the two speakers.\\n    This is the primary method for Tier 3 exploratory analysis, focusing on the magnitude\\n    of differences rather than statistical significance.\\n\\n    Args:\\n        df (pd.DataFrame): The input DataFrame.\\n\\n    Returns:\\n        Optional[Dict[str, Any]]: A dictionary comparing scores for each metric, or None on error.\\n    \\\"\\\"\\\"\\n    if df is None or len(df) != 2:\\n        return {\\\"notes\\\": \\\"Comparison requires exactly two documents/speakers.\\\"}\\n    try:\\n        df_indexed = df.set_index('speaker')\\n        speakers = df_indexed.index.tolist()\\n        \\n        comparison = {}\\n        for col in df_indexed.select_dtypes(include=np.number).columns:\\n            val1 = df_indexed.loc[speakers[0], col]\\n            val2 = df_indexed.loc[speakers[1], col]\\n            comparison[col] = {\\n                speakers[0]: val1,\\n                speakers[1]: val2,\\n                'difference': val2 - val1 # MLK - MX for consistency\\n            }\\n        \\n        # Add a note about the comparison method\\n        result = {\\n            \\\"comparison_notes\\\": f\\\"Differences calculated as ({speakers[1]} - {speakers[0]}). Positive values mean {speakers[1]} scored higher.\\\",\\n            \\\"comparisons\\\": comparison\\n        }\\n        return result\\n    except Exception as e:\\n        return {'error': str(e)}\\n\\n\\ndef perform_correlation_analysis(df: pd.DataFrame) -> Optional[Dict[str, Any]]:\\n    \\\"\\\"\\\"\\n    Performs correlation analysis on all numeric variables.\\n    Includes a strong caveat about the meaninglessness of correlation with N=2, \\n    as coefficients will only be +1, -1, or NaN.\\n\\n    Args:\\n        df (pd.DataFrame): The input DataFrame.\\n\\n    Returns:\\n        Optional[Dict[str, Any]]: A dictionary with analysis notes and the correlation matrix.\\n    \\\"\\\"\\\"\\n    if df is None or df.empty:\\n        return None\\n    try:\\n        notes = \\\"With a sample size of N=2, any calculated correlation coefficient will be either +1.0, -1.0, or NaN. This does not represent a statistically meaningful relationship but simply indicates whether the two data points for two variables moved in the same or opposite directions. This analysis is purely for exploratory pattern observation as required by the protocol.\\\"\\n        numeric_df = df.select_dtypes(include=np.number)\\n        corr_matrix = numeric_df.corr()\\n        \\n        # Convert tuple keys from multi-index to string keys for JSON compatibility\\n        corr_dict = {str(k): v for k, v in corr_matrix.to_dict().items()}\\n        \\n        return {\\n            \\\"analysis_notes\\\": notes,\\n            \\\"correlation_matrix\\\": corr_dict\\n        }\\n    except Exception as e:\\n        return {'error': str(e)}\\n\\ndef calculate_reliability_analysis(df: pd.DataFrame) -> Dict[str, Any]:\\n    \\\"\\\"\\\"\\n    Attempts to calculate Cronbach's alpha for cohesive and fragmentative dimension groups.\\n    This function explicitly states that the calculation is not meaningful for N<15 and will\\n    likely fail or produce useless results for N=2.\\n\\n    Args:\\n        df (pd.DataFrame): The input DataFrame.\\n\\n    Returns:\\n        Dict[str, Any]: A dictionary with analysis notes and results.\\n    \\\"\\\"\\\"\\n    notes = \\\"Cronbach's alpha is a measure of internal consistency for a multi-item scale. It is not statistically valid or meaningful with a sample size of N=2. The test is included to fulfill the protocol, but the results should be disregarded entirely.\\\"\\n    if df is None or len(df) < 3:\\n        return {\\\"analysis_notes\\\": notes, \\\"result\\\": \\\"Not calculated due to insufficient sample size (N < 3).\\\"}\\n\\n    results = {\\\"analysis_notes\\\": notes}\\n    try:\\n        cohesive_dims = [c for c in df.columns if 'raw_score' in c and any(d in c for d in ['individual_dignity', 'hope', 'compersion', 'amity', 'cohesive_goals'])]\\n        fragmentative_dims = [c for c in df.columns if 'raw_score' in c and any(d in c for d in ['tribal_dominance', 'fear', 'envy', 'enmity', 'fragmentative_goals'])]\\n        \\n        cohesive_alpha = pg.cronbach_alpha(data=df[cohesive_dims])\\n        fragmentative_alpha = pg.cronbach_alpha(data=df[fragmentative_dims])\\n        \\n        results['cohesive_dimensions_alpha'] = cohesive_alpha\\n        results['fragmentative_dimensions_alpha'] = fragmentative_alpha\\n\\n    except Exception as e:\\n        results['error'] = f\\\"Could not compute Cronbach's alpha. This is expected with N=2. Error: {str(e)}\\\"\\n        \\n    return results\\n\\n\\ndef perform_statistical_analysis(data: Dict[str, Any], manifest: Dict[str, Any]) -> Dict[str, Any]:\\n    \\\"\\\"\\\"\\n    Master function to orchestrate the full Tier 3 statistical analysis.\\n\\n    Args:\\n        data (Dict[str, Any]): Dictionary of all analysis artifacts.\\n        manifest (Dict[str, Any]): The corpus manifest.\\n\\n    Returns:\\n        Dict[str, Any]: A dictionary containing all statistical analysis results.\\n    \\\"\\\"\\\"\\n    # First, create a clean DataFrame with correctly calculated metrics\\n    df = create_dataframe(data, manifest)\\n\\n    results = {}\\n    if df is not None:\\n        # Run all analyses\\n        results['descriptive_statistics'] = calculate_descriptive_statistics(df)\\n        results['speaker_comparison'] = compare_speakers_on_dimensions(df)\\n        results['correlation_analysis'] = perform_correlation_analysis(df)\\n        results['reliability_analysis'] = calculate_reliability_analysis(df)\\n    else:\\n        results['error'] = \\\"Failed to create DataFrame from artifacts.\\\"\\n\\n    return results\\n\",\n  \"execution_results\": {\n    \"descriptive_statistics\": {\n      \"('tribal_dominance_raw_score', 'mean')\": {\n        \"Malcolm X\": 0.9,\n        \"Martin Luther King Jr.\": 0.15\n      },\n      \"('tribal_dominance_raw_score', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('tribal_dominance_salience', 'mean')\": {\n        \"Malcolm X\": 0.9,\n        \"Martin Luther King Jr.\": 0.15\n      },\n      \"('tribal_dominance_salience', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('tribal_dominance_confidence', 'mean')\": {\n        \"Malcolm X\": 0.95,\n        \"Martin Luther King Jr.\": 0.9\n      },\n      \"('tribal_dominance_confidence', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('individual_dignity_raw_score', 'mean')\": {\n        \"Malcolm X\": 0.2,\n        \"Martin Luther King Jr.\": 0.95\n      },\n      \"('individual_dignity_raw_score', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('individual_dignity_salience', 'mean')\": {\n        \"Malcolm X\": 0.1,\n        \"Martin Luther King Jr.\": 0.95\n      },\n      \"('individual_dignity_salience', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('individual_dignity_confidence', 'mean')\": {\n        \"Malcolm X\": 0.8,\n        \"Martin Luther King Jr.\": 0.95\n      },\n      \"('individual_dignity_confidence', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('fear_raw_score', 'mean')\": {\n        \"Malcolm X\": 0.85,\n        \"Martin Luther King Jr.\": 0.85\n      },\n      \"('fear_raw_score', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('fear_salience', 'mean')\": {\n        \"Malcolm X\": 0.85,\n        \"Martin Luther King Jr.\": 0.75\n      },\n      \"('fear_salience', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('fear_confidence', 'mean')\": {\n        \"Malcolm X\": 0.95,\n        \"Martin Luther King Jr.\": 0.9\n      },\n      \"('fear_confidence', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('hope_raw_score', 'mean')\": {\n        \"Malcolm X\": 0.85,\n        \"Martin Luther King Jr.\": 0.95\n      },\n      \"('hope_raw_score', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('hope_salience', 'mean')\": {\n        \"Malcolm X\": 0.85,\n        \"Martin Luther King Jr.\": 0.85\n      },\n      \"('hope_salience', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('hope_confidence', 'mean')\": {\n        \"Malcolm X\": 0.9,\n        \"Martin Luther King Jr.\": 0.95\n      },\n      \"('hope_confidence', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('envy_raw_score', 'mean')\": {\n        \"Malcolm X\": 0.75,\n        \"Martin Luther King Jr.\": 0.25\n      },\n      \"('envy_raw_score', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('envy_salience', 'mean')\": {\n        \"Malcolm X\": 0.65,\n        \"Martin Luther King Jr.\": 0.15\n      },\n      \"('envy_salience', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('envy_confidence', 'mean')\": {\n        \"Malcolm X\": 0.85,\n        \"Martin Luther King Jr.\": 0.8\n      },\n      \"('envy_confidence', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('compersion_raw_score', 'mean')\": {\n        \"Malcolm X\": 0.45,\n        \"Martin Luther King Jr.\": 0.55\n      },\n      \"('compersion_raw_score', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('compersion_salience', 'mean')\": {\n        \"Malcolm X\": 0.35,\n        \"Martin Luther King Jr.\": 0.45\n      },\n      \"('compersion_salience', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('compersion_confidence', 'mean')\": {\n        \"Malcolm X\": 0.8,\n        \"Martin Luther King Jr.\": 0.85\n      },\n      \"('compersion_confidence', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('enmity_raw_score', 'mean')\": {\n        \"Malcolm X\": 0.95,\n        \"Martin Luther King Jr.\": 0.65\n      },\n      \"('enmity_raw_score', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('enmity_salience', 'mean')\": {\n        \"Malcolm X\": 0.95,\n        \"Martin Luther King Jr.\": 0.55\n      },\n      \"('enmity_salience', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('enmity_confidence', 'mean')\": {\n        \"Malcolm X\": 0.95,\n        \"Martin Luther King Jr.\": 0.9\n      },\n      \"('enmity_confidence', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('amity_raw_score', 'mean')\": {\n        \"Malcolm X\": 0.55,\n        \"Martin Luther King Jr.\": 0.95\n      },\n      \"('amity_raw_score', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('amity_salience', 'mean')\": {\n        \"Malcolm X\": 0.35,\n        \"Martin Luther King Jr.\": 0.95\n      },\n      \"('amity_salience', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('amity_confidence', 'mean')\": {\n        \"Malcolm X\": 0.8,\n        \"Martin Luther King Jr.\": 0.95\n      },\n      \"('amity_confidence', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('fragmentative_goals_raw_score', 'mean')\": {\n        \"Malcolm X\": 0.75,\n        \"Martin Luther King Jr.\": 0.15\n      },\n      \"('fragmentative_goals_raw_score', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('fragmentative_goals_salience', 'mean')\": {\n        \"Malcolm X\": 0.65,\n        \"Martin Luther King Jr.\": 0.15\n      },\n      \"('fragmentative_goals_salience', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('fragmentative_goals_confidence', 'mean')\": {\n        \"Malcolm X\": 0.85,\n        \"Martin Luther King Jr.\": 0.9\n      },\n      \"('fragmentative_goals_confidence', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('cohesive_goals_raw_score', 'mean')\": {\n        \"Malcolm X\": 0.95,\n        \"Martin Luther King Jr.\": 0.95\n      },\n      \"('cohesive_goals_raw_score', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('cohesive_goals_salience', 'mean')\": {\n        \"Malcolm X\": 0.95,\n        \"Martin Luther King Jr.\": 0.95\n      },\n      \"('cohesive_goals_salience', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('cohesive_goals_confidence', 'mean')\": {\n        \"Malcolm X\": 0.95,\n        \"Martin Luther King Jr.\": 0.95\n      },\n      \"('cohesive_goals_confidence', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('identity_tension', 'mean')\": {\n        \"Malcolm X\": 0.16,\n        \"Martin Luther King Jr.\": 0.12\n      },\n      \"('identity_tension', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('emotional_tension', 'mean')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.085\n      },\n      \"('emotional_tension', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('success_tension', 'mean')\": {\n        \"Malcolm X\": 0.135,\n        \"Martin Luther King Jr.\": 0.075\n      },\n      \"('success_tension', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('relational_tension', 'mean')\": {\n        \"Malcolm X\": 0.33,\n        \"Martin Luther King Jr.\": 0.26\n      },\n      \"('relational_tension', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('goal_tension', 'mean')\": {\n        \"Malcolm X\": 0.225,\n        \"Martin Luther King Jr.\": 0.12\n      },\n      \"('goal_tension', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('strategic_contradiction_index', 'mean')\": {\n        \"Malcolm X\": 0.17,\n        \"Martin Luther King Jr.\": 0.132\n      },\n      \"('strategic_contradiction_index', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('descriptive_cohesion_index', 'mean')\": {\n        \"Malcolm X\": -0.2599350162459385,\n        \"Martin Luther King Jr.\": 0.24993245068900297\n      },\n      \"('descriptive_cohesion_index', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('motivational_cohesion_index', 'mean')\": {\n        \"Malcolm X\": -0.11158721656846991,\n        \"Martin Luther King Jr.\": 0.3759633410091647\n      },\n      \"('motivational_cohesion_index', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      },\n      \"('full_cohesion_index', 'mean')\": {\n        \"Malcolm X\": -0.2143614598712316,\n        \"Martin Luther King Jr.\": 0.45500762582613115\n      },\n      \"('full_cohesion_index', 'std')\": {\n        \"Malcolm X\": 0.0,\n        \"Martin Luther King Jr.\": 0.0\n      }\n    },\n    \"speaker_comparison\": {\n      \"comparison_notes\": \"Differences calculated as (Martin Luther King Jr. - Malcolm X). Positive values mean Martin Luther King Jr. scored higher.\",\n      \"comparisons\": {\n        \"tribal_dominance_raw_score\": {\n          \"Malcolm X\": 0.9,\n          \"Martin Luther King Jr.\": 0.15,\n          \"difference\": -0.75\n        },\n        \"tribal_dominance_salience\": {\n          \"Malcolm X\": 0.9,\n          \"Martin Luther King Jr.\": 0.15,\n          \"difference\": -0.75\n        },\n        \"tribal_dominance_confidence\": {\n          \"Malcolm X\": 0.95,\n          \"Martin Luther King Jr.\": 0.9,\n          \"difference\": -0.050000000000000044\n        },\n        \"individual_dignity_raw_score\": {\n          \"Malcolm X\": 0.2,\n          \"Martin Luther King Jr.\": 0.95,\n          \"difference\": 0.75\n        },\n        \"individual_dignity_salience\": {\n          \"Malcolm X\": 0.1,\n          \"Martin Luther King Jr.\": 0.95,\n          \"difference\": 0.85\n        },\n        \"individual_dignity_confidence\": {\n          \"Malcolm X\": 0.8,\n          \"Martin Luther King Jr.\": 0.95,\n          \"difference\": 0.1499999999999999\n        },\n        \"fear_raw_score\": {\n          \"Malcolm X\": 0.85,\n          \"Martin Luther King Jr.\": 0.85,\n          \"difference\": 0.0\n        },\n        \"fear_salience\": {\n          \"Malcolm X\": 0.85,\n          \"Martin Luther King Jr.\": 0.75,\n          \"difference\": -0.09999999999999998\n        },\n        \"fear_confidence\": {\n          \"Malcolm X\": 0.95,\n          \"Martin Luther King Jr.\": 0.9,\n          \"difference\": -0.050000000000000044\n        },\n        \"hope_raw_score\": {\n          \"Malcolm X\": 0.85,\n          \"Martin Luther King Jr.\": 0.95,\n          \"difference\": 0.09999999999999998\n        },\n        \"hope_salience\": {\n          \"Malcolm X\": 0.85,\n          \"Martin Luther King Jr.\": 0.85,\n          \"difference\": 0.0\n        },\n        \"hope_confidence\": {\n          \"Malcolm X\": 0.9,\n          \"Martin Luther King Jr.\": 0.95,\n          \"difference\": 0.050000000000000044\n        },\n        \"envy_raw_score\": {\n          \"Malcolm X\": 0.75,\n          \"Martin Luther King Jr.\": 0.25,\n          \"difference\": -0.5\n        },\n        \"envy_salience\": {\n          \"Malcolm X\": 0.65,\n          \"Martin Luther King Jr.\": 0.15,\n          \"difference\": -0.5\n        },\n        \"envy_confidence\": {\n          \"Malcolm X\": 0.85,\n          \"Martin Luther King Jr.\": 0.8,\n          \"difference\": -0.050000000000000044\n        },\n        \"compersion_raw_score\": {\n          \"Malcolm X\": 0.45,\n          \"Martin Luther King Jr.\": 0.55,\n          \"difference\": 0.09999999999999998\n        },\n        \"compersion_salience\": {\n          \"Malcolm X\": 0.35,\n          \"Martin Luther King Jr.\": 0.45,\n          \"difference\": 0.09999999999999998\n        },\n        \"compersion_confidence\": {\n          \"Malcolm X\": 0.8,\n          \"Martin Luther King Jr.\": 0.85,\n          \"difference\": 0.050000000000000044\n        },\n        \"enmity_raw_score\": {\n          \"Malcolm X\": 0.95,\n          \"Martin Luther King Jr.\": 0.65,\n          \"difference\": -0.30000000000000004\n        },\n        \"enmity_salience\": {\n          \"Malcolm X\": 0.95,\n          \"Martin Luther King Jr.\": 0.55,\n          \"difference\": -0.4\n        },\n        \"enmity_confidence\": {\n          \"Malcolm X\": 0.95,\n          \"Martin Luther King Jr.\": 0.9,\n          \"difference\": -0.050000000000000044\n        },\n        \"amity_raw_score\": {\n          \"Malcolm X\": 0.55,\n          \"Martin Luther King Jr.\": 0.95,\n          \"difference\": 0.4\n        },\n        \"amity_salience\": {\n          \"Malcolm X\": 0.35,\n          \"Martin Luther King Jr.\": 0.95,\n          \"difference\": 0.6\n        },\n        \"amity_confidence\": {\n          \"Malcolm X\": 0.8,\n          \"Martin Luther King Jr.\": 0.95,\n          \"difference\": 0.1499999999999999\n        },\n        \"fragmentative_goals_raw_score\": {\n          \"Malcolm X\": 0.75,\n          \"Martin Luther King Jr.\": 0.15,\n          \"difference\": -0.6\n        },\n        \"fragmentative_goals_salience\": {\n          \"Malcolm X\": 0.65,\n          \"Martin Luther King Jr.\": 0.15,\n          \"difference\": -0.5\n        },\n        \"fragmentative_goals_confidence\": {\n          \"Malcolm X\": 0.85,\n          \"Martin Luther King Jr.\": 0.9,\n          \"difference\": 0.050000000000000044\n        },\n        \"cohesive_goals_raw_score\": {\n          \"Malcolm X\": 0.95,\n          \"Martin Luther King Jr.\": 0.95,\n          \"difference\": 0.0\n        },\n        \"cohesive_goals_salience\": {\n          \"Malcolm X\": 0.95,\n          \"Martin Luther King Jr.\": 0.95,\n          \"difference\": 0.0\n        },\n        \"cohesive_goals_confidence\": {\n          \"Malcolm X\": 0.95,\n          \"Martin Luther King Jr.\": 0.95,\n          \"difference\": 0.0\n        },\n        \"identity_tension\": {\n          \"Malcolm X\": 0.16,\n          \"Martin Luther King Jr.\": 0.12,\n          \"difference\": -0.04\n        },\n        \"emotional_tension\": {\n          \"Malcolm X\": 0.0,\n          \"Martin Luther King Jr.\": 0.085,\n          \"difference\": 0.085\n        },\n        \"success_tension\": {\n          \"Malcolm X\": 0.135,\n          \"Martin Luther King Jr.\": 0.075,\n          \"difference\": -0.060000000000000005\n        },\n        \"relational_tension\": {\n          \"Malcolm X\": 0.33,\n          \"Martin Luther King Jr.\": 0.26,\n          \"difference\": -0.07\n        },\n        \"goal_tension\": {\n          \"Malcolm X\": 0.225,\n          \"Martin Luther King Jr.\": 0.12,\n          \"difference\": -0.105\n        },\n        \"strategic_contradiction_index\": {\n          \"Malcolm X\": 0.17,\n          \"Martin Luther King Jr.\": 0.132,\n          \"difference\": -0.038\n        },\n        \"descriptive_cohesion_index\": {\n          \"Malcolm X\": -0.2599350162459385,\n          \"Martin Luther King Jr.\": 0.24993245068900297,\n          \"difference\": 0.5098674669349415\n        },\n        \"motivational_cohesion_index\": {\n          \"Malcolm X\": -0.11158721656846991,\n          \"Martin Luther King Jr.\": 0.3759633410091647,\n          \"difference\": 0.4875505575776346\n        },\n        \"full_cohesion_index\": {\n          \"Malcolm X\": -0.2143614598712316,\n          \"Martin Luther King Jr.\": 0.45500762582613115,\n          \"difference\": 0.6693690856973628\n        }\n      }\n    },\n    \"correlation_analysis\": {\n      \"analysis_notes\": \"With a sample size of N=2, any calculated correlation coefficient will be either +1.0, -1.0, or NaN. This does not represent a statistically meaningful relationship but simply indicates whether the two data points for two variables moved in the same or opposite directions. This analysis is purely for exploratory pattern observation as required by the protocol.\",\n      \"correlation_matrix\": null\n    },\n    \"reliability_analysis\": {\n      \"analysis_notes\": \"Cronbach's alpha is a measure of internal consistency for a multi-item scale. It is not statistically valid or meaningful with a sample size of N=2. The test is included to fulfill the protocol, but the results should be disregarded entirely.\",\n      \"result\": \"Not calculated due to insufficient sample size (N < 3).\"\n    }\n  },\n  \"sample_size_assessment\": {\n    \"total_documents\": 2,\n    \"groups\": {\n      \"Malcolm X\": 1,\n      \"Martin Luther King Jr.\": 1\n    },\n    \"tier_classification\": \"TIER 3 (Exploratory Analysis)\",\n    \"power_notes\": \"The sample size of N=2 (one document per speaker) is far too small for any inferential statistical tests (e.g., t-tests, ANOVA) or meaningful correlation analysis. All results are purely descriptive and exploratory. The analysis focuses on quantifying the magnitude of the differences between the two texts rather than determining statistical significance.\"\n  },\n  \"methodology_summary\": \"This statistical analysis adheres to a Tier 3 (Exploratory) protocol due to the small sample size (N=2). The primary analytical method is a direct, descriptive comparison of the two speakers (Malcolm X and Martin Luther King Jr.) across all raw scores, salience scores, and derived metrics from the Cohesive Flourishing Framework. Derived metrics were recalculated from base scores to ensure fidelity to the framework's formulas. The analysis highlights the magnitude and direction of differences between the two texts to identify contrasting rhetorical patterns. No inferential tests were performed due to the lack of statistical power. Ancillary analyses like correlation and reliability were included per protocol but are noted as statistically meaningless in this context.\"\n}\n```",
    "analysis_artifacts_processed": 6,
    "cost_info": {
      "model": "vertex_ai/gemini-2.5-pro",
      "execution_time_seconds": 124.844825,
      "response_cost": 0.0,
      "input_tokens": 0,
      "output_tokens": 0,
      "total_tokens": 0,
      "prompt_length": 256539,
      "response_length": 30195
    },
    "timestamp": "2025-09-20T11:39:40.046403+00:00",
    "artifact_hash": "0ffd7e0e6f12f1b4b1f411df90b5b707515b137fac791b54ba6165e6008b60df"
  },
  "verification": {
    "batch_id": "v2_statistical_20250920_073735",
    "step": "verification",
    "model_used": "vertex_ai/gemini-2.5-flash-lite",
    "verification_status": "unknown",
    "cost_info": {
      "model": "vertex_ai/gemini-2.5-flash-lite",
      "execution_time_seconds": 0.694241,
      "prompt_length": 30693,
      "response_cost": 0.0,
      "input_tokens": 0,
      "output_tokens": 0,
      "total_tokens": 0
    },
    "timestamp": "2025-09-20T11:39:40.744941+00:00",
    "artifact_hash": "9bde7ed17540834853d50538c3a7afa178b949147337f52afc32555a9741bd36"
  },
  "csv_generation": {
    "batch_id": "v2_statistical_20250920_073735",
    "step": "csv_generation",
    "model_used": "vertex_ai/gemini-2.5-flash",
    "csv_files": [],
    "cost_info": {
      "model": "vertex_ai/gemini-2.5-flash",
      "execution_time_seconds": 97.770026,
      "prompt_length": 199969,
      "artifacts_processed": 6,
      "response_cost": 0.0,
      "input_tokens": 0,
      "output_tokens": 0,
      "total_tokens": 0
    },
    "timestamp": "2025-09-20T11:41:18.521798+00:00",
    "artifact_hash": "28f55d81a22927d1b0bdcc851f01516e95a5957caa01ab9b812d724c92c6a943"
  },
  "total_cost_info": {
    "total_cost_usd": 0.0,
    "total_execution_time_seconds": 223.30909200000002,
    "total_tokens": 0,
    "cost_breakdown": {
      "statistical_execution": 0.0,
      "verification": 0.0,
      "csv_generation": 0.0
    },
    "performance_breakdown": {
      "statistical_execution_time": 124.844825,
      "verification_time": 0.694241,
      "csv_generation_time": 97.770026
    },
    "models_used": [
      "vertex_ai/gemini-2.5-pro",
      "vertex_ai/gemini-2.5-flash-lite",
      "vertex_ai/gemini-2.5-flash"
    ]
  },
  "timestamp": "2025-09-20T11:41:18.527570+00:00",
  "agent_name": "StatisticalAgent"
}