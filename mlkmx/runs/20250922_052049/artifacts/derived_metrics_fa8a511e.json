{
  "analysis_id": "analysis_v2_analysis_20250922_012128_1",
  "step": "derived_metrics",
  "model_used": "vertex_ai/gemini-2.5-pro",
  "derived_metrics": "```python\nimport json\n\n# Provided Scores\nscores = {\n  \"tribal_dominance\": 0.1,\n  \"individual_dignity\": 1.0,\n  \"fear\": 0.8,\n  \"hope\": 0.9,\n  \"envy\": 0.1,\n  \"mudita\": 0.0,\n  \"enmity\": 0.8,\n  \"amity\": 0.9,\n  \"fragmentative_goals\": 0.1,\n  \"cohesive_goals\": 1.0\n}\n\n# Assume salience scores are equal to raw scores for simplicity in this example,\n# as they are not provided separately. In a real scenario, these would come\n# from the LLM analysis.\nsalience_scores = {k: v for k, v in scores.items()}\n\n# Calculate Tension Indices\nidentity_tension = min(scores[\"tribal_dominance\"], scores[\"individual_dignity\"]) * abs(salience_scores[\"tribal_dominance\"] - salience_scores[\"individual_dignity\"])\nemotional_tension = min(scores[\"fear\"], scores[\"hope\"]) * abs(salience_scores[\"fear\"] - salience_scores[\"hope\"])\nsuccess_tension = min(scores[\"envy\"], scores[\"mudita\"]) * abs(salience_scores[\"envy\"] - salience_scores[\"mudita\"])\nrelational_tension = min(scores[\"enmity\"], scores[\"amity\"]) * abs(salience_scores[\"enmity\"] - salience_scores[\"amity\"])\ngoal_tension = min(scores[\"fragmentative_goals\"], scores[\"cohesive_goals\"]) * abs(salience_scores[\"fragmentative_goals\"] - salience_scores[\"cohesive_goals\"])\n\n# Calculate Strategic Contradiction Index\nstrategic_contradiction_index = (identity_tension + emotional_tension + success_tension + relational_tension + goal_tension) / 5\n\n# Calculate intermediate components for Cohesion Indices\nemotional_cohesion_component = (scores[\"hope\"] * salience_scores[\"hope\"]) - (scores[\"fear\"] * salience_scores[\"fear\"])\nsuccess_cohesion_component = (scores[\"mudita\"] * salience_scores[\"mudita\"]) - (scores[\"envy\"] * salience_scores[\"envy\"])\nrelational_cohesion_component = (scores[\"amity\"] * salience_scores[\"amity\"]) - (scores[\"enmity\"] * salience_scores[\"enmity\"])\ngoal_cohesion_component = (scores[\"cohesive_goals\"] * salience_scores[\"cohesive_goals\"]) - (scores[\"fragmentative_goals\"] * salience_scores[\"fragmentative_goals\"])\nidentity_cohesion_component = (scores[\"individual_dignity\"] * salience_scores[\"individual_dignity\"]) - (scores[\"tribal_dominance\"] * salience_scores[\"tribal_dominance\"])\n\n# Calculate total salience for cohesion indices\ndescriptive_salience_total = salience_scores[\"hope\"] + salience_scores[\"fear\"] + salience_scores[\"mudita\"] + salience_scores[\"envy\"] + salience_scores[\"amity\"] + salience_scores[\"enmity\"]\nmotivational_salience_total = descriptive_salience_total + salience_scores[\"cohesive_goals\"] + salience_scores[\"fragmentative_goals\"]\nfull_salience_total = motivational_salience_total + salience_scores[\"individual_dignity\"] + salience_scores[\"tribal_dominance\"]\n\n# Calculate Salience-Weighted Cohesion Indices\nepsilon = 0.001\n\ndescriptive_cohesion_index = (emotional_cohesion_component + success_cohesion_component + relational_cohesion_component) / (descriptive_salience_total + epsilon)\nmotivational_cohesion_index = (emotional_cohesion_component + success_cohesion_component + relational_cohesion_component + goal_cohesion_component) / (motivational_salience_total + epsilon)\nfull_cohesion_index = (identity_cohesion_component + emotional_cohesion_component + success_cohesion_component + relational_cohesion_component + goal_cohesion_component) / (full_salience_total + epsilon)\n\nresults = {\n    \"identity_tension\": identity_tension,\n    \"emotional_tension\": emotional_tension,\n    \"success_tension\": success_tension,\n    \"relational_tension\": relational_tension,\n    \"goal_tension\": goal_tension,\n    \"strategic_contradiction_index\": strategic_contradiction_index,\n    \"descriptive_cohesion_index\": descriptive_cohesion_index,\n    \"motivational_cohesion_index\": motivational_cohesion_index,\n    \"full_cohesion_index\": full_cohesion_index\n}\n\nprint(json.dumps({\"results\": results}, separators=(\",\", \":\")))\n```\n```json\n{\"results\":{\"identity_tension\":0.0,\"emotional_tension\":0.08,\"success_tension\":0.0,\"relational_tension\":0.08,\"goal_tension\":0.0,\"strategic_contradiction_index\":0.032,\"descriptive_cohesion_index\":0.9473684210526316,\"motivational_cohesion_index\":0.9523809523809523,\"full_cohesion_index\":0.9545454545454546}}\n```",
  "document_index": 1,
  "timestamp": "2025-09-22T05:25:01.637812+00:00"
}