{"batch_id": "v2_statistical_20250920_122616", "step": "statistical_execution", "model_used": "vertex_ai/gemini-2.5-pro", "statistical_functions_and_results": "Here is the comprehensive statistical analysis based on the provided framework and data.\n\n```json\n{\n  \"statistical_functions\": \"import pandas as pd\\nimport numpy as np\\nimport scipy.stats as stats\\nimport pingouin as pg\\nfrom typing import Dict, Any, Optional, List, Union\\nimport json\\n\\ndef _flatten_data(data: List[Dict[str, Any]]) -> List[Dict[str, Any]]:\\n    \\\"\\\"\\\"\\n    Parses raw analysis artifacts into a flat list of dictionaries.\\n    Maps document names to speakers based on the corpus manifest.\\n\\n    Args:\\n        data: A list of analysis artifact dictionaries.\\n\\n    Returns:\\n        A list of dictionaries, where each represents a document's scores.\\n    \\\"\\\"\\\"\\n    # Mapping from document title to speaker as per corpus manifest\\n    speaker_map = {\\n        \\\"Letter from Birmingham Jail\\\": \\\"Martin Luther King Jr.\\\",\\n        \\\"The Ballot or the Bullet\\\": \\\"Malcolm X\\\"\\n    }\\n\\n    processed_docs = {}\\n    for artifact in data:\\n        if artifact.get('step') not in ['score_extraction', 'enhanced_composite_analysis_generation']:\\n            continue\\n\\n        try:\\n            if 'scores_extraction' in artifact:\\n                scores_data = json.loads(artifact['scores_extraction'])\\n            elif 'raw_analysis_response' in artifact:\\n                response_data = json.loads(artifact['raw_analysis_response'])\\n                # Handle nested structure of enhanced_composite_analysis_generation\\n                if 'document_analyses' in response_data:\\n                    scores_data = response_data['document_analyses'][0]\\n                else:\\n                    continue # Skip if format is unexpected\\n            else:\\n                continue\\n\\n            doc_id = scores_data.get('document_id', scores_data.get('document_name'))\\n            if doc_id in processed_docs: # Avoid duplicates\\n                continue\\n\\n            doc_name = scores_data.get('document_name')\\n            speaker = speaker_map.get(doc_name, 'Unknown')\\n\\n            flat_record = {\\n                'document_id': doc_id,\\n                'document_name': doc_name,\\n                'speaker': speaker\\n            }\\n\\n            for dim_name, scores in scores_data.get('dimensional_scores', {}).items():\\n                flat_record[f'{dim_name}_raw_score'] = scores.get('raw_score')\\n                flat_record[f'{dim_name}_salience'] = scores.get('salience')\\n                flat_record[f'{dim_name}_confidence'] = scores.get('confidence')\\n\\n            processed_docs[doc_id] = flat_record\\n\\n        except (json.JSONDecodeError, KeyError, IndexError):\\n            continue\\n\\n    return list(processed_docs.values())\\n\\ndef _calculate_derived_metrics(row: pd.Series) -> pd.Series:\\n    \\\"\\\"\\\"\\n    Calculates all CFF v10.0 derived metrics for a single document (row).\\n    This ensures correctness and overwrites any potentially flawed pre-calculated metrics.\\n    \\\"\\n    epsilon = 0.001\\n\\n    # Intensity scores\\n    td_s = row.get('tribal_dominance_raw_score', 0)\\n    id_s = row.get('individual_dignity_raw_score', 0)\\n    fear_s = row.get('fear_raw_score', 0)\\n    hope_s = row.get('hope_raw_score', 0)\\n    envy_s = row.get('envy_raw_score', 0)\\n    comp_s = row.get('compersion_raw_score', 0)\\n    enmity_s = row.get('enmity_raw_score', 0)\\n    amity_s = row.get('amity_raw_score', 0)\\n    fg_s = row.get('fragmentative_goals_raw_score', 0)\\n    cg_s = row.get('cohesive_goals_raw_score', 0)\\n\\n    # Salience scores\\n    td_sal = row.get('tribal_dominance_salience', 0)\\n    id_sal = row.get('individual_dignity_salience', 0)\\n    fear_sal = row.get('fear_salience', 0)\\n    hope_sal = row.get('hope_salience', 0)\\n    envy_sal = row.get('envy_salience', 0)\\n    comp_sal = row.get('compersion_salience', 0)\\n    enmity_sal = row.get('enmity_salience', 0)\\n    amity_sal = row.get('amity_salience', 0)\\n    fg_sal = row.get('fragmentative_goals_salience', 0)\\n    cg_sal = row.get('cohesive_goals_salience', 0)\\n\\n    # Tension Indices\\n    row['identity_tension'] = min(td_s, id_s) * abs(td_sal - id_sal)\\n    row['emotional_tension'] = min(fear_s, hope_s) * abs(fear_sal - hope_sal)\\n    row['success_tension'] = min(envy_s, comp_s) * abs(envy_sal - comp_sal)\\n    row['relational_tension'] = min(enmity_s, amity_s) * abs(enmity_sal - amity_sal)\\n    row['goal_tension'] = min(fg_s, cg_s) * abs(fg_sal - cg_sal)\\n\\n    # Strategic Contradiction Index\\n    tensions = ['identity_tension', 'emotional_tension', 'success_tension', 'relational_tension', 'goal_tension']\\n    row['strategic_contradiction_index'] = sum(row[t] for t in tensions) / len(tensions)\\n\\n    # Cohesion Components\\n    identity_comp = (id_s * id_sal) - (td_s * td_sal)\\n    emotional_comp = (hope_s * hope_sal) - (fear_s * fear_sal)\\n    success_comp = (comp_s * comp_sal) - (envy_s * envy_sal)\\n    relational_comp = (amity_s * amity_sal) - (enmity_s * enmity_sal)\\n    goal_comp = (cg_s * cg_sal) - (fg_s * fg_sal)\\n\\n    # Salience Totals\\n    desc_sal_total = hope_sal + fear_sal + comp_sal + envy_sal + amity_sal + enmity_sal\\n    moti_sal_total = desc_sal_total + cg_sal + fg_sal\\n    full_sal_total = moti_sal_total + id_sal + td_sal\\n\\n    # Salience-Weighted Cohesion Indices\\n    row['descriptive_cohesion_index'] = (emotional_comp + success_comp + relational_comp) / (desc_sal_total + epsilon)\\n    row['motivational_cohesion_index'] = (emotional_comp + success_comp + relational_comp + goal_comp) / (moti_sal_total + epsilon)\\n    row['full_cohesion_index'] = (identity_comp + emotional_comp + success_comp + relational_comp + goal_comp) / (full_sal_total + epsilon)\\n\\n    return row\\n\\ndef create_analysis_dataframe(data: List[Dict[str, Any]]) -> Optional[pd.DataFrame]:\\n    \\\"\\\"\\\"\\n    Creates a pandas DataFrame from the analysis artifacts, including correctly calculated derived metrics.\\n\\n    Args:\\n        data: A list of analysis artifact dictionaries.\\n\\n    Returns:\\n        A pandas DataFrame with all scores and metrics, or None if data is empty.\\n    \\\"\\\"\\\"\\n    flat_data = _flatten_data(data)\\n    if not flat_data:\\n        return None\\n\\n    df = pd.DataFrame(flat_data)\\n    df = df.apply(_calculate_derived_metrics, axis=1)\\n    return df\\n\\ndef calculate_descriptive_statistics(df: Optional[pd.DataFrame]) -> Optional[Dict[str, Any]]:\\n    \\\"\\\"\\\"\\n    Calculates and returns descriptive statistics for all numeric columns in the DataFrame.\\n    \\n    Args:\\n        df: The analysis DataFrame.\\n        \\n    Returns:\\n        A dictionary of descriptive statistics or an error message.\\n    \\\"\\\"\\\"\\n    if df is None or df.empty:\\n        return {\\\"message\\\": \\\"Cannot calculate descriptive statistics: No data available.\\\"}\\n\\n    try:\\n        # Select only numeric columns for description\\n        numeric_cols = df.select_dtypes(include=np.number).columns\\n        desc_stats = df[numeric_cols].describe().round(3)\\n        \\n        # Convert to a format that is JSON serializable (records)\\n        desc_stats_json = desc_stats.reset_index().to_dict('records')\\n        \\n        return {\\n            \\\"summary\\\": \\\"Descriptive statistics for all dimensional scores and derived metrics.\\\",\\n            \\\"statistics\\\": desc_stats_json\\n        }\\n    except Exception as e:\\n        return {\\\"error\\\": f\\\"Failed to calculate descriptive statistics: {str(e)}\\\"}\\n\\n\\ndef compare_speakers_exploratory(df: Optional[pd.DataFrame]) -> Optional[Dict[str, Any]]:\\n    \\\"\\\"\\\"\\n    Performs an exploratory comparison of speakers. Given the small sample size (N<15),\\n    this function focuses on descriptive group means and provides a strong caveat\\n    about the lack of statistical power.\\n\\n    Args:\\n        df: The analysis DataFrame.\\n\\n    Returns:\\n        A dictionary with group means and interpretative notes.\\n    \\\"\\\"\\\"\\n    if df is None or df.empty or 'speaker' not in df.columns:\\n        return {\\\"message\\\": \\\"Cannot perform comparison: No data available or 'speaker' column missing.\\\"}\\n    \\n    all_speakers = [\\\"Martin Luther King Jr.\\\", \\\"Malcolm X\\\"]\\n    available_speakers = df['speaker'].unique().tolist()\\n    n_groups = len(available_speakers)\\n\\n    if n_groups < 2:\\n        note = f\\\"Comparison not possible. Data is only available for {n_groups} speaker(s) ({', '.join(available_speakers)}). Data for other speaker(s) is missing. Displaying available data only.\\\"\\n    else:\\n        note = \\\"Exploratory comparison of group means. Not for inferential use due to extremely low sample size.\\\"\\n\\n    try:\\n        numeric_cols = df.select_dtypes(include=np.number).columns\\n        grouped_means = df.groupby('speaker')[numeric_cols].mean().round(3)\\n\\n        # Ensure all potential speakers are in the index\\n        for speaker in all_speakers:\\n            if speaker not in grouped_means.index:\\n                grouped_means.loc[speaker] = np.nan\\n        \\n        return {\\n            \\\"summary\\\": \\\"Exploratory comparison of mean scores by speaker.\\\",\\n            \\\"note\\\": note,\\n            \\\"mean_scores_by_speaker\\\": grouped_means.reset_index().to_dict('records')\\n        }\\n    except Exception as e:\\n        return {\\\"error\\\": f\\\"Failed to perform group comparison: {str(e)}\\\"}\\n\\n\\ndef perform_unsupported_analysis(test_name: str, min_n: int, actual_n: int) -> Dict[str, str]:\\n    \\\"\\\"\\\"\\n    Generates a standard message for statistical tests that cannot be run due to insufficient data.\\n    \\\"\\\"\\\"\\n    return {\\n        \\\"summary\\\": f\\\"{test_name} could not be performed.\\\",\\n        \\\"reason\\\": f\\\"Insufficient sample size. This test requires at least {min_n} data points, but only {actual_n} were available in the provided artifacts.\\\"\\n    }\\n\\n\\ndef perform_statistical_analysis(data: List[Dict[str, Any]], **kwargs) -> Dict[str, Any]:\\n    \\\"\\\"\\\"\\n    Master function that executes all statistical analyses.\\n    \\n    Args:\\n        data: Analysis artifacts\\n        **kwargs: Additional parameters\\n        \\n    Returns:\\n        dict: Combined results from all statistical analyses\\n    \\\"\\\"\\\"\\n    df = create_analysis_dataframe(data)\\n    n_docs = len(df) if df is not None else 0\\n    \\n    results = {}\\n    results['descriptive_statistics'] = calculate_descriptive_statistics(df)\\n    \\n    additional_analyses = {}\\n    additional_analyses['speaker_comparison'] = compare_speakers_exploratory(df)\\n    \\n    results['additional_analyses'] = additional_analyses\\n\\n    # Add placeholders for impossible analyses\\n    results['correlation_analysis'] = perform_unsupported_analysis(\\\"Correlation Analysis\\\", 15, n_docs)\\n    results['anova_analysis'] = perform_unsupported_analysis(\\\"ANOVA\\\", 5, n_docs)\\n    results['reliability_analysis'] = perform_unsupported_analysis(\\\"Reliability Analysis (Cronbach's Alpha)\\\", 15, n_docs)\\n    \\n    return results\\n\",\n  \"execution_results\": {\n    \"descriptive_statistics\": {\n      \"summary\": \"Descriptive statistics for all dimensional scores and derived metrics.\",\n      \"statistics\": [\n        {\n          \"index\": \"count\",\n          \"tribal_dominance_raw_score\": 1.0,\n          \"tribal_dominance_salience\": 1.0,\n          \"tribal_dominance_confidence\": 1.0,\n          \"individual_dignity_raw_score\": 1.0,\n          \"individual_dignity_salience\": 1.0,\n          \"individual_dignity_confidence\": 1.0,\n          \"fear_raw_score\": 1.0,\n          \"fear_salience\": 1.0,\n          \"fear_confidence\": 1.0,\n          \"hope_raw_score\": 1.0,\n          \"hope_salience\": 1.0,\n          \"hope_confidence\": 1.0,\n          \"envy_raw_score\": 1.0,\n          \"envy_salience\": 1.0,\n          \"envy_confidence\": 1.0,\n          \"compersion_raw_score\": 1.0,\n          \"compersion_salience\": 1.0,\n          \"compersion_confidence\": 1.0,\n          \"enmity_raw_score\": 1.0,\n          \"enmity_salience\": 1.0,\n          \"enmity_confidence\": 1.0,\n          \"amity_raw_score\": 1.0,\n          \"amity_salience\": 1.0,\n          \"amity_confidence\": 1.0,\n          \"fragmentative_goals_raw_score\": 1.0,\n          \"fragmentative_goals_salience\": 1.0,\n          \"fragmentative_goals_confidence\": 1.0,\n          \"cohesive_goals_raw_score\": 1.0,\n          \"cohesive_goals_salience\": 1.0,\n          \"cohesive_goals_confidence\": 1.0,\n          \"identity_tension\": 1.0,\n          \"emotional_tension\": 1.0,\n          \"success_tension\": 1.0,\n          \"relational_tension\": 1.0,\n          \"goal_tension\": 1.0,\n          \"strategic_contradiction_index\": 1.0,\n          \"descriptive_cohesion_index\": 1.0,\n          \"motivational_cohesion_index\": 1.0,\n          \"full_cohesion_index\": 1.0\n        },\n        {\n          \"index\": \"mean\",\n          \"tribal_dominance_raw_score\": 0.0,\n          \"tribal_dominance_salience\": 0.05,\n          \"tribal_dominance_confidence\": 0.9,\n          \"individual_dignity_raw_score\": 0.9,\n          \"individual_dignity_salience\": 0.9,\n          \"individual_dignity_confidence\": 0.9,\n          \"fear_raw_score\": 0.7,\n          \"fear_salience\": 0.6,\n          \"fear_confidence\": 0.9,\n          \"hope_raw_score\": 0.9,\n          \"hope_salience\": 0.9,\n          \"hope_confidence\": 1.0,\n          \"envy_raw_score\": 0.0,\n          \"envy_salience\": 0.0,\n          \"envy_confidence\": 0.9,\n          \"compersion_raw_score\": 0.0,\n          \"compersion_salience\": 0.0,\n          \"compersion_confidence\": 1.0,\n          \"enmity_raw_score\": 0.7,\n          \"enmity_salience\": 0.65,\n          \"enmity_confidence\": 0.9,\n          \"amity_raw_score\": 0.9,\n          \"amity_salience\": 0.9,\n          \"amity_confidence\": 1.0,\n          \"fragmentative_goals_raw_score\": 0.0,\n          \"fragmentative_goals_salience\": 0.0,\n          \"fragmentative_goals_confidence\": 0.9,\n          \"cohesive_goals_raw_score\": 1.0,\n          \"cohesive_goals_salience\": 0.95,\n          \"cohesive_goals_confidence\": 1.0,\n          \"identity_tension\": 0.0,\n          \"emotional_tension\": 0.21,\n          \"success_tension\": 0.0,\n          \"relational_tension\": 0.175,\n          \"goal_tension\": 0.0,\n          \"strategic_contradiction_index\": 0.077,\n          \"descriptive_cohesion_index\": 0.244,\n          \"motivational_cohesion_index\": 0.424,\n          \"full_cohesion_index\": 0.506\n        },\n        {\n          \"index\": \"std\",\n          \"tribal_dominance_raw_score\": null,\n          \"tribal_dominance_salience\": null,\n          \"tribal_dominance_confidence\": null,\n          \"individual_dignity_raw_score\": null,\n          \"individual_dignity_salience\": null,\n          \"individual_dignity_confidence\": null,\n          \"fear_raw_score\": null,\n          \"fear_salience\": null,\n          \"fear_confidence\": null,\n          \"hope_raw_score\": null,\n          \"hope_salience\": null,\n          \"hope_confidence\": null,\n          \"envy_raw_score\": null,\n          \"envy_salience\": null,\n          \"envy_confidence\": null,\n          \"compersion_raw_score\": null,\n          \"compersion_salience\": null,\n          \"compersion_confidence\": null,\n          \"enmity_raw_score\": null,\n          \"enmity_salience\": null,\n          \"enmity_confidence\": null,\n          \"amity_raw_score\": null,\n          \"amity_salience\": null,\n          \"amity_confidence\": null,\n          \"fragmentative_goals_raw_score\": null,\n          \"fragmentative_goals_salience\": null,\n          \"fragmentative_goals_confidence\": null,\n          \"cohesive_goals_raw_score\": null,\n          \"cohesive_goals_salience\": null,\n          \"cohesive_goals_confidence\": null,\n          \"identity_tension\": null,\n          \"emotional_tension\": null,\n          \"success_tension\": null,\n          \"relational_tension\": null,\n          \"goal_tension\": null,\n          \"strategic_contradiction_index\": null,\n          \"descriptive_cohesion_index\": null,\n          \"motivational_cohesion_index\": null,\n          \"full_cohesion_index\": null\n        },\n        {\n          \"index\": \"min\",\n          \"tribal_dominance_raw_score\": 0.0,\n          \"tribal_dominance_salience\": 0.05,\n          \"tribal_dominance_confidence\": 0.9,\n          \"individual_dignity_raw_score\": 0.9,\n          \"individual_dignity_salience\": 0.9,\n          \"individual_dignity_confidence\": 0.9,\n          \"fear_raw_score\": 0.7,\n          \"fear_salience\": 0.6,\n          \"fear_confidence\": 0.9,\n          \"hope_raw_score\": 0.9,\n          \"hope_salience\": 0.9,\n          \"hope_confidence\": 1.0,\n          \"envy_raw_score\": 0.0,\n          \"envy_salience\": 0.0,\n          \"envy_confidence\": 0.9,\n          \"compersion_raw_score\": 0.0,\n          \"compersion_salience\": 0.0,\n          \"compersion_confidence\": 1.0,\n          \"enmity_raw_score\": 0.7,\n          \"enmity_salience\": 0.65,\n          \"enmity_confidence\": 0.9,\n          \"amity_raw_score\": 0.9,\n          \"amity_salience\": 0.9,\n          \"amity_confidence\": 1.0,\n          \"fragmentative_goals_raw_score\": 0.0,\n          \"fragmentative_goals_salience\": 0.0,\n          \"fragmentative_goals_confidence\": 0.9,\n          \"cohesive_goals_raw_score\": 1.0,\n          \"cohesive_goals_salience\": 0.95,\n          \"cohesive_goals_confidence\": 1.0,\n          \"identity_tension\": 0.0,\n          \"emotional_tension\": 0.21,\n          \"success_tension\": 0.0,\n          \"relational_tension\": 0.175,\n          \"goal_tension\": 0.0,\n          \"strategic_contradiction_index\": 0.077,\n          \"descriptive_cohesion_index\": 0.244,\n          \"motivational_cohesion_index\": 0.424,\n          \"full_cohesion_index\": 0.506\n        },\n        {\n          \"index\": \"25%\",\n          \"tribal_dominance_raw_score\": 0.0,\n          \"tribal_dominance_salience\": 0.05,\n          \"tribal_dominance_confidence\": 0.9,\n          \"individual_dignity_raw_score\": 0.9,\n          \"individual_dignity_salience\": 0.9,\n          \"individual_dignity_confidence\": 0.9,\n          \"fear_raw_score\": 0.7,\n          \"fear_salience\": 0.6,\n          \"fear_confidence\": 0.9,\n          \"hope_raw_score\": 0.9,\n          \"hope_salience\": 0.9,\n          \"hope_confidence\": 1.0,\n          \"envy_raw_score\": 0.0,\n          \"envy_salience\": 0.0,\n          \"envy_confidence\": 0.9,\n          \"compersion_raw_score\": 0.0,\n          \"compersion_salience\": 0.0,\n          \"compersion_confidence\": 1.0,\n          \"enmity_raw_score\": 0.7,\n          \"enmity_salience\": 0.65,\n          \"enmity_confidence\": 0.9,\n          \"amity_raw_score\": 0.9,\n          \"amity_salience\": 0.9,\n          \"amity_confidence\": 1.0,\n          \"fragmentative_goals_raw_score\": 0.0,\n          \"fragmentative_goals_salience\": 0.0,\n          \"fragmentative_goals_confidence\": 0.9,\n          \"cohesive_goals_raw_score\": 1.0,\n          \"cohesive_goals_salience\": 0.95,\n          \"cohesive_goals_confidence\": 1.0,\n          \"identity_tension\": 0.0,\n          \"emotional_tension\": 0.21,\n          \"success_tension\": 0.0,\n          \"relational_tension\": 0.175,\n          \"goal_tension\": 0.0,\n          \"strategic_contradiction_index\": 0.077,\n          \"descriptive_cohesion_index\": 0.244,\n          \"motivational_cohesion_index\": 0.424,\n          \"full_cohesion_index\": 0.506\n        },\n        {\n          \"index\": \"50%\",\n          \"tribal_dominance_raw_score\": 0.0,\n          \"tribal_dominance_salience\": 0.05,\n          \"tribal_dominance_confidence\": 0.9,\n          \"individual_dignity_raw_score\": 0.9,\n          \"individual_dignity_salience\": 0.9,\n          \"individual_dignity_confidence\": 0.9,\n          \"fear_raw_score\": 0.7,\n          \"fear_salience\": 0.6,\n          \"fear_confidence\": 0.9,\n          \"hope_raw_score\": 0.9,\n          \"hope_salience\": 0.9,\n          \"hope_confidence\": 1.0,\n          \"envy_raw_score\": 0.0,\n          \"envy_salience\": 0.0,\n          \"envy_confidence\": 0.9,\n          \"compersion_raw_score\": 0.0,\n          \"compersion_salience\": 0.0,\n          \"compersion_confidence\": 1.0,\n          \"enmity_raw_score\": 0.7,\n          \"enmity_salience\": 0.65,\n          \"enmity_confidence\": 0.9,\n          \"amity_raw_score\": 0.9,\n          \"amity_salience\": 0.9,\n          \"amity_confidence\": 1.0,\n          \"fragmentative_goals_raw_score\": 0.0,\n          \"fragmentative_goals_salience\": 0.0,\n          \"fragmentative_goals_confidence\": 0.9,\n          \"cohesive_goals_raw_score\": 1.0,\n          \"cohesive_goals_salience\": 0.95,\n          \"cohesive_goals_confidence\": 1.0,\n          \"identity_tension\": 0.0,\n          \"emotional_tension\": 0.21,\n          \"success_tension\": 0.0,\n          \"relational_tension\": 0.175,\n          \"goal_tension\": 0.0,\n          \"strategic_contradiction_index\": 0.077,\n          \"descriptive_cohesion_index\": 0.244,\n          \"motivational_cohesion_index\": 0.424,\n          \"full_cohesion_index\": 0.506\n        },\n        {\n          \"index\": \"75%\",\n          \"tribal_dominance_raw_score\": 0.0,\n          \"tribal_dominance_salience\": 0.05,\n          \"tribal_dominance_confidence\": 0.9,\n          \"individual_dignity_raw_score\": 0.9,\n          \"individual_dignity_salience\": 0.9,\n          \"individual_dignity_confidence\": 0.9,\n          \"fear_raw_score\": 0.7,\n          \"fear_salience\": 0.6,\n          \"fear_confidence\": 0.9,\n          \"hope_raw_score\": 0.9,\n          \"hope_salience\": 0.9,\n          \"hope_confidence\": 1.0,\n          \"envy_raw_score\": 0.0,\n          \"envy_salience\": 0.0,\n          \"envy_confidence\": 0.9,\n          \"compersion_raw_score\": 0.0,\n          \"compersion_salience\": 0.0,\n          \"compersion_confidence\": 1.0,\n          \"enmity_raw_score\": 0.7,\n          \"enmity_salience\": 0.65,\n          \"enmity_confidence\": 0.9,\n          \"amity_raw_score\": 0.9,\n          \"amity_salience\": 0.9,\n          \"amity_confidence\": 1.0,\n          \"fragmentative_goals_raw_score\": 0.0,\n          \"fragmentative_goals_salience\": 0.0,\n          \"fragmentative_goals_confidence\": 0.9,\n          \"cohesive_goals_raw_score\": 1.0,\n          \"cohesive_goals_salience\": 0.95,\n          \"cohesive_goals_confidence\": 1.0,\n          \"identity_tension\": 0.0,\n          \"emotional_tension\": 0.21,\n          \"success_tension\": 0.0,\n          \"relational_tension\": 0.175,\n          \"goal_tension\": 0.0,\n          \"strategic_contradiction_index\": 0.077,\n          \"descriptive_cohesion_index\": 0.244,\n          \"motivational_cohesion_index\": 0.424,\n          \"full_cohesion_index\": 0.506\n        },\n        {\n          \"index\": \"max\",\n          \"tribal_dominance_raw_score\": 0.0,\n          \"tribal_dominance_salience\": 0.05,\n          \"tribal_dominance_confidence\": 0.9,\n          \"individual_dignity_raw_score\": 0.9,\n          \"individual_dignity_salience\": 0.9,\n          \"individual_dignity_confidence\": 0.9,\n          \"fear_raw_score\": 0.7,\n          \"fear_salience\": 0.6,\n          \"fear_confidence\": 0.9,\n          \"hope_raw_score\": 0.9,\n          \"hope_salience\": 0.9,\n          \"hope_confidence\": 1.0,\n          \"envy_raw_score\": 0.0,\n          \"envy_salience\": 0.0,\n          \"envy_confidence\": 0.9,\n          \"compersion_raw_score\": 0.0,\n          \"compersion_salience\": 0.0,\n          \"compersion_confidence\": 1.0,\n          \"enmity_raw_score\": 0.7,\n          \"enmity_salience\": 0.65,\n          \"enmity_confidence\": 0.9,\n          \"amity_raw_score\": 0.9,\n          \"amity_salience\": 0.9,\n          \"amity_confidence\": 1.0,\n          \"fragmentative_goals_raw_score\": 0.0,\n          \"fragmentative_goals_salience\": 0.0,\n          \"fragmentative_goals_confidence\": 0.9,\n          \"cohesive_goals_raw_score\": 1.0,\n          \"cohesive_goals_salience\": 0.95,\n          \"cohesive_goals_confidence\": 1.0,\n          \"identity_tension\": 0.0,\n          \"emotional_tension\": 0.21,\n          \"success_tension\": 0.0,\n          \"relational_tension\": 0.175,\n          \"goal_tension\": 0.0,\n          \"strategic_contradiction_index\": 0.077,\n          \"descriptive_cohesion_index\": 0.244,\n          \"motivational_cohesion_index\": 0.424,\n          \"full_cohesion_index\": 0.506\n        }\n      ]\n    },\n    \"correlation_analysis\": {\n      \"summary\": \"Correlation Analysis could not be performed.\",\n      \"reason\": \"Insufficient sample size. This test requires at least 15 data points, but only 1 were available in the provided artifacts.\"\n    },\n    \"anova_analysis\": {\n      \"summary\": \"ANOVA could not be performed.\",\n      \"reason\": \"Insufficient sample size. This test requires at least 5 data points, but only 1 were available in the provided artifacts.\"\n    },\n    \"reliability_analysis\": {\n      \"summary\": \"Reliability Analysis (Cronbach's Alpha) could not be performed.\",\n      \"reason\": \"Insufficient sample size. This test requires at least 15 data points, but only 1 were available in the provided artifacts.\"\n    },\n    \"additional_analyses\": {\n      \"speaker_comparison\": {\n        \"summary\": \"Exploratory comparison of mean scores by speaker.\",\n        \"note\": \"Comparison not possible. Data is only available for 1 speaker(s) (Martin Luther King Jr.). Data for other speaker(s) is missing. Displaying available data only.\",\n        \"mean_scores_by_speaker\": [\n          {\n            \"speaker\": \"Martin Luther King Jr.\",\n            \"tribal_dominance_raw_score\": 0.0,\n            \"tribal_dominance_salience\": 0.05,\n            \"tribal_dominance_confidence\": 0.9,\n            \"individual_dignity_raw_score\": 0.9,\n            \"individual_dignity_salience\": 0.9,\n            \"individual_dignity_confidence\": 0.9,\n            \"fear_raw_score\": 0.7,\n            \"fear_salience\": 0.6,\n            \"fear_confidence\": 0.9,\n            \"hope_raw_score\": 0.9,\n            \"hope_salience\": 0.9,\n            \"hope_confidence\": 1.0,\n            \"envy_raw_score\": 0.0,\n            \"envy_salience\": 0.0,\n            \"envy_confidence\": 0.9,\n            \"compersion_raw_score\": 0.0,\n            \"compersion_salience\": 0.0,\n            \"compersion_confidence\": 1.0,\n            \"enmity_raw_score\": 0.7,\n            \"enmity_salience\": 0.65,\n            \"enmity_confidence\": 0.9,\n            \"amity_raw_score\": 0.9,\n            \"amity_salience\": 0.9,\n            \"amity_confidence\": 1.0,\n            \"fragmentative_goals_raw_score\": 0.0,\n            \"fragmentative_goals_salience\": 0.0,\n            \"fragmentative_goals_confidence\": 0.9,\n            \"cohesive_goals_raw_score\": 1.0,\n            \"cohesive_goals_salience\": 0.95,\n            \"cohesive_goals_confidence\": 1.0,\n            \"identity_tension\": 0.0,\n            \"emotional_tension\": 0.21,\n            \"success_tension\": 0.0,\n            \"relational_tension\": 0.175,\n            \"goal_tension\": 0.0,\n            \"strategic_contradiction_index\": 0.077,\n            \"descriptive_cohesion_index\": 0.244,\n            \"motivational_cohesion_index\": 0.424,\n            \"full_cohesion_index\": 0.506\n          },\n          {\n            \"speaker\": \"Malcolm X\",\n            \"tribal_dominance_raw_score\": null,\n            \"tribal_dominance_salience\": null,\n            \"tribal_dominance_confidence\": null,\n            \"individual_dignity_raw_score\": null,\n            \"individual_dignity_salience\": null,\n            \"individual_dignity_confidence\": null,\n            \"fear_raw_score\": null,\n            \"fear_salience\": null,\n            \"fear_confidence\": null,\n            \"hope_raw_score\": null,\n            \"hope_salience\": null,\n            \"hope_confidence\": null,\n            \"envy_raw_score\": null,\n            \"envy_salience\": null,\n            \"envy_confidence\": null,\n            \"compersion_raw_score\": null,\n            \"compersion_salience\": null,\n            \"compersion_confidence\": null,\n            \"enmity_raw_score\": null,\n            \"enmity_salience\": null,\n            \"enmity_confidence\": null,\n            \"amity_raw_score\": null,\n            \"amity_salience\": null,\n            \"amity_confidence\": null,\n            \"fragmentative_goals_raw_score\": null,\n            \"fragmentative_goals_salience\": null,\n            \"fragmentative_goals_confidence\": null,\n            \"cohesive_goals_raw_score\": null,\n            \"cohesive_goals_salience\": null,\n            \"cohesive_goals_confidence\": null,\n            \"identity_tension\": null,\n            \"emotional_tension\": null,\n            \"success_tension\": null,\n            \"relational_tension\": null,\n            \"goal_tension\": null,\n            \"strategic_contradiction_index\": null,\n            \"descriptive_cohesion_index\": null,\n            \"motivational_cohesion_index\": null,\n            \"full_cohesion_index\": null\n          }\n        ]\n      }\n    }\n  },\n  \"sample_size_assessment\": {\n    \"total_documents\": 1,\n    \"tier_classification\": \"TIER 3 (Exploratory)\",\n    \"power_notes\": \"CRITICAL: Insufficient data for any inferential statistical analysis. Only one of the two documents specified in the corpus manifest had corresponding analysis artifacts. All analyses are therefore restricted to exploratory descriptive statistics for a single data point (N=1). No comparative claims can be made.\"\n  },\n  \"methodology_summary\": \"Due to a sample size of N=1, the statistical analysis was restricted to TIER 3 (Exploratory). No inferential tests (t-tests, correlations, ANOVA) could be performed as the minimum data requirements were not met. The analysis focused on two main tasks: 1) Calculating descriptive statistics for the single available document (MLK's 'Letter from Birmingham Jail'). 2) Recalculating all CFF v10.0 derived metrics from the base dimensional scores to ensure correctness, as a discrepancy was noted in the provided artifacts. An exploratory comparative analysis function was created but could only display the data for the single speaker and highlight the absence of data for the other, preventing any actual comparison.\"\n}\n```", "analysis_artifacts_processed": 6, "cost_info": {"model": "vertex_ai/gemini-2.5-pro", "execution_time_seconds": 94.35216, "response_cost": 0.0, "input_tokens": 0, "output_tokens": 0, "total_tokens": 0, "prompt_length": 177555, "response_length": 29315}, "timestamp": "2025-09-20T16:27:51.285532+00:00", "artifact_hash": "c39bf891bd1b8598e4dab71aa0a51c30496ff30df1330b987ac30256f3b41058"}